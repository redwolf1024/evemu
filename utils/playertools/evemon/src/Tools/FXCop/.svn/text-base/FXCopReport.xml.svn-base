<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft fxcop 10.0\Xml\FxCopReport.xsl"?>
<FxCopReport Version="10.0">
 <Namespaces>
  <Namespace Name="EVEMon">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Accounting">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Accounting' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Attributes">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'EVEMon.Common.Attributes' with another namespace.</Issue>
    </Message>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Attributes' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Collections">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Collections' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Controls">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Controls' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Data">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Data' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.IgbService">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.IgbService' by changing it to 'Eve'.</Issue>
    </Message>
    <Message Id="Igb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Igb' in namespace name 'EVEMon.Common.IgbService'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Notifications">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Notifications' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Scheduling">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Scheduling' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Serialization">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'EVEMon.Common.Serialization' with another namespace.</Issue>
    </Message>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Serialization' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Serialization.API">
   <Messages>
    <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'API' in namespace name 'EVEMon.Common.Serialization.API' by changing it to 'Api'.</Issue>
    </Message>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Serialization.API' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Serialization.Battleclinic">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'EVEMon.Common.Serialization.Battleclinic' with another namespace.</Issue>
    </Message>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Serialization.Battleclinic' by changing it to 'Eve'.</Issue>
    </Message>
    <Message Id="Battleclinic" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Battleclinic' in namespace name 'EVEMon.Common.Serialization.Battleclinic'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Serialization.Exportation">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Serialization.Exportation' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Serialization.Importation">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Serialization.Importation' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Serialization.Settings">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Serialization.Settings' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.SettingsObjects">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.SettingsObjects' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Common.Threading">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Common.Threading' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Controls">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Controls' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Controls.Design">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Controls.Design' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.ExternalCalendar">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.ExternalCalendar' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.ImplantControls">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.ImplantControls' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.LogitechG15">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.LogitechG15' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.PieChart">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.PieChart' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Printing">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Printing' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Schedule">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Schedule' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.SettingsUI">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.SettingsUI' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.SkillPlanner">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.SkillPlanner' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.Watchdog">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.Watchdog' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="EVEMon.WindowsApi">
   <Messages>
    <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'EVE' in namespace name 'EVEMon.WindowsApi' by changing it to 'Eve'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="System.Linq">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'System.Linq' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="System.Windows.Forms">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'System.Windows.Forms' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="$(ProjectDir)/../../EVEMon/bin/x86/Debug/EVEMon.Common.dll">
   <Modules>
    <Module Name="evemon.common.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EVEMon.Common.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'EVE' in assembly name 'EVEMon.Common.dll' by changing it to 'Eve'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EVEMon.Common.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'EVEMon.Common.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EVEMon.Common">
       <Types>
        <Type Name="Account" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#APIKey" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Account.cs" Line="89">Correct the casing of 'API' in member name 'Account.APIKey' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Account.cs" Line="410">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Account.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Account.cs" Line="419">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Account.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryUpdateAsync(System.String,System.EventHandler`1&lt;EVEMon.Common.AccountCreationEventArgs&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Account.cs" Line="343">In method 'Account.TryUpdateAsync(string, EventHandler&lt;AccountCreationEventArgs&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UserID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Account.cs" Line="81">Correct the casing of 'ID' in member name 'Account.UserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AccountComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CompareByCompletionTime(EVEMon.Common.Account,EVEMon.Common.Account)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AccountComparer.cs" Line="87">In method 'AccountComparer.CompareByCompletionTime(Account, Account)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AccountComparer.cs" Line="87">In method 'AccountComparer.CompareByCompletionTime(Account, Account)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompareByID(EVEMon.Common.Account,EVEMon.Common.Account)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AccountComparer.cs" Line="112">Correct the casing of 'ID' in member name 'AccountComparer.CompareByID(Account, Account)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AccountComparer.cs" Line="112">In method 'AccountComparer.CompareByID(Account, Account)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AccountComparer.cs" Line="112">In method 'AccountComparer.CompareByID(Account, Account)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AccountCreationEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UserID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AccountCreationEventArgs.cs" Line="78">Correct the casing of 'ID' in member name 'AccountCreationEventArgs.UserID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AccountIgnoreList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'AccountIgnoreList' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="AccountSortCriteria" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'AccountSortCriteria.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="APIMethod" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APIMethod' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="APIMethods" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APIMethods' by changing it to 'Api'.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'APIMethods' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="APIProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APIProvider' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetMethodUrl(EVEMon.Common.APIMethods)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="108">Change the return type of 'APIProvider.GetMethodUrl(APIMethods)' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryCharacterAccountBalance(System.Int64,System.String,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="154">In member 'APIProvider.QueryCharacterAccountBalance(long, string, long)', correct the casing of 'ID' in parameter name 'charID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="154">In member 'APIProvider.QueryCharacterAccountBalance(long, string, long)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="155">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'APIProvider.QueryCharacterAccountBalance(long, string, long)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryCharactersList(System.Int64,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="178">In member 'APIProvider.QueryCharactersList(long, string)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="179">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'APIProvider.QueryCharactersList(long, string)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryMethodAsync`1(EVEMon.Common.APIMethods,EVEMon.Common.Net.HttpPostData,System.Xml.Xsl.XslCompiledTransform,EVEMon.Common.QueryCallback`1&lt;!!0&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="279">Method 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, HttpPostData, XslCompiledTransform, QueryCallback&lt;T&gt;)' passes parameter name 'callback' as the 'message' argument to a 'ArgumentNullException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="279">Method 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, HttpPostData, XslCompiledTransform, QueryCallback&lt;T&gt;)' passes 'The callback cannot be null.' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryMethodAsync`1(EVEMon.Common.APIMethods,EVEMon.Common.QueryCallback`1&lt;!!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="198">In method 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, QueryCallback&lt;T&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryMethodAsync`1(EVEMon.Common.APIMethods,System.Int64,System.String,EVEMon.Common.QueryCallback`1&lt;!!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="211">In member 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, long, string, QueryCallback&lt;T&gt;)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="211">In method 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, long, string, QueryCallback&lt;T&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="212">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, long, string, QueryCallback&lt;T&gt;)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryMethodAsync`1(EVEMon.Common.APIMethods,System.Int64,System.String,System.Int64,EVEMon.Common.QueryCallback`1&lt;!!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="226">In member 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, long, string, long, QueryCallback&lt;T&gt;)', correct the casing of 'ID' in parameter name 'charID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="226">In member 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, long, string, long, QueryCallback&lt;T&gt;)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="226">In method 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, long, string, long, QueryCallback&lt;T&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="227">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'APIProvider.QueryMethodAsync&lt;T&gt;(APIMethods, long, string, long, QueryCallback&lt;T&gt;)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QuerySkillInTraining(System.Int64,System.String,System.Int64)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="167">In member 'APIProvider.QuerySkillInTraining(long, string, long)', correct the casing of 'ID' in parameter name 'charID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="167">In member 'APIProvider.QuerySkillInTraining(long, string, long)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="168">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'APIProvider.QuerySkillInTraining(long, string, long)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Url" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="APIProvider.cs" Line="61">Change the type of property 'APIProvider.Url' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AttributesOptimizer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetResultsFromRemappingPoints(EVEMon.Common.BasePlan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="272">Change 'List&lt;AttributesOptimizer.RemappingResult&gt;' in 'AttributesOptimizer.GetResultsFromRemappingPoints(BasePlan)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OptimizeFromPlanAndRemappingPoints(EVEMon.Common.BasePlan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="257">Change 'List&lt;AttributesOptimizer.RemappingResult&gt;' in 'AttributesOptimizer.OptimizeFromPlanAndRemappingPoints(BasePlan)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AttributesOptimizer+RemappingResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'AttributesOptimizer.RemappingResult'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Skills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="65">Change 'List&lt;ISkillLevel&gt;' in 'AttributesOptimizer.RemappingResult.Skills' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString(EVEMon.Common.Character)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="character" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="148">Parameter 'character' of 'AttributesOptimizer.RemappingResult.ToString(Character)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="149">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizer.RemappingResult.ToString(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="149">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizer.RemappingResult.ToString(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="149">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizer.RemappingResult.ToString(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="149">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizer.RemappingResult.ToString(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AttributesOptimizer.cs" Line="149">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizer.RemappingResult.ToString(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AutoShrink" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DirtyCallback(System.Object)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AutoShrink.cs" Line="96">'AutoShrink.DirtyCallback(object)' calls into 'Process.GetCurrentProcess()' which has a LinkDemand. By making this call, 'Process.GetCurrentProcess()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'AutoShrink.DirtyCallback(object)'&#xD;&#xA;   -&gt;'AutoShrink.DirtyCallback(object)'&#xD;&#xA;   -&gt;'AutoShrink.DirtyImmediate()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="AutoShrink.cs" Line="96">'AutoShrink.DirtyCallback(object)' calls into 'Process.Handle.get()' which has a LinkDemand. By making this call, 'Process.Handle.get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'AutoShrink.DirtyCallback(object)'&#xD;&#xA;   -&gt;'AutoShrink.DirtyCallback(object)'&#xD;&#xA;   -&gt;'AutoShrink.DirtyImmediate()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetProcessWorkingSetSize(System.IntPtr,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'AutoShrink.SetProcessWorkingSetSize(IntPtr, int, int)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'AutoShrink.SetProcessWorkingSetSize(IntPtr, int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'min' of P/Invoke 'AutoShrink.SetProcessWorkingSetSize(IntPtr, int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'max' of P/Invoke 'AutoShrink.SetProcessWorkingSetSize(IntPtr, int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BaseCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetTotalSkillPoints()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'BaseCharacter.GetTotalSkillPoints()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SkillPoints" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="SameType" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BaseCharacter.cs" Line="25">The property name 'BaseCharacter.SkillPoints' is confusing given the existence of method 'BaseCharacter.GetSkillPoints(StaticSkill)'. Rename or remove one of these members.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BasePlan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'BasePlan' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetAllEntriesToAdd`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.String,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="688">Consider a design that does not require that 'lowestPrereqPriority' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="688">Change 'List&lt;PlanEntry&gt;' in 'BasePlan.GetAllEntriesToAdd&lt;T&gt;(IEnumerable&lt;T&gt;, string, out int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Prereq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="688">In method 'BasePlan.GetAllEntriesToAdd&lt;T&gt;(IEnumerable&lt;T&gt;, string, out int)', correct the spelling of 'Prereq' in parameter name 'lowestPrereqPriority' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllEntriesToRemove`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="638">Change 'List&lt;PlanEntry&gt;' in 'BasePlan.GetAllEntriesToRemove&lt;T&gt;(IEnumerable&lt;T&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMinimumLevel(EVEMon.Common.Data.StaticSkill)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="472">Consider changing the type of parameter 'skill' in 'BasePlan.GetMinimumLevel(StaticSkill)' from 'StaticSkill' to its base type 'IStaticSkill'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'BasePlan.m_character' or change the field to one that is an immutable reference type. If the reference type 'BaseCharacter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BasePlan.m_character' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_lookup" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'BasePlan.m_lookup' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BasePlan.m_lookup' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPriority(EVEMon.Common.PlanScratchpad,System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.PlanEntry&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="display" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="779">In member 'BasePlan.SetPriority(PlanScratchpad, IEnumerable&lt;PlanEntry&gt;, int)', correct the casing of 'display' in parameter name 'm_displayPlan' by changing it to 'Display'.</Issue>
            </Message>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="779">In method 'BasePlan.SetPriority(PlanScratchpad, IEnumerable&lt;PlanEntry&gt;, int)', correct the spelling of 'm' in parameter name 'm_displayPlan' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="779">In member 'BasePlan.SetPriority(PlanScratchpad, IEnumerable&lt;PlanEntry&gt;, int)', remove the underscores from parameter name 'm_displayPlan'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sort(EVEMon.Common.PlanEntrySort,System.Boolean,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="871">Change either member or parameter name 'sort' so that one differs from the other.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateOldTrainingTimes(EVEMon.Common.CharacterScratchpad,System.Boolean,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="time" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="BasePlan.cs" Line="952">'BasePlan.UpdateOldTrainingTimes(CharacterScratchpad, bool, bool)' declares a variable, 'time', of type 'DateTime', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BuyOrder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RangeDescription" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_RangeDescription()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="560">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BuyOrder.RangeDescription.get()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="564">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BuyOrder.RangeDescription.get()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
              <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="560">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'BuyOrder.RangeDescription.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="564">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'BuyOrder.RangeDescription.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="CCPCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CCP' in type name 'CCPCharacter' by changing it to 'Ccp'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AdornedName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_AdornedName()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CCPCharacter.cs" Line="112">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CCPCharacter.AdornedName.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#IsInNPCCorporation" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NPC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CCPCharacter.cs" Line="163">Correct the casing of 'NPC' in member name 'CCPCharacter.IsInNPCCorporation' by changing it to 'Npc'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Certificate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetTrainingTime()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Certificate.cs" Line="233">Change 'Certificate.GetTrainingTime()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasAsImmediatePrerequisite(EVEMon.Common.Skill,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Certificate.cs" Line="244">Consider a design that does not require that 'neededLevel' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Certificate.cs" Line="132">Correct the casing of 'ID' in member name 'Certificate.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateCategory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'CertificateCategory' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CertificateCategory.cs" Line="49">Correct the casing of 'ID' in member name 'CertificateCategory.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CertificateCategory.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateCategoryCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CertificateCategoryCollection.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateClass" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'CertificateClass' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CertificateClass.cs" Line="72">Correct the casing of 'ID' in member name 'CertificateClass.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CertificateClass.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateClassCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CertificateClassCollection.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CertificateCollection.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Character" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.CharacterIdentity,System.Guid)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="guid" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Character.cs" Line="50">In member 'Character.Character(CharacterIdentity, Guid)', consider replacing the data type identifier 'guid' in parameter name 'guid' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CharacterID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Character.cs" Line="141">Correct the casing of 'ID' in member name 'Character.CharacterID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CorporationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Character.cs" Line="205">Correct the casing of 'ID' in member name 'Character.CorporationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Import(EVEMon.Common.Serialization.SerializableCharacterBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="nonCCPSerial" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Character.cs" Line="580">'Character.Import(SerializableCharacterBase)' declares a variable, 'nonCCPSerial', of type 'SerializableSettingsCharacter', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_attributes" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'Character.m_attributes' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_attributes' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_balance" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_balance' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_bloodLine" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="bloodLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'bloodLine' in member name 'Character.m_bloodLine' exists as a discrete term. If your usage is intended to be single word, case it as 'bloodline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_bloodLine' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_certificateCategories" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_certificateCategories' or change the field to one that is an immutable reference type. If the reference type 'CertificateCategoryCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_certificateCategories' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_certificateClasses" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_certificateClasses' or change the field to one that is an immutable reference type. If the reference type 'CertificateClassCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_certificateClasses' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_certificates" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_certificates' or change the field to one that is an immutable reference type. If the reference type 'CertificateCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_certificates' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_characterID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_characterID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_cloneName" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_cloneName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_cloneSkillPoints" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_cloneSkillPoints' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_corporationID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_corporationID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_corporationName" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_corporationName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_gender" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_gender' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_guid" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_guid' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_identity" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_identity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_implants" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_implants' or change the field to one that is an immutable reference type. If the reference type 'ImplantSetCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_implants' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_isUpdatingPortrait" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_isUpdatingPortrait' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_learningSkill" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_learningSkill' or change the field to one that is an immutable reference type. If the reference type 'Skill' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_learningSkill' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_name" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_name' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_plans" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_plans' or change the field to one that is an immutable reference type. If the reference type 'PlanCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_plans' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_race" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_race' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_skillGroups" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_skillGroups' or change the field to one that is an immutable reference type. If the reference type 'SkillGroupCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_skillGroups' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_skills" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Character.m_skills' or change the field to one that is an immutable reference type. If the reference type 'SkillCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_skills' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_uiSettings" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Character.m_uiSettings' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'CharacterAttribute' so that it does not end in 'Attribute'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Single.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="126">Because the behavior of 'float.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString()' with a call to 'float.ToString(IFormatProvider)'. If the result of 'float.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="108">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="110">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="111">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="112">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="113">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="114">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="115">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttribute.cs" Line="116">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterAttribute.ToString(string)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterAttributeScratchpad" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Single.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="178">Because the behavior of 'float.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString()' with a call to 'float.ToString(IFormatProvider)'. If the result of 'float.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="160">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="162">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="163">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="164">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="165">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="166">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="167">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterAttributeScratchpad.cs" Line="168">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterAttributeScratchpad.ToString(string)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CCPCharacter" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterCollection.cs" Line="37">Correct the casing of 'CCP' in member name 'CharacterCollection.CCPCharacter' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Guid]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="guid" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterCollection.cs" Line="62">In member 'CharacterCollection.this[Guid]', consider replacing the data type identifier 'guid' in parameter name 'guid' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterCollection.cs" Line="62">Use an integral value or string as the parameter to indexer 'CharacterCollection.this[Guid]'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Uri]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterCollection.cs" Line="82">Use an integral value or string as the parameter to indexer 'CharacterCollection.this[Uri]'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterComparer" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'CharacterComparer' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'CharacterComparer' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CompareByCompletionTime(EVEMon.Common.Character,EVEMon.Common.Character)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterComparer.cs" Line="120">In method 'CharacterComparer.CompareByCompletionTime(Character, Character)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterComparer.cs" Line="120">In method 'CharacterComparer.CompareByCompletionTime(Character, Character)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterComparer.cs" Line="124">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'CharacterComparer.CompareByCompletionTime(Character, Character)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompareByName(EVEMon.Common.Character,EVEMon.Common.Character)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterComparer.cs" Line="138">In method 'CharacterComparer.CompareByName(Character, Character)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterComparer.cs" Line="138">In method 'CharacterComparer.CompareByName(Character, Character)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterComparer.cs" Line="139">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'CharacterComparer.CompareByName(Character, Character)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterExporter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExportAsBBCode(EVEMon.Common.Character)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="276">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="278">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="279">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="280">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="281">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="282">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="271">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="275">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="245">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="246">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="247">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="248">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="249">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsBBCode(Character)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportAsCCPXML(EVEMon.Common.Character)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCPXML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="224">Correct the casing of 'CCPXML' in member name 'CharacterExporter.ExportAsCCPXML(Character)' by changing it to 'Ccpxml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportAsEFTCHR(EVEMon.Common.Character,EVEMon.Common.Plan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EFTCHR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="105">Correct the casing of 'EFTCHR' in member name 'CharacterExporter.ExportAsEFTCHR(Character, Plan)' by changing it to 'Eftchr'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportAsEVEMonXML(EVEMon.Common.Character,EVEMon.Common.Plan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="208">Correct the casing of 'EVE' in member name 'CharacterExporter.ExportAsEVEMonXML(Character, Plan)' by changing it to 'Eve'.</Issue>
            </Message>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="208">Correct the casing of 'XML' in member name 'CharacterExporter.ExportAsEVEMonXML(Character, Plan)' by changing it to 'Xml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportAsHTML(EVEMon.Common.Character,EVEMon.Common.Plan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HTML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="132">Correct the casing of 'HTML' in member name 'CharacterExporter.ExportAsHTML(Character, Plan)' by changing it to 'Html'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportAsText(EVEMon.Common.Character,EVEMon.Common.Plan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="39">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="79">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="80">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="70">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="80">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="80">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="41">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="42">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="43">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="44">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterExporter.cs" Line="45">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterExporter.ExportAsText(Character, Plan)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterIdentity" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CCPCharacter" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterIdentity.cs" Line="74">Correct the casing of 'CCP' in member name 'CharacterIdentity.CCPCharacter' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_CCPCharacter()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterIdentity.cs" Line="79">'character', a variable, is cast to type 'CCPCharacter' multiple times in method 'CharacterIdentity.CCPCharacter.get()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CharacterID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterIdentity.cs" Line="36">Correct the casing of 'ID' in member name 'CharacterIdentity.CharacterID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterSaveFormat" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CCPXML" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCPXML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CCPXML' in member name 'CharacterSaveFormat.CCPXML' by changing it to 'Ccpxml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EFTCHR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EFTCHR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EFTCHR' in member name 'CharacterSaveFormat.EFTCHR' by changing it to 'Eftchr'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EVEMonXML" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVE' in member name 'CharacterSaveFormat.EVEMonXML' by changing it to 'Eve'.</Issue>
            </Message>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'XML' in member name 'CharacterSaveFormat.EVEMonXML' by changing it to 'Xml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HTML" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HTML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HTML' in member name 'CharacterSaveFormat.HTML' by changing it to 'Html'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PNG" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PNG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PNG' in member name 'CharacterSaveFormat.PNG' by changing it to 'Png'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterScratchpad" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SkillPoints" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterScratchpad.cs" Line="57">The property name 'CharacterScratchpad.SkillPoints' is confusing given the existence of inherited method 'BaseCharacter.GetSkillPoints(StaticSkill)'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrainedSkills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterScratchpad.cs" Line="205">Change 'List&lt;StaticSkillLevel&gt;' in 'CharacterScratchpad.TrainedSkills' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrainingTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterScratchpad.cs" Line="196">The property name 'CharacterScratchpad.TrainingTime' is confusing given the existence of inherited method 'BaseCharacter.GetTrainingTime(ISkillLevel)'. Rename or remove this property.</Issue>
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterScratchpad.cs" Line="196">The property name 'CharacterScratchpad.TrainingTime' is confusing given the existence of inherited method 'BaseCharacter.GetTrainingTime(StaticSkill, int)'. Rename or remove this property.</Issue>
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterScratchpad.cs" Line="196">The property name 'CharacterScratchpad.TrainingTime' is confusing given the existence of inherited method 'BaseCharacter.GetTrainingTime(StaticSkill, int, TrainingOrigin)'. Rename or remove this property.</Issue>
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="CharacterScratchpad.cs" Line="196">The property name 'CharacterScratchpad.TrainingTime' is confusing given the existence of inherited method 'BaseCharacter.GetTrainingTime(int, float)'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConquerableStation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Import(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Serialization.API.SerializableOutpost&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ConquerableStation.cs" Line="139">Modify 'ConquerableStation.Import(IEnumerable&lt;SerializableOutpost&gt;)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_filename" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'ConquerableStation.m_filename' is declared as 'static readonly' but is initialized with a constant value 'ConquerableStationList'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CultureConstants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DefaultCulture" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'CultureConstants.DefaultCulture' or change the field to one that is an immutable reference type. If the reference type 'CultureInfo' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Datafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'Datafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Datafile.cs" Line="23">In member 'Datafile.Datafile(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Datafile.cs" Line="41">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Datafile.Datafile(string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Byte.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Datafile.cs" Line="41">Because the behavior of 'byte.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Datafile.Datafile(string)' with a call to 'byte.ToString(string, IFormatProvider)'. If the result of 'byte.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Filename" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Datafile.cs" Line="54">The discrete term 'Filename' in member name 'Datafile.Filename' should be expressed as a compound word, 'FileName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFullPath(System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Datafile.cs" Line="96">'Datafile.GetFullPath(string)' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Datafile.cs" Line="77">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Datafile.GetFullPath(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Datafile.cs" Line="87">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'Datafile.GetFullPath(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DescriptiveTextOptions" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'DescriptiveTextOptions', change the name of 'DescriptiveTextOptions.Default' to 'None'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DisposableWithCallback" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'DisposableWithCallback'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'DisposableWithCallback' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'DisposableWithCallback' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DownloadCallback`1" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'DownloadCallback&lt;T&gt;'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Emailer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SendMail(EVEMon.Common.SettingsObjects.NotificationSettings,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Emailer.cs" Line="218">Modify 'Emailer.SendMail(NotificationSettings, string, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Enforce" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Implementation`1(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Enforce.cs" Line="125">In member 'Enforce.Implementation&lt;T&gt;(object)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Implementation`1(System.Object,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Enforce.cs" Line="137">In member 'Enforce.Implementation&lt;T&gt;(object, string)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EnumExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HasAttribute`1(System.Enum)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EnumExtensions.cs" Line="61">Consider a design where 'EnumExtensions.HasAttribute&lt;TAttribute&gt;(this Enum)' doesn't require explicit type parameter 'TAttribute' in any call to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EveAttribute" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'EveAttribute' so that it does not end in 'Attribute'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="EveClient" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#APIProviders" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EveClient.cs" Line="294">Correct the casing of 'API' in member name 'EveClient.APIProviders' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Datafiles" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Datafiles" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EveClient.cs" Line="275">Correct the spelling of 'Datafiles' in member name 'EveClient.Datafiles' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EVEMonDataDir" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EveClient.cs" Line="245">Correct the casing of 'EVE' in member name 'EveClient.EVEMonDataDir' by changing it to 'Eve'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeFileSystemPaths()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EveClient.cs" Line="166">Change 'EveClient.InitializeFileSystemPaths()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartTraceLogging()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EveClient.cs" Line="714">'EveClient.StartTraceLogging()' calls into 'Trace.AutoFlush.set(bool)' which has a LinkDemand. By making this call, 'Trace.AutoFlush.set(bool)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'EveClient.StartTraceLogging()'&#xD;&#xA;   -&gt;'EveClient.StartTraceLogging()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Trace(System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EveClient.cs" Line="707">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'EveClient.Trace(string, params object[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TranquilityServer" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tranquility" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="EveClient.cs" Line="302">Correct the spelling of 'Tranquility' in member name 'EveClient.TranquilityServer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExceptionHandler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LogException(System.Exception,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ExceptionHandler.cs" Line="9">In method 'ExceptionHandler.LogException(Exception, bool)', consider providing a more meaningful name than parameter name 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogRethrowException(System.Exception)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ExceptionHandler.cs" Line="15">In method 'ExceptionHandler.LogRethrowException(Exception)', consider providing a more meaningful name than parameter name 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EnsureWritable(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="151">In member 'FileHelper.EnsureWritable(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasPermissionToRemoveReadOnlyAttributes" Kind="Property" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_HasPermissionToRemoveReadOnlyAttributes()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="210">Change 'FileHelper.HasPermissionToRemoveReadOnlyAttributes.get()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#OpenRead(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="20">In member 'FileHelper.OpenRead(string, bool)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="42">Change 'FileHelper.OpenRead(string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="22">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FileHelper.OpenRead(string, bool)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OverwriteOrWarnTheUser(System.String,System.Func`2&lt;System.IO.Stream,System.Boolean&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dest" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="73">In method 'FileHelper.OverwriteOrWarnTheUser(string, Func&lt;Stream, bool&gt;)', correct the spelling of 'dest' in parameter name 'destFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OverwriteOrWarnTheUser(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dest" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="100">In method 'FileHelper.OverwriteOrWarnTheUser(string, string)', correct the spelling of 'dest' in parameter name 'destFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="100">In method 'FileHelper.OverwriteOrWarnTheUser(string, string)', correct the spelling of 'src' in parameter name 'srcFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="FileHelper.cs" Line="130">Change 'FileHelper.OverwriteOrWarnTheUser(string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GetImageCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'GetImageCallback'.</Issue>
          </Message>
          <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'GetImageCallback', consider providing a more meaningful name than parameter name 'i'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GlobalAccountCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HasAccountsNotTraining(System.String&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalAccountCollection.cs" Line="32">Consider a design that does not require that 'message' be an out parameter.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalAccountCollection.cs" Line="32">The 'this' parameter (or 'Me' in Visual Basic) of 'GlobalAccountCollection.HasAccountsNotTraining(out string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Item[System.Int64]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalAccountCollection.cs" Line="71">In member 'GlobalAccountCollection.this[long]', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryAddOrUpdateAsync(System.Int64,System.String,System.EventHandler`1&lt;EVEMon.Common.AccountCreationEventArgs&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalAccountCollection.cs" Line="89">In member 'GlobalAccountCollection.TryAddOrUpdateAsync(long, string, EventHandler&lt;AccountCreationEventArgs&gt;)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalAccountCollection.cs" Line="89">In method 'GlobalAccountCollection.TryAddOrUpdateAsync(long, string, EventHandler&lt;AccountCreationEventArgs&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalAccountCollection.cs" Line="89">The 'this' parameter (or 'Me' in Visual Basic) of 'GlobalAccountCollection.TryAddOrUpdateAsync(long, string, EventHandler&lt;AccountCreationEventArgs&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GlobalAPIProviderCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'GlobalAPIProviderCollection' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DefaultProvider" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalAPIProviderCollection.cs" Line="35">The 'this' parameter (or 'Me' in Visual Basic) of 'GlobalAPIProviderCollection.DefaultProvider' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GlobalCharacterCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Item[System.Guid]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="guid" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalCharacterCollection.cs" Line="32">In member 'GlobalCharacterCollection.this[Guid]', consider replacing the data type identifier 'guid' in parameter name 'guid' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalCharacterCollection.cs" Line="32">Use an integral value or string as the parameter to indexer 'GlobalCharacterCollection.this[Guid]'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remove(EVEMon.Common.Character,System.Boolean)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalCharacterCollection.cs" Line="77">'character', a parameter, is cast to type 'CCPCharacter' multiple times in method 'GlobalCharacterCollection.Remove(Character, bool)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryAddOrUpdateFromUriAsync(System.Uri,System.EventHandler`1&lt;EVEMon.Common.UriCharacterEventArgs&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalCharacterCollection.cs" Line="89">In method 'GlobalCharacterCollection.TryAddOrUpdateFromUriAsync(Uri, EventHandler&lt;UriCharacterEventArgs&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalCharacterCollection.cs" Line="89">The 'this' parameter (or 'Me' in Visual Basic) of 'GlobalCharacterCollection.TryAddOrUpdateFromUriAsync(Uri, EventHandler&lt;UriCharacterEventArgs&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalCharacterCollection.cs" Line="95">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'GlobalCharacterCollection.TryAddOrUpdateFromUriAsync(Uri, EventHandler&lt;UriCharacterEventArgs&gt;)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GlobalDatafileCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'GlobalDatafileCollection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Refresh()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="GlobalDatafileCollection.cs" Line="36">Modify 'GlobalDatafileCollection.Refresh()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ICharacterAttribute" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'ICharacterAttribute' so that it does not end in 'Attribute'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ImageService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'ImageService' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddImageToCache(System.String,System.Drawing.Image)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImageService.cs" Line="105">Modify 'ImageService.AddImageToCache(string, Image)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCharacterImageAsync(System.Int64,EVEMon.Common.GetImageCallback)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImageService.cs" Line="39">In method 'ImageService.GetCharacterImageAsync(long, GetImageCallback)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImageService.cs" Line="40">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'ImageService.GetCharacterImageAsync(long, GetImageCallback)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImageService.cs" Line="40">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ImageService.GetCharacterImageAsync(long, GetImageCallback)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImageAsync(System.String,System.Boolean,EVEMon.Common.GetImageCallback)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImageService.cs" Line="68">Modify 'ImageService.GetImageAsync(string, bool, GetImageCallback)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImageService.cs" Line="50">In method 'ImageService.GetImageAsync(string, bool, GetImageCallback)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImageService.cs" Line="50">Change the type of parameter 'url' of method 'ImageService.GetImageAsync(string, bool, GetImageCallback)' from string to System.Uri, or provide an overload of 'ImageService.GetImageAsync(string, bool, GetImageCallback)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ImplantSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'ImplantSet' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ImplantSetCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#API" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImplantSetCollection.cs" Line="61">Correct the casing of 'API' in member name 'ImplantSetCollection.API' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OldAPI" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="ImplantSetCollection.cs" Line="69">Correct the casing of 'API' in member name 'ImplantSetCollection.OldAPI' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ImplantSlots" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'ImplantSlots' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IndustryJob" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FullLocation" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_FullLocation()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJob.cs" Line="470">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'IndustryJob.FullLocation.get()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#GetState(EVEMon.Common.Serialization.API.SerializableAPIJob)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJob.cs" Line="230">The 'this' parameter (or 'Me' in Visual Basic) of 'IndustryJob.GetState(SerializableAPIJob)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJob.cs" Line="358">Correct the casing of 'ID' in member name 'IndustryJob.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_jobsCompleted" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'IndustryJob.m_jobsCompleted' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TTC" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TTC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJob.cs" Line="342">Correct the casing of 'TTC' in member name 'IndustryJob.TTC' by changing it to 'Ttc'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IndustryJobComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CompareCore(EVEMon.Common.IndustryJob,EVEMon.Common.IndustryJob)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJobComparer.cs" Line="73">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'IndustryJobComparer.CompareCore(IndustryJob, IndustryJob)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJobComparer.cs" Line="76">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'IndustryJobComparer.CompareCore(IndustryJob, IndustryJob)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJobComparer.cs" Line="79">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'IndustryJobComparer.CompareCore(IndustryJob, IndustryJob)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJobComparer.cs" Line="82">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'IndustryJobComparer.CompareCore(IndustryJob, IndustryJob)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJobComparer.cs" Line="109">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'IndustryJobComparer.CompareCore(IndustryJob, IndustryJob)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IndustryJobComparer.cs" Line="118">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'IndustryJobComparer.CompareCore(IndustryJob, IndustryJob)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IStaticSkill" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'IStaticSkill.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IStaticSkillExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HasAsImmediatePrereq(EVEMon.Common.IStaticSkill,EVEMon.Common.IStaticSkill,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IStaticSkill.cs" Line="107">Consider a design that does not require that 'neededLevel' be an out parameter.</Issue>
            </Message>
            <Message Id="Prereq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IStaticSkill.cs" Line="107">Correct the spelling of 'Prereq' in member name 'IStaticSkillExtensions.HasAsImmediatePrereq(this IStaticSkill, IStaticSkill, out int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HasAsPrerequisite(EVEMon.Common.IStaticSkill,EVEMon.Common.IStaticSkill,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="IStaticSkill.cs" Line="67">Consider a design that does not require that 'neededLevel' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemFamily" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Bpo" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Bpo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Bpo' in member name 'ItemFamily.Bpo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StarbaseStructure" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Starbase" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Starbase' in member name 'ItemFamily.StarbaseStructure' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemMetaGroup" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'ItemMetaGroup', change the name of 'ItemMetaGroup.Empty' to 'None'.</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'ItemMetaGroup' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Deadspace" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Deadspace" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Deadspace' in member name 'ItemMetaGroup.Deadspace' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemSlot" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'ItemSlot', change the name of 'ItemSlot.Empty' to 'None'.</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'ItemSlot' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="JobState" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Canceled" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Canceled" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Canceled' in member name 'JobState.Canceled' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LearningOptions" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IgnorePrereqs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prereqs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prereqs' in member name 'LearningOptions.IgnorePrereqs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LocalXmlCache" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCharacterXml(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="LocalXmlCache.cs" Line="55">Modify member 'LocalXmlCache.GetCharacterXml(string)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="LocalXmlCache.cs" Line="41">In member 'LocalXmlCache.GetFile(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MarketOrder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Serialization.API.SerializableAPIOrder)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="46">In method 'MarketOrder.MarketOrder(SerializableAPIOrder)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(EVEMon.Common.Serialization.Settings.SerializableOrderBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="67">In method 'MarketOrder.MarketOrder(SerializableOrderBase)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Export(EVEMon.Common.Serialization.Settings.SerializableOrderBase)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="96">In method 'MarketOrder.Export(SerializableOrderBase)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Format(System.Decimal,EVEMon.Common.AbbreviationFormat)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="442">Change either member or parameter name 'format' so that one differs from the other.</Issue>
            </Message>
            <Message Id="culture" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="444">'MarketOrder.Format(decimal, AbbreviationFormat)' declares a variable, 'culture', of type 'CultureInfo', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Format(System.String,System.Decimal)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="474">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MarketOrder.Format(string, decimal)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="476">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MarketOrder.Format(string, decimal)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="478">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MarketOrder.Format(string, decimal)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="480">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MarketOrder.Format(string, decimal)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetState(EVEMon.Common.Serialization.API.SerializableAPIOrder)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="243">The 'this' parameter (or 'Me' in Visual Basic) of 'MarketOrder.GetState(SerializableAPIOrder)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetStationByID(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="217">The 'this' parameter (or 'Me' in Visual Basic) of 'MarketOrder.GetStationByID(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrder.cs" Line="300">Correct the casing of 'ID' in member name 'MarketOrder.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_duration" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_duration' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_ignored" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_ignored' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_initialVolume" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_initialVolume' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_issued" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_issued' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_issuedFor" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_issuedFor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_item" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'MarketOrder.m_item' or change the field to one that is an immutable reference type. If the reference type 'Item' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_item' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_itemID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_itemID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_lastStateChange" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_lastStateChange' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_markedForDeletion" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_markedForDeletion' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_minVolume" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_minVolume' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_orderID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_orderID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_remainingVolume" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_remainingVolume' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_state" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_state' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_station" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'MarketOrder.m_station' or change the field to one that is an immutable reference type. If the reference type 'Station' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_station' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_unitaryPrice" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MarketOrder.m_unitaryPrice' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MarketOrderCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Import(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Serialization.Settings.SerializableOrderBase&gt;)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderCollection.cs" Line="37">'srcOrder', a variable, is cast to type 'SerializableBuyOrder' multiple times in method 'MarketOrderCollection.Import(IEnumerable&lt;SerializableOrderBase&gt;)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'MarketOrderCollection.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MarketOrderComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CompareCore(EVEMon.Common.MarketOrder,EVEMon.Common.MarketOrder)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="118">'x', a parameter, is cast to type 'BuyOrder' multiple times in method 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="122">'x', a parameter, is cast to type 'BuyOrder' multiple times in method 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="122">'x', a parameter, is cast to type 'BuyOrder' multiple times in method 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="118">'y', a parameter, is cast to type 'BuyOrder' multiple times in method 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="122">'y', a parameter, is cast to type 'BuyOrder' multiple times in method 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="122">'y', a parameter, is cast to type 'BuyOrder' multiple times in method 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="80">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="MarketOrderComparer.cs" Line="83">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'MarketOrderComparer.CompareCore(MarketOrder, MarketOrder)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OrderState" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Canceled" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Canceled" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Canceled' in member name 'OrderState.Canceled' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pair`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'Pair&lt;TypeA, TypeB&gt;', prefix generic type parameter name 'TypeA' with 'T'.</Issue>
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'Pair&lt;TypeA, TypeB&gt;', prefix generic type parameter name 'TypeB' with 'T'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(!0,!1)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pair.cs" Line="27">In method 'Pair&lt;TypeA, TypeB&gt;.Pair(TypeA, TypeB)', consider providing a more meaningful name than parameter name 'a'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pair.cs" Line="27">In method 'Pair&lt;TypeA, TypeB&gt;.Pair(TypeA, TypeB)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#A" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="A" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pair.cs" Line="13">Consider providing a more meaningful name than member name 'Pair&lt;TypeA, TypeB&gt;.A'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#B" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="B" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pair.cs" Line="19">Consider providing a more meaningful name than member name 'Pair&lt;TypeA, TypeB&gt;.B'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Plan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'Plan' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AcknoledgeInvalidEntries()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Acknoledge" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Plan.cs" Line="763">Correct the spelling of 'Acknoledge' in member name 'Plan.AcknoledgeInvalidEntries()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSuggestions()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Plan.cs" Line="733">Change 'Plan.GetSuggestions()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsConnected" Kind="Property" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_IsConnected(System.Boolean)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message Id="value" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Plan.cs" Line="405">Parameter 'value' of 'Plan.IsConnected.set(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#TimeWithPrecedingLearning(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.PlanEntry&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Entries" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Plan.cs" Line="800">In member 'Plan.TimeWithPrecedingLearning(IEnumerable&lt;PlanEntry&gt;)', correct the casing of 'Entries' in parameter name 'Entries' by changing it to 'entries'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrySetPriority(EVEMon.Common.PlanScratchpad,System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.PlanEntry&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="display" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Plan.cs" Line="694">In member 'Plan.TrySetPriority(PlanScratchpad, IEnumerable&lt;PlanEntry&gt;, int)', correct the casing of 'display' in parameter name 'm_displayPlan' by changing it to 'Display'.</Issue>
            </Message>
            <Message Id="m" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Plan.cs" Line="694">In method 'Plan.TrySetPriority(PlanScratchpad, IEnumerable&lt;PlanEntry&gt;, int)', correct the spelling of 'm' in parameter name 'm_displayPlan' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Plan.cs" Line="694">In member 'Plan.TrySetPriority(PlanScratchpad, IEnumerable&lt;PlanEntry&gt;, int)', remove the underscores from parameter name 'm_displayPlan'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Compare(EVEMon.Common.Plan,EVEMon.Common.Plan)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanComparer.cs" Line="73">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'PlanComparer.Compare(Plan, Plan)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanEntry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PlanGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanEntry.cs" Line="184">Change 'List&lt;string&gt;' in 'PlanEntry.PlanGroups' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpPerHour" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanEntry.cs" Line="295">Correct the casing of 'Sp' in member name 'PlanEntry.SpPerHour' by changing it to 'SP'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanEntry.cs" Line="147">The property name 'PlanEntry.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanExporter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExportAsXML(EVEMon.Common.Plan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanExporter.cs" Line="258">Correct the casing of 'XML' in member name 'PlanExporter.ExportAsXML(Plan)' by changing it to 'Xml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImportFromXML(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanExporter.cs" Line="275">In member 'PlanExporter.ImportFromXML(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanExporter.cs" Line="275">Correct the casing of 'XML' in member name 'PlanExporter.ImportFromXML(string)' by changing it to 'Xml'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanExporter.cs" Line="309">Change 'PlanExporter.ImportFromXML(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanExporter.cs" Line="314">Change 'PlanExporter.ImportFromXML(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanExporter.cs" Line="320">Change 'PlanExporter.ImportFromXML(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanExporter.cs" Line="280">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'PlanExporter.ImportFromXML(string)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanExporter+ExportPlanEntryActions" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'PlanExporter.ExportPlanEntryActions'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PlanFormat" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Emp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Emp' in member name 'PlanFormat.Emp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanOperations" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'PlanOperations' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PlanScratchpad" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'PlanScratchpad' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PlanSorter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CompareByNotes(EVEMon.Common.PlanEntry,EVEMon.Common.PlanEntry)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanSorter.cs" Line="313">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'PlanSorter.CompareByNotes(PlanEntry, PlanEntry)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompareByPlanGroup(EVEMon.Common.PlanEntry,EVEMon.Common.PlanEntry)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanSorter.cs" Line="303">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'PlanSorter.CompareByPlanGroup(PlanEntry, PlanEntry)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FixPrerequisitesOrder(System.Collections.Generic.List`1&lt;EVEMon.Common.PlanEntry&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanSorter.cs" Line="140">The 'this' parameter (or 'Me' in Visual Basic) of 'PlanSorter.FixPrerequisitesOrder(List&lt;PlanEntry&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_skillGroupsDurations" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'PlanSorter.m_skillGroupsDurations' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OptimizeLearningSkills(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.PlanEntry&gt;,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="startSP" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="PlanSorter.cs" Line="173">Parameter 'startSP' of 'PlanSorter.OptimizeLearningSkills(IEnumerable&lt;PlanEntry&gt;, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanSuggestions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'PlanSuggestions' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Pricer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Pricer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pricer' in type name 'Pricer'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#QueryRegionalMarketOrdersAsync(System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;,System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;,System.Action`1&lt;EVEMon.Common.PricerMaketOrdersQueryResult&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pricer.cs" Line="43">In member 'Pricer.QueryRegionalMarketOrdersAsync(IEnumerable&lt;int&gt;, IEnumerable&lt;int&gt;, Action&lt;PricerMaketOrdersQueryResult&gt;)', correct the casing of 'IDs' in parameter name 'itemIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pricer.cs" Line="43">In method 'Pricer.QueryRegionalMarketOrdersAsync(IEnumerable&lt;int&gt;, IEnumerable&lt;int&gt;, Action&lt;PricerMaketOrdersQueryResult&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="itemIDs" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pricer.cs" Line="43">Parameter 'itemIDs' of 'Pricer.QueryRegionalMarketOrdersAsync(IEnumerable&lt;int&gt;, IEnumerable&lt;int&gt;, Action&lt;PricerMaketOrdersQueryResult&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="regions" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Pricer.cs" Line="43">Parameter 'regions' of 'Pricer.QueryRegionalMarketOrdersAsync(IEnumerable&lt;int&gt;, IEnumerable&lt;int&gt;, Action&lt;PricerMaketOrdersQueryResult&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PricerMaketOrdersQueryResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Maket" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Maket' in type name 'PricerMaketOrdersQueryResult'.</Issue>
          </Message>
          <Message Id="Pricer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pricer' in type name 'PricerMaketOrdersQueryResult'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryCallback`1" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'QueryCallback&lt;T&gt;'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="QueryMonitor`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EVEMon.Common.Net.INetworkChangeSubscriber.SetNetworkStatus(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="QueryMonitor.cs" Line="332">Make 'QueryMonitor&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'INetworkChangeSubscriber.SetNetworkStatus(bool)' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_cacheStyle" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_cacheStyle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_enabled" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_enabled' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_forceUpdate" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_forceUpdate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_isCanceled" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_isCanceled' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Canceled" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Canceled' in member name 'QueryMonitor&lt;T&gt;.m_isCanceled' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_isFullKeyNeeded" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_isFullKeyNeeded' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_isUpdating" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_isUpdating' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_lastResult" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_lastResult' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_lastUpdate" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_lastUpdate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_method" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_method' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_methodHeader" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_methodHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_retryOnForceUpdateError" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_retryOnForceUpdateError' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_status" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'QueryMonitor&lt;T&gt;.m_status' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryAsyncCore(EVEMon.Common.APIProvider,EVEMon.Common.QueryCallback`1&lt;!0&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="QueryMonitor.cs" Line="262">In method 'QueryMonitor&lt;T&gt;.QueryAsyncCore(APIProvider, QueryCallback&lt;T&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetNetworkStatus(System.Boolean)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="QueryMonitor.cs" Line="326">The 'this' parameter (or 'Me' in Visual Basic) of 'QueryMonitor&lt;T&gt;.SetNetworkStatus(bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="isAvailable" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="QueryMonitor.cs" Line="326">Parameter 'isAvailable' of 'QueryMonitor&lt;T&gt;.SetNetworkStatus(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Updated" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'QueryCallback&lt;T&gt;' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'QueryCallback&lt;T&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'QueryCallback&lt;T&gt;' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="QueryMonitorCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#APIResults" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="QueryMonitorCollection.cs" Line="56">Correct the casing of 'API' in member name 'QueryMonitorCollection.APIResults' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Race" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'Race' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Amarr" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Amarr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Amarr' in member name 'Race.Amarr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Caldari" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Caldari" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Caldari' in member name 'Race.Caldari' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Gallente" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Gallente" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gallente' in member name 'Race.Gallente' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Minmatar" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Minmatar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Minmatar' in member name 'Race.Minmatar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RemappingPoint" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetStringForAttribute(EVEMon.Common.EveAttribute,EVEMon.Common.CharacterScratchpad,EVEMon.Common.CharacterScratchpad)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="180">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.GetStringForAttribute(EveAttribute, CharacterScratchpad, CharacterScratchpad)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="184">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.GetStringForAttribute(EveAttribute, CharacterScratchpad, CharacterScratchpad)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToLongString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="108">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.ToLongString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToShortString()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="84">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.ToShortString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="84">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.ToShortString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="84">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.ToShortString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="84">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.ToShortString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="84">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.ToShortString()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="131">'RemappingPoint.ToString()' creates an exception of type 'NotImplementedException'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="RemappingPoint.cs" Line="129">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RemappingPoint.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RemappingPoint+PointStatus" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'RemappingPoint.PointStatus'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'Settings' conflicts in whole or in part with the namespace name 'EVEMon.Common.Serialization.Settings'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Settings.cs" Line="446">Initialize all static fields in 'Settings' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckSettingsVersion(EVEMon.Common.Serialization.Settings.SerializableSettings)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="settings" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Settings.cs" Line="411">Parameter 'settings' of 'Settings.CheckSettingsVersion(SerializableSettings)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IGB" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IGB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IGB' in member name 'Settings.IGB' by changing it to 'Igb'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Restore(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Settings.cs" Line="245">In member 'Settings.Restore(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Settings.cs" Line="253">Change 'Settings.Restore(string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryDeserializeBackup(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Settings.cs" Line="326">Change 'Settings.TryDeserializeBackup(string, string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Settings.cs" Line="330">Change 'Settings.TryDeserializeBackup(string, string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Settings.cs" Line="359">Change 'Settings.TryDeserializeBackup(string, string, bool)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Skill" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetIntForRoman(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="r" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Skill.cs" Line="559">In method 'Skill.GetIntForRoman(string)', consider providing a more meaningful name than parameter name 'r'.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Skill.cs" Line="559">Consider replacing the language-specific data type identifier 'Int' in member name 'Skill.GetIntForRoman(string)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLeftTrainingTimeToNextLevel()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Skill.cs" Line="671">Change 'Skill.GetLeftTrainingTimeToNextLevel()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRomanForInt(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ForInt" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Skill.cs" Line="535">The compound word 'ForInt' in member name 'Skill.GetRomanForInt(int)' exists as a discrete term. If your usage is intended to be single word, case it as 'Forint' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LastConfirmedLvl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lvl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Skill.cs" Line="305">Correct the spelling of 'Lvl' in member name 'Skill.LastConfirmedLvl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Implicit(EVEMon.Common.Skill):EVEMon.Common.Data.StaticSkill" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Skill.cs" Line="689">In method 'Skill.implicit operator StaticSkill(Skill)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Item[EVEMon.Common.Data.StaticSkill]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillCollection.cs" Line="76">Use an integral value or string as the parameter to indexer 'SkillCollection.this[StaticSkill]'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SkillCollection.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillEnumerableExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetAllPrerequisites(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Skill&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillEnumerableExtensions.cs" Line="32">In method 'SkillEnumerableExtensions.GetAllPrerequisites(this IEnumerable&lt;Skill&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToStatic(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Skill&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'SkillEnumerableExtensions.ToStatic(this IEnumerable&lt;Skill&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillFilter" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Lv1Ready" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Lv' in member name 'SkillFilter.Lv1Ready' by changing it to 'LV'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NoLv5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Lv" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Lv' in member name 'SkillFilter.NoLv5' by changing it to 'LV'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'SkillGroup' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillGroup.cs" Line="53">Correct the casing of 'ID' in member name 'SkillGroup.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SkillGroup.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillGroupCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SkillGroupCollection.m_character' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillLevel" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'SkillLevel' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'SkillLevel' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SkillLevelEnumerableExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AreTrained(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="42">In method 'SkillLevelEnumerableExtensions.AreTrained(this IEnumerable&lt;SkillLevel&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Contains(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;,EVEMon.Common.Skill,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="53">Consider a design that does not require that 'neededLevel' be an out parameter.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="53">In method 'SkillLevelEnumerableExtensions.Contains(this IEnumerable&lt;SkillLevel&gt;, Skill, out int)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllDependencies(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="31">In method 'SkillLevelEnumerableExtensions.GetAllDependencies(this IEnumerable&lt;SkillLevel&gt;, bool)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTotalTrainingTime(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="72">In method 'SkillLevelEnumerableExtensions.GetTotalTrainingTime(this IEnumerable&lt;SkillLevel&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTotalTrainingTime(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="92">Consider a design that does not require that 'isCurrentlyTraining' be a reference parameter.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="92">In method 'SkillLevelEnumerableExtensions.GetTotalTrainingTime(this IEnumerable&lt;SkillLevel&gt;, ref bool)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTotalTrainingTime(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;,System.Collections.Generic.Dictionary`2&lt;EVEMon.Common.Skill,System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="82">In method 'SkillLevelEnumerableExtensions.GetTotalTrainingTime(this IEnumerable&lt;SkillLevel&gt;, Dictionary&lt;Skill, int&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTotalTrainingTime(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;,System.Collections.Generic.Dictionary`2&lt;EVEMon.Common.Skill,System.Int32&gt;,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="101">Consider a design that does not require that 'isCurrentlyTraining' be a reference parameter.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="SkillLevelEnumerableExtensions.cs" Line="101">In method 'SkillLevelEnumerableExtensions.GetTotalTrainingTime(this IEnumerable&lt;SkillLevel&gt;, Dictionary&lt;Skill, int&gt;, ref bool)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToStatic(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'SkillLevelEnumerableExtensions.ToStatic(this IEnumerable&lt;SkillLevel&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillQueue" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'SkillQueue' to end in 'Collection'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'SkillQueue' so that it does not end in 'Queue'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#m_character" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SkillQueue.m_character' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TimeCheck" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckIsSynchronised(EVEMon.Common.TimeSynchronisationCallback)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeCheck.cs" Line="19">In method 'TimeCheck.CheckIsSynchronised(TimeSynchronisationCallback)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SyncDownloadCompleted(EVEMon.Common.Net.DownloadStringAsyncResult,System.Object)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeCheck.cs" Line="47">Modify 'TimeCheck.SyncDownloadCompleted(DownloadStringAsyncResult, object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeCheck.cs" Line="39">Replace the call to 'string.operator !=(string, string)' in 'TimeCheck.SyncDownloadCompleted(DownloadStringAsyncResult, object)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TimeExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildDescriptiveFragment(System.Text.StringBuilder,System.Int32,EVEMon.Common.DescriptiveTextOptions,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Char.ToUpper(System.Char)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="311">Because the behavior of 'char.ToUpper(char)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.BuildDescriptiveFragment(StringBuilder, int, DescriptiveTextOptions, string)' with a call to 'char.ToUpper(char, CultureInfo)'. If the result of 'char.ToUpper(char, CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="314">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.BuildDescriptiveFragment(StringBuilder, int, DescriptiveTextOptions, string)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="305">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.BuildDescriptiveFragment(StringBuilder, int, DescriptiveTextOptions, string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CCPTimeStringToDateTime(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="34">Correct the casing of 'CCP' in member name 'TimeExtensions.CCPTimeStringToDateTime(this string)' by changing it to 'Ccp'.</Issue>
            </Message>
            <Message Id="UTC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="34">In member 'TimeExtensions.CCPTimeStringToDateTime(this string)', correct the casing of 'UTC' in parameter name 'timeUTC' by changing it to 'Utc'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="39">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.CCPTimeStringToDateTime(this string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="39">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.CCPTimeStringToDateTime(this string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="39">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.CCPTimeStringToDateTime(this string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="39">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.CCPTimeStringToDateTime(this string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="39">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.CCPTimeStringToDateTime(this string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="39">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.CCPTimeStringToDateTime(this string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToCCPTimeString(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="16">Correct the casing of 'CCP' in member name 'TimeExtensions.ToCCPTimeString(this DateTime)' by changing it to 'Ccp'.</Issue>
            </Message>
            <Message Id="UTC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="16">In member 'TimeExtensions.ToCCPTimeString(this DateTime)', correct the casing of 'UTC' in parameter name 'timeUTC' by changing it to 'Utc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDescriptiveText(System.TimeSpan,EVEMon.Common.DescriptiveTextOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="257">In method 'TimeExtensions.ToDescriptiveText(this TimeSpan, DescriptiveTextOptions)', correct the spelling of 'dto' in parameter name 'dto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDescriptiveText(System.TimeSpan,EVEMon.Common.DescriptiveTextOptions,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dto" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="268">In method 'TimeExtensions.ToDescriptiveText(this TimeSpan, DescriptiveTextOptions, bool)', correct the spelling of 'dto' in parameter name 'dto' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToRemainingTimeDescription(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="t" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="113">In method 'TimeExtensions.ToRemainingTimeDescription(this DateTime)', consider providing a more meaningful name than parameter name 't'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="120">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="134">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="148">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="162">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToRemainingTimeShortDescription(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="t" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="62">In method 'TimeExtensions.ToRemainingTimeShortDescription(this DateTime)', consider providing a more meaningful name than parameter name 't'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="73">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeShortDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="79">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeShortDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="85">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeShortDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="91">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToRemainingTimeShortDescription(this DateTime)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToShortTimeString(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="TimeExtensions.cs" Line="247">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'TimeExtensions.ToShortTimeString(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TimeSynchronisationCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'TimeSynchronisationCallback'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UriCharacterEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetIdentity(EVEMon.Common.Serialization.SerializableCharacterBase)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="UriCharacterEventArgs.cs" Line="136">The 'this' parameter (or 'Me' in Visual Basic) of 'UriCharacterEventArgs.GetIdentity(SerializableCharacterBase)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Util" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in type name 'Util'.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'Util' conflicts in whole or in part with the namespace name 'System.Web.Util' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DeserializeDatafile`1(System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="166">'Util.DeserializeDatafile&lt;T&gt;(string)' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="171">'Util.DeserializeDatafile&lt;T&gt;(string)' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeserializeXML`1(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="77">In member 'Util.DeserializeXML&lt;T&gt;(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="77">Correct the casing of 'XML' in member name 'Util.DeserializeXML&lt;T&gt;(string)' by changing it to 'Xml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeserializeXML`1(System.String,System.Xml.Xsl.XslCompiledTransform)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="90">In member 'Util.DeserializeXML&lt;T&gt;(string, XslCompiledTransform)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="90">Correct the casing of 'XML' in member name 'Util.DeserializeXML&lt;T&gt;(string, XslCompiledTransform)' by changing it to 'Xml'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadAPIResult`1(System.String,EVEMon.Common.Net.HttpPostData,System.Xml.Xsl.XslCompiledTransform)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="256">Modify 'Util.DownloadAPIResult&lt;T&gt;(string, HttpPostData, XslCompiledTransform)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadXMLAsync`1(System.String,EVEMon.Common.Net.HttpPostData,EVEMon.Common.DownloadCallback`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="357">Correct the casing of 'XML' in member name 'Util.DownloadXMLAsync&lt;T&gt;(string, HttpPostData, DownloadCallback&lt;T&gt;)' by changing it to 'Xml'.</Issue>
            </Message>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="357">In method 'Util.DownloadXMLAsync&lt;T&gt;(string, HttpPostData, DownloadCallback&lt;T&gt;)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="358">Change the type of parameter 'url' of method 'Util.DownloadXMLAsync&lt;T&gt;(string, HttpPostData, DownloadCallback&lt;T&gt;)' from string to System.Uri, or provide an overload of 'Util.DownloadXMLAsync&lt;T&gt;(string, HttpPostData, DownloadCallback&lt;T&gt;)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRevisionNumber(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="473">In member 'Util.GetRevisionNumber(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="484">'Util.GetRevisionNumber(string)' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetXmlRootElement(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="536">In member 'Util.GetXmlRootElement(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetXMLStringRepresentation(System.Xml.XmlDocument)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XML" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="403">Correct the casing of 'XML' in member name 'Util.GetXMLStringRepresentation(XmlDocument)' by changing it to 'Xml'.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="403">Modify member 'Util.GetXMLStringRepresentation(XmlDocument)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadXSLT(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="XSLT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="56">Correct the casing of 'XSLT' in member name 'Util.LoadXSLT(string)' by changing it to 'Xslt'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenURL(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="44">Modify 'Util.OpenURL(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="39">'Util.OpenURL(string)' calls into 'Process.Start(string)' which has a LinkDemand. By making this call, 'Process.Start(string)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Util.OpenURL(string)'&#xD;&#xA;   -&gt;'Util.OpenURL(string)'</Issue>
            </Message>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="39">Correct the casing of 'URL' in member name 'Util.OpenURL(string)' by changing it to 'Url'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="39">Change the type of parameter 'url' of method 'Util.OpenURL(string)' from string to System.Uri, or provide an overload of 'Util.OpenURL(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SerializeToXmlDocument(System.Type,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="425">Modify member 'Util.SerializeToXmlDocument(Type, object)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Transform(System.Xml.XmlDocument,System.Xml.Xsl.XslCompiledTransform)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="448">Modify member 'Util.Transform(XmlDocument, XslCompiledTransform)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="448">Modify member 'Util.Transform(XmlDocument, XslCompiledTransform)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="448">Change either member or parameter name 'transform' so that one differs from the other.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UncompressToTempFile(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common" File="Util.cs" Line="494">In member 'Util.UncompressToTempFile(string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WeakReference`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">Add [Serializable] to 'WeakReference&lt;T&gt;' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Attributes">
       <Types>
        <Type Name="ForcedOnStartupAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Startup" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Startup' in type name 'ForcedOnStartupAttribute'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'ForcedOnStartupAttribute'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FullKeyAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'FullKeyAttribute'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HeaderAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'HeaderAttribute.Header' or reduce its accessibility because it corresponds to positional argument 'header'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'HeaderAttribute'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UpdateAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'max' of Attribute 'UpdateAttribute'.</Issue>
           <Issue Certainty="95" Level="Error">Add a public read-only property accessor for positional argument 'min' of Attribute 'UpdateAttribute'.</Issue>
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'UpdateAttribute.CacheStyle' or reduce its accessibility because it corresponds to positional argument 'cacheStyle'.</Issue>
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'UpdateAttribute.DefaultPeriod' or reduce its accessibility because it corresponds to positional argument 'defaultPeriod'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'UpdateAttribute'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Collections">
       <Types>
        <Type Name="BaseList`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'BaseList&lt;T&gt;' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#m_items" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'BaseList&lt;T&gt;.m_items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;T&gt;' in 'BaseList&lt;T&gt;.m_items' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnAdding(!0&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="BaseList.cs" Line="27">Consider a design that does not require that 'item' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EmptyEnumerable`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'EmptyEnumerable&lt;T&gt;' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'EmptyEnumerable&lt;T&gt;.Instance' or change the field to one that is an immutable reference type. If the reference type 'EmptyEnumerable&lt;T&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'EmptyEnumerable&lt;T&gt;.Instance' from 'EmptyEnumerable&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EmptyEnumerator`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'EmptyEnumerator&lt;T&gt;.Instance' or change the field to one that is an immutable reference type. If the reference type 'EmptyEnumerator&lt;T&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'EmptyEnumerator&lt;T&gt;.Instance' from 'EmptyEnumerator&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FastList`1" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'FastList&lt;T&gt;' to end in 'Collection'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'FastList&lt;T&gt;' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'FastList&lt;T&gt;' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IReadonlyCollection`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Readonly" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Readonly' in type name 'IReadonlyCollection&lt;T&gt;' should be expressed as a compound word, 'ReadOnly'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IReadonlyKeyedCollection`2" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Readonly" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Readonly' in type name 'IReadonlyKeyedCollection&lt;TKey, TItem&gt;' should be expressed as a compound word, 'ReadOnly'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ReadonlyCollection`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Readonly" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Readonly' in type name 'ReadonlyCollection&lt;T&gt;' should be expressed as a compound word, 'ReadOnly'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#m_items" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ReadonlyCollection&lt;T&gt;.m_items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.Generic.IEnumerable`1&lt;!0&gt;.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyCollection.cs" Line="52">Make 'ReadonlyCollection&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IEnumerable&lt;T&gt;.GetEnumerator()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.IEnumerable.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyCollection.cs" Line="57">Make 'ReadonlyCollection&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IEnumerable.GetEnumerator()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReadonlyKeyedCollection`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Readonly" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Readonly' in type name 'ReadonlyKeyedCollection&lt;TKey, TItem&gt;' should be expressed as a compound word, 'ReadOnly'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EVEMon.Common.Collections.IReadonlyKeyedCollection`2&lt;!0,!1&gt;.Item[!0]" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#EVEMon.Common.Collections.IReadonlyKeyedCollection`2&lt;!0,!1&gt;.get_Item(!0)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyKeyedCollection.cs" Line="58">Make 'ReadonlyKeyedCollection&lt;TKey, TItem&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IReadonlyKeyedCollection&lt;TKey, TItem&gt;.this.get(TKey)' and is visible to derived classes.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#m_items" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ReadonlyKeyedCollection&lt;TKey, TItem&gt;.m_items' or change the field to one that is an immutable reference type. If the reference type 'Dictionary&lt;TKey, TItem&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ReadonlyKeyedCollection&lt;TKey, TItem&gt;.m_items' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.Generic.IEnumerable`1&lt;!1&gt;.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyKeyedCollection.cs" Line="44">Make 'ReadonlyKeyedCollection&lt;TKey, TItem&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IEnumerable&lt;TItem&gt;.GetEnumerator()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.IEnumerable.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyKeyedCollection.cs" Line="49">Make 'ReadonlyKeyedCollection&lt;TKey, TItem&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IEnumerable.GetEnumerator()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReadonlyVirtualCollection`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Readonly" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Readonly' in type name 'ReadonlyVirtualCollection&lt;T&gt;' should be expressed as a compound word, 'ReadOnly'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Count" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Count()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="item" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyVirtualCollection.cs" Line="33">'ReadonlyVirtualCollection&lt;T&gt;.Count.get()' declares a variable, 'item', of type 'T', which is never used or is only assigned to. Use this variable or remove it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#System.Collections.Generic.IEnumerable`1&lt;!0&gt;.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyVirtualCollection.cs" Line="40">Make 'ReadonlyVirtualCollection&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IEnumerable&lt;T&gt;.GetEnumerator()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Collections.IEnumerable.GetEnumerator()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="ReadonlyVirtualCollection.cs" Line="45">Make 'ReadonlyVirtualCollection&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IEnumerable.GetEnumerator()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Controls">
       <Types>
        <Type Name="BusyDialog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_lockObj" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'BusyDialog.m_lockObj' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterPortrait" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CharacterID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="64">Correct the casing of 'ID' in member name 'CharacterPortrait.CharacterID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPortraitFromCache()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="198">Modify 'CharacterPortrait.GetPortraitFromCache()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SavePortraitToCache(System.Drawing.Image)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="268">Modify 'CharacterPortrait.SavePortraitToCache(Image)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCharacterFromEVECache()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="340">Modify 'CharacterPortrait.UpdateCharacterFromEVECache()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="327">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'CharacterPortrait.UpdateCharacterFromEVECache()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="305">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterPortrait.UpdateCharacterFromEVECache()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="323">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'CharacterPortrait.UpdateCharacterFromEVECache()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CharacterPortrait.cs" Line="317">Change 'CharacterPortrait.UpdateCharacterFromEVECache()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CheckedComboBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckedIndices" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CheckedComboBox.cs" Line="148">Replace the term 'Indices' in member name 'CheckedComboBox.CheckedIndices' with the preferred alternate 'Indexes'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CheckedComboBox+CheckedComboBoxTextBuilderDelegate" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'CheckedComboBox.CheckedComboBoxTextBuilderDelegate' so that it does not end in 'Delegate'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'CheckedComboBox.CheckedComboBoxTextBuilderDelegate'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CopySaveOptionsWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.SettingsObjects.PlanExportSettings,EVEMon.Common.Plan,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CopySaveOptionsWindow.cs" Line="16">In method 'CopySaveOptionsWindow.CopySaveOptionsWindow(PlanExportSettings, Plan, bool)', consider providing a more meaningful name than parameter name 'p'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RecurseUnder(System.Windows.Forms.Control)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CopySaveOptionsWindow.cs" Line="64">'c', a variable, is cast to type 'CheckBox' multiple times in method 'CopySaveOptionsWindow.RecurseUnder(Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CustomComboBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'CustomComboBox' to protected.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'dropdown' and 'Dropdown' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dropdown" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'dropdown' in member name 'CustomComboBox.dropdown' should be expressed as a compound word, 'dropDown'.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CustomComboBox.dropdown' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTextValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'CustomComboBox.GetTextValue()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CustomComboBox+Dropdown" Kind="Class" Accessibility="Family" ExternallyVisible="True">
         <Messages>
          <Message Id="Dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Dropdown' in type name 'CustomComboBox.Dropdown' should be expressed as a compound word, 'DropDown'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Controls.CustomComboBox,System.Windows.Forms.Control)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ccb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CustomComboBox.cs" Line="50">In method 'CustomComboBox.Dropdown.Dropdown(CustomComboBox, Control)', correct the spelling of 'ccb' in parameter name 'ccbParent' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CloseDropdown(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dropdown" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CustomComboBox.cs" Line="109">The discrete term 'Dropdown' in member name 'CustomComboBox.Dropdown.CloseDropdown(bool)' should be expressed as a compound word, 'DropDown'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForceDeactivate(EVEMon.Common.Controls.CustomComboBox+CustomComboBoxEventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CustomComboBox.cs" Line="158">Consider changing the type of parameter 'e' in 'CustomComboBox.Dropdown.ForceDeactivate(CustomComboBox.CustomComboBoxEventArgs)' from 'CustomComboBox.CustomComboBoxEventArgs' to its base type 'EventArgs'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueChanged" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ValueChanged()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="CustomComboBox.cs" Line="58">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'CustomComboBox.Dropdown.ValueChanged.get()' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="EVEFolderWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'EVE' in type name 'EVEFolderWindow' by changing it to 'Eve'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EVEFolder" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EVEFolderWindow.cs" Line="45">Correct the casing of 'EVE' in member name 'EVEFolderWindow.EVEFolder' by changing it to 'Eve'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpecifyFolderRadioButton_CheckedChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EVEFolderWindow.cs" Line="79">Replace the call to 'string.operator !=(string, string)' in 'EVEFolderWindow.SpecifyFolderRadioButton_CheckedChanged(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EveImage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FetchImageResource(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EveImage.cs" Line="333">Modify 'EveImage.FetchImageResource(string, string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImage()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EveImage.cs" Line="273">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'EveImage.GetImage()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EveImage.cs" Line="293">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'EveImage.GetImage()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EveImage.cs" Line="283">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'EveImage.GetImage()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImageType(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EveImage.cs" Line="216">The 'this' parameter (or 'Me' in Visual Basic) of 'EveImage.GetImageType(Item)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopUpEnabled" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PopUp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EveImage.cs" Line="47">The compound word 'PopUp' in member name 'EveImage.PopUpEnabled' exists as a discrete term. If your usage is intended to be single word, case it as 'Popup' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Size" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Size(System.Drawing.Size)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="value" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="EveImage.cs" Line="100">Parameter 'value' of 'EveImage.Size.set(Size)' is never used. Remove the parameter or use it in the method body.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="EveImage+EveImageSize" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">The constituent members of 'EveImage.EveImageSize' appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'EveImage.EveImageSize'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#x0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'EveImage.EveImageSize.x0' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x128" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'EveImage.EveImageSize.x128' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x16" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'EveImage.EveImageSize.x16' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x256" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'EveImage.EveImageSize.x256' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x32" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'EveImage.EveImageSize.x32' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'EveImage.EveImageSize.x64' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EveImagePopUp" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="PopUp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PopUp' in type name 'EveImagePopUp' exists as a discrete term. If your usage is intended to be single word, case it as 'Popup'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="EVEMonForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'EVE' in type name 'EVEMonForm' by changing it to 'Eve'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MessageBoxCustom" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#cbUnchecked" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageBoxCustom.cbUnchecked' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'cb' in member name 'MessageBoxCustom.cbUnchecked' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDialogResult(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="MsgBoxCustom.cs" Line="243">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageBoxCustom.GetDialogResult(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageBeep(System.Windows.Forms.MessageBoxIcon)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="MsgBoxCustom.cs" Line="210">The 'this' parameter (or 'Me' in Visual Basic) of 'MessageBoxCustom.MessageBeep(MessageBoxIcon)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="MsgBoxCustom.cs" Line="92">In method 'MessageBoxCustom.Show(IWin32Window, string, string, string)', correct the spelling of 'cb' in parameter name 'cbText' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.Windows.Forms.MessageBoxButtons)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="MsgBoxCustom.cs" Line="79">In method 'MessageBoxCustom.Show(IWin32Window, string, string, string, MessageBoxButtons)', correct the spelling of 'cb' in parameter name 'cbText' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MessageBoxCustom+NativeMethods" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#EnableMenuItem(System.IntPtr,System.UInt32,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'MessageBoxCustom.NativeMethods.EnableMenuItem(IntPtr, uint, uint)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSystemMenu(System.IntPtr,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning">Add the MarshalAsAttribute to parameter 'bRevert' of P/Invoke 'MessageBoxCustom.NativeMethods.GetSystemMenu(IntPtr, bool)'. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NodesCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="90" Level="Error">'NodesCollection' appears to be a non-generic, strongly typed collection. Add an implementation to the instance of IList&lt;T&gt; where T is the underlying element type of 'NodesCollection'.</Issue>
          </Message>
          <Message TypeName="ICollectionImplementationsHaveStronglyTypedMembers" Category="Microsoft.Design" CheckId="CA1035" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">'NodesCollection' should provide a strongly typed implementation of ICollection.CopyTo.</Issue>
          </Message>
          <Message TypeName="TypesShouldNotExtendCertainBaseTypes" Category="Microsoft.Design" CheckId="CA1058" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="System.Collections.CollectionBase" Certainty="75" Level="Error">Change the base type of 'NodesCollection' from 'CollectionBase' to its generic equivalent 'System.Collections.ObjectModel.Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Insert(System.Int32,System.Windows.Forms.TreeNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="index" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="1670">Parameter 'index' of 'NodesCollection.Insert(int, TreeNode)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SplitButton" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PaintArrow(System.Drawing.Graphics,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="SplitButton.cs" Line="305">The 'this' parameter (or 'Me' in Visual Basic) of 'SplitButton.PaintArrow(Graphics, Rectangle)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowSplit" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="SplitButton.cs" Line="33">Because property 'SplitButton.ShowSplit' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticDataErrorForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#copyToClipboardLinkLabel_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="StaticDataErrorForm.cs" Line="80">Change 'StaticDataErrorForm.copyToClipboardLinkLabel_LinkClicked(object, LinkLabelLinkClickedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="StaticDataErrorForm.cs" Line="87">Change 'StaticDataErrorForm.copyToClipboardLinkLabel_LinkClicked(object, LinkLabelLinkClickedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TreeNodeEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="tn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'TreeNodeEventHandler', correct the spelling of 'tn' in parameter name 'tn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TreeView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetNextTreeNode(System.Windows.Forms.TreeNode,System.Boolean,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="825">The 'this' parameter (or 'Me' in Visual Basic) of 'TreeView.GetNextTreeNode(TreeNode, bool, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNodeLevel(System.Windows.Forms.TreeNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="727">The 'this' parameter (or 'Me' in Visual Basic) of 'TreeView.GetNodeLevel(TreeNode)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRootParent(System.Windows.Forms.TreeNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="767">The 'this' parameter (or 'Me' in Visual Basic) of 'TreeView.GetRootParent(TreeNode)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsChildOf(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="741">The 'this' parameter (or 'Me' in Visual Basic) of 'TreeView.IsChildOf(TreeNode, TreeNode)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsClickOnNode(System.Windows.Forms.TreeNode,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="710">The 'this' parameter (or 'Me' in Visual Basic) of 'TreeView.IsClickOnNode(TreeNode, MouseEventArgs)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsPlusMinusClicked(System.Windows.Forms.TreeNode,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="960">The 'this' parameter (or 'Me' in Visual Basic) of 'TreeView.IsPlusMinusClicked(TreeNode, MouseEventArgs)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnAfterDeselect(System.Windows.Forms.TreeNode)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="tn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="132">In method 'TreeView.OnAfterDeselect(TreeNode)', correct the spelling of 'tn' in parameter name 'tn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnBeforeDeselect(System.Windows.Forms.TreeNode)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="tn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="140">In method 'TreeView.OnBeforeDeselect(TreeNode)', correct the spelling of 'tn' in parameter name 'tn' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseUp(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="945">Modify 'TreeView.OnMouseUp(MouseEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="949">Change 'TreeView.OnMouseUp(MouseEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectionBackColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Controls" File="TreeView.cs" Line="291">Correct the spelling of 'Color' in member name 'TreeView.SelectionBackColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AfterDeselect" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="EventsShouldNotHaveBeforeOrAfterPrefix" Category="Microsoft.Naming" CheckId="CA1713" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="After" Certainty="90" Level="Error">Replace 'TreeView.AfterDeselect' with a past tense version of the event name.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BeforeDeselect" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="EventsShouldNotHaveBeforeOrAfterPrefix" Category="Microsoft.Naming" CheckId="CA1713" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Before" Certainty="90" Level="Error">Replace 'TreeView.BeforeDeselect' with a present tense version of the event name.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TreeViewSelectionMode" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MultiSelect" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'TreeViewSelectionMode.MultiSelect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MultiSelectSameLevel" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'TreeViewSelectionMode.MultiSelectSameLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MultiSelectSameLevelAndRootBranch" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'TreeViewSelectionMode.MultiSelectSameLevelAndRootBranch' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MultiSelectSameParent" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'TreeViewSelectionMode.MultiSelectSameParent' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MultiSelectSameRootBranch" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'TreeViewSelectionMode.MultiSelectSameRootBranch' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Data">
       <Types>
        <Type Name="Blueprint" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InventsBlueprint" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Blueprint.cs" Line="169">Change 'List&lt;Blueprint&gt;' in 'Blueprint.InventsBlueprint' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_inventBlueprint" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_inventBlueprint' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_materialRequirements" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_materialRequirements' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_maxProductionLimit" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_maxProductionLimit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_produceItemID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_produceItemID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_productionTime" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_productionTime' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_productivityModifier" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_productivityModifier' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_researchCopyTime" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_researchCopyTime' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_researchMaterialTime" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_researchMaterialTime' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_researchProductivityTime" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_researchProductivityTime' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_researchTechTime" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_researchTechTime' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_techLevel" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_techLevel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_wasteFactor" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Blueprint.m_wasteFactor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BlueprintMarketGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Data.BlueprintMarketGroup,EVEMon.Common.Serialization.Datafiles.SerializableBlueprintGroup)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="BlueprintMarketGroup.cs" Line="32">In method 'BlueprintMarketGroup.BlueprintMarketGroup(BlueprintMarketGroup, SerializableBlueprintGroup)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(EVEMon.Common.Serialization.Datafiles.SerializableBlueprintGroup)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="BlueprintMarketGroup.cs" Line="21">In method 'BlueprintMarketGroup.BlueprintMarketGroup(SerializableBlueprintGroup)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubGroups" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="BlueprintMarketGroup.cs" Line="49">The compound word 'SubGroups' in member name 'BlueprintMarketGroup.SubGroups' exists as a discrete term. If your usage is intended to be single word, case it as 'Subgroups' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Constellation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'Constellation' to end in 'Collection'.</Issue>
          </Message>
          <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Error">'Constellation' should override Equals since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Constellation' should define operator '!=' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Constellation' should define operator '&lt;' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Constellation' should define operator '==' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Constellation' should define operator '&gt;' since it implements IComparable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Data.Region,EVEMon.Common.Serialization.Datafiles.SerializableConstellation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Constellation.cs" Line="22">In method 'Constellation.Constellation(Region, SerializableConstellation)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompareTo(EVEMon.Common.Data.Constellation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Constellation.cs" Line="84">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'Constellation.CompareTo(Constellation)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Constellation.cs" Line="40">Correct the casing of 'ID' in member name 'Constellation.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DBConstants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AccountingSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.AccountingSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdditionalRawMaterialsForShipsGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.AdditionalRawMaterialsForShipsGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.AdditionalRawMaterialsForShipsGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdvancedLaboratoryOperationSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.AdvancedLaboratoryOperationSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdvancedMassProductionSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.AdvancedMassProductionSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdvancedSmallToLargeShipsGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.AdvancedSmallToLargeShipsGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.AdvancedSmallToLargeShipsGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AdvancedSubsystemsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.AdvancedSubsystemsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AmmosAndChargesGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.AmmosAndChargesGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AnalyticalMindSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.AnalyticalMindSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlueprintRootNonMarketGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NonMarket" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'NonMarket' in member name 'DBConstants.BlueprintRootNonMarketGroupID' exists as a discrete term. If your usage is intended to be single word, case it as 'Nonmarket' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.BlueprintRootNonMarketGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlueprintsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.BlueprintsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BombsBlueprintsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.BombsBlueprintsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BoostersChargesBlueprintsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.BoostersChargesBlueprintsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrokerRelationsSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.BrokerRelationsSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanFitShipGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.CanFitShipGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.CanFitShipGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CapitalIndustrialsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.CapitalIndustrialsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CapitalShipsGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.CapitalShipsGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.CapitalShipsGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CargoCapacityPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.CargoCapacityPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChargeGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.ChargeGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.ChargeGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CharismaModifierPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.CharismaModifierPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClaritySkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ClaritySkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ComponentsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ComponentsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompressionBlueprintsGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.CompressionBlueprintsGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.CompressionBlueprintsGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CorporationManagementSkillsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.CorporationManagementSkillsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPUNeedPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CPU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CPU' in member name 'DBConstants.CPUNeedPropertyID' by changing it to 'Cpu'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.CPUNeedPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CPUOutputPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CPU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CPU' in member name 'DBConstants.CPUOutputPropertyID' by changing it to 'Cpu'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.CPUOutputPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DaytradingSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.DaytradingSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Daytrading" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Daytrading' in member name 'DBConstants.DaytradingSkillID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DronesGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.DronesGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EideticMemorySkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.EideticMemorySkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmpathySkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.EmpathySkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExhumersGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ExhumersGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FocusSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.FocusSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HiSlotEffectID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Hi" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Hi' in member name 'DBConstants.HiSlotEffectID' by changing it to 'HI'.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.HiSlotEffectID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HybridAmmunitionBlueprintsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.HybridAmmunitionBlueprintsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImplantsAndBoostersGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ImplantsAndBoostersGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImplantSlotPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ImplantSlotPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndustryModifyingPropertyIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.IndustryModifyingPropertyIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.IndustryModifyingPropertyIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IndustrySkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.IndustrySkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InstantRecallSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.InstantRecallSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IntelligenceModifierPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.IntelligenceModifierPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IronWillSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.IronWillSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LaboratoryOperationSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.LaboratoryOperationSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LauncherGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.LauncherGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.LauncherGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LearningSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.LearningSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LearningSkillsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.LearningSkillsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogicSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.LogicSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LowSlotEffectID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.LowSlotEffectID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MarketingSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MarketingSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MassProductionSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MassProductionSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MassPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MassPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MedSlotEffectID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MedSlotEffectID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MemoryModifierPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MemoryModifierPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MetaLevelPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MetaLevelPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MetallurgySkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MetallurgySkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MiningBargesGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MiningBargesGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MissilesAmmunitionBlueprintsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.MissilesAmmunitionBlueprintsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ModuleShipGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.ModuleShipGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.ModuleShipGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PerceptionModifierPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.PerceptionModifierPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PGNeedPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.PGNeedPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PGOutputPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.PGOutputPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlanetGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.PlanetGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PosCargobayAcceptGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.PosCargobayAcceptGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.PosCargobayAcceptGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Cargobay" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Cargobay' in member name 'DBConstants.PosCargobayAcceptGroupIDs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PresenceSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.PresenceSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcurementSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ProcurementSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProductionEfficiencySkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ProductionEfficiencySkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProductionRawMaterialGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.ProductionRawMaterialGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.ProductionRawMaterialGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProjectileAmmunitionBlueprintsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ProjectileAmmunitionBlueprintsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReactionGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.ReactionGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.ReactionGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReprocessingSkillPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ReprocessingSkillPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequiredSkillLevelPropertyIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.RequiredSkillLevelPropertyIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.RequiredSkillLevelPropertyIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequiredSkillPropertyIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.RequiredSkillPropertyIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.RequiredSkillPropertyIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResearchSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ResearchSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RetailSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.RetailSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScienceSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ScienceSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScientificNetworkingSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ScientificNetworkingSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScrapMetalProcessingSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ScrapMetalProcessingSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShipBonusPirateFactionPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ShipBonusPirateFactionPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShipEquipmentGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ShipEquipmentGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShipModificationsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ShipModificationsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShipsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ShipsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShipWarpSpeedPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.ShipWarpSpeedPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SkillGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.SkillGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SmallToXLargeShipsGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.SmallToXLargeShipsGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.SmallToXLargeShipsGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SocialSkillsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.SocialSkillsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpatialAwarenessSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.SpatialAwarenessSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpecialisationAsteroidGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.SpecialisationAsteroidGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.SpecialisationAsteroidGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StarbaseStructuresGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.StarbaseStructuresGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Starbase" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Starbase' in member name 'DBConstants.StarbaseStructuresGroupID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StategicComponentsGroupIDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'DBConstants.StategicComponentsGroupIDs' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
            <Message Id="IDs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'IDs' in member name 'DBConstants.StategicComponentsGroupIDs' by changing it to 'Ids'. 'Ids' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Stategic" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stategic' in member name 'DBConstants.StategicComponentsGroupIDs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubsystemsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.SubsystemsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SupplyChainManagementSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.SupplyChainManagementSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TradeSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.TradeSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TradeSkillsGroupID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.TradeSkillsGroupID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TycconSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.TycconSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="Tyccon" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tyccon' in member name 'DBConstants.TycconSkillID' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisibilitySkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.VisibilitySkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VolumePropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.VolumePropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WarpDisruptProbeBlueprintID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.WarpDisruptProbeBlueprintID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WarpSpeedMultiplierPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.WarpSpeedMultiplierPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WholesaleSkillID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.WholesaleSkillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WillpowerModifierPropertyID" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'DBConstants.WillpowerModifierPropertyID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EveProperty" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CPU" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CPU" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="145">Correct the casing of 'CPU' in member name 'EveProperty.CPU' by changing it to 'Cpu'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Format(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="258">Modify 'EveProperty.Format(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="233">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'EveProperty.Format(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="238">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'EveProperty.Format(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNumericValue(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="281">'EveProperty.GetNumericValue(Item)' calls 'float.TryParse(string, NumberStyles, IFormatProvider, out float)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="63">Correct the casing of 'ID' in member name 'EveProperty.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_owner" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'EveProperty.m_owner' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Powergrid" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Powergrid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="153">Correct the spelling of 'Powergrid' in member name 'EveProperty.Powergrid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnitID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EveProperty.cs" Line="111">Correct the casing of 'ID' in member name 'EveProperty.UnitID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EvePropertyCategory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'EvePropertyCategory' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="EvePropertyValue" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'EvePropertyValue' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'EvePropertyValue' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#FValue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_FValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Single.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EvePropertyValue.cs" Line="57">Because the behavior of 'float.Parse(string)' could vary based on the current user's locale settings, replace this call in 'EvePropertyValue.FValue.get()' with a call to 'float.Parse(string, IFormatProvider)'. If the result of 'float.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#IValue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_IValue()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EvePropertyValue.cs" Line="49">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'EvePropertyValue.IValue.get()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Implant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AttribToSlot(EVEMon.Common.EveAttribute)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="attr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Implant.cs" Line="114">In method 'Implant.AttribToSlot(EveAttribute)', correct the spelling of 'attr' in parameter name 'attr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ImplantSlot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'ImplantSlot' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Item" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetCategoryPath()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Item.cs" Line="310">Change 'Item.GetCategoryPath()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Item.cs" Line="130">Correct the casing of 'ID' in member name 'Item.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_description" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_description' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_family" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_family' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_icon" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_icon' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_id" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="mid" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'mid' in member name 'Item.m_id' exists as a discrete term. If your usage is intended to be single word, case it as 'mid' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_marketGroup" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Item.m_marketGroup' or change the field to one that is an immutable reference type. If the reference type 'MarketGroup' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_marketGroup' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_metaGroup" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_metaGroup' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_metaLevel" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_metaLevel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_name" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_name' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_prerequisites" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_prerequisites' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_properties" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Item.m_properties' or change the field to one that is an immutable reference type. If the reference type 'PropertiesCollection' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_properties' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_race" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_race' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_reprocessing" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_reprocessing' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_slot" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Item.m_slot' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryStripTail(System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Item.cs" Line="344">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'Item.TryStripTail(string, string)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MarketGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Data.MarketGroup,EVEMon.Common.Serialization.Datafiles.SerializableBlueprintGroup)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="MarketGroup.cs" Line="60">In method 'MarketGroup.MarketGroup(MarketGroup, SerializableBlueprintGroup)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(EVEMon.Common.Data.MarketGroup,EVEMon.Common.Serialization.Datafiles.SerializableMarketGroup)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="MarketGroup.cs" Line="39">In method 'MarketGroup.MarketGroup(MarketGroup, SerializableMarketGroup)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(EVEMon.Common.Serialization.Datafiles.SerializableBlueprintGroup)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="MarketGroup.cs" Line="49">In method 'MarketGroup.MarketGroup(SerializableBlueprintGroup)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(EVEMon.Common.Serialization.Datafiles.SerializableMarketGroup)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="MarketGroup.cs" Line="26">In method 'MarketGroup.MarketGroup(SerializableMarketGroup)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="MarketGroup.cs" Line="76">Correct the casing of 'ID' in member name 'MarketGroup.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubGroups" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="MarketGroup.cs" Line="92">The compound word 'SubGroups' in member name 'MarketGroup.SubGroups' exists as a discrete term. If your usage is intended to be single word, case it as 'Subgroups' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Material" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Serialization.Datafiles.SerializableMaterialQuantity)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Material.cs" Line="16">In method 'Material.Material(SerializableMaterialQuantity)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PropertiesCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Item[EVEMon.Common.Data.EveProperty]" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="EvePropertyValue.cs" Line="104">Use an integral value or string as the parameter to indexer 'PropertiesCollection.this[EveProperty]'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Region" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'Region' to end in 'Collection'.</Issue>
          </Message>
          <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Error">'Region' should override Equals since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Region' should define operator '!=' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Region' should define operator '&lt;' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Region' should define operator '==' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Region' should define operator '&gt;' since it implements IComparable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CompareTo(EVEMon.Common.Data.Region)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Region.cs" Line="65">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'Region.CompareTo(Region)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Region.cs" Line="38">Correct the casing of 'ID' in member name 'Region.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SolarSystem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'SolarSystem' to end in 'Collection'.</Issue>
          </Message>
          <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Error">'SolarSystem' should override Equals since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'SolarSystem' should define operator '!=' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'SolarSystem' should define operator '&lt;' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'SolarSystem' should define operator '==' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'SolarSystem' should define operator '&gt;' since it implements IComparable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Data.Constellation,EVEMon.Common.Serialization.Datafiles.SerializableSolarSystem)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="SolarSystem.cs" Line="28">In method 'SolarSystem.SolarSystem(Constellation, SerializableSolarSystem)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompareTo(EVEMon.Common.Data.SolarSystem)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="SolarSystem.cs" Line="183">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'SolarSystem.CompareTo(SolarSystem)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFastestPathTo(EVEMon.Common.Data.SolarSystem,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="SolarSystem.cs" Line="120">Change 'List&lt;SolarSystem&gt;' in 'SolarSystem.GetFastestPathTo(SolarSystem, float)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSystemsWithinRange(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="SolarSystem.cs" Line="109">Change 'List&lt;SolarSystemRange&gt;' in 'SolarSystem.GetSystemsWithinRange(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="SolarSystem.cs" Line="54">Correct the casing of 'ID' in member name 'SolarSystem.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Neighbors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Neighbors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Neighbors' in member name 'SolarSystem.Neighbors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SolarSystemRange" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'SolarSystemRange' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StaticBlueprints" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetBlueprintByID(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticBlueprints.cs" Line="52">Correct the casing of 'ID' in member name 'StaticBlueprints.GetBlueprintByID(int)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#s_activityByID" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StaticBlueprints.s_activityByID' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticCertificate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CompleteInitialization(EVEMon.Common.Serialization.Datafiles.SerializableCertificatePrerequisite[])" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticCertificate.cs" Line="65">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'StaticCertificate.CompleteInitialization(SerializableCertificatePrerequisite[])' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticCertificate.cs" Line="81">Correct the casing of 'ID' in member name 'StaticCertificate.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_class" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'StaticCertificate.m_class' or change the field to one that is an immutable reference type. If the reference type 'StaticCertificateClass' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'StaticCertificate.m_class' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_description" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'StaticCertificate.m_description' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_grade" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'StaticCertificate.m_grade' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_id" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="mid" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'mid' in member name 'StaticCertificate.m_id' exists as a discrete term. If your usage is intended to be single word, case it as 'mid' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'StaticCertificate.m_id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticCertificateCategory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'StaticCertificateCategory' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticCertificateCategory.cs" Line="40">Correct the casing of 'ID' in member name 'StaticCertificateCategory.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticCertificateClass" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'StaticCertificateClass' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticCertificateClass.cs" Line="44">Correct the casing of 'ID' in member name 'StaticCertificateClass.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LowestGradeCertificate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_LowestGradeCertificate()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticCertificateClass.cs" Line="92">'StaticCertificateClass.LowestGradeCertificate.get()' creates an exception of type 'NotImplementedException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticItems" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetItemByID(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticItems.cs" Line="108">Correct the casing of 'ID' in member name 'StaticItems.GetItemByID(int)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticRecommendations`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'StaticRecommendations&lt;T&gt;' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StaticSkill" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetPointsRequiredForLevel(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkill.cs" Line="369">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'StaticSkill.GetPointsRequiredForLevel(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WordWrap(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkill.cs" Line="398">The 'this' parameter (or 'Me' in Visual Basic) of 'StaticSkill.WordWrap(string, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkill.cs" Line="424">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'StaticSkill.WordWrap(string, int)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkill.cs" Line="433">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'StaticSkill.WordWrap(string, int)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkill.cs" Line="453">Replace the call to 'string.operator !=(string, string)' in 'StaticSkill.WordWrap(string, int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticSkillEnumerableExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetAllPrerequisites(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Data.StaticSkill&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'StaticSkillEnumerableExtensions.GetAllPrerequisites(this IEnumerable&lt;StaticSkill&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToCharacter(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Data.StaticSkill&gt;,EVEMon.Common.Character)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'StaticSkillEnumerableExtensions.ToCharacter(this IEnumerable&lt;StaticSkill&gt;, Character)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticSkillGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'StaticSkillGroup' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Contains(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkillGroup.cs" Line="79">In member 'StaticSkillGroup.Contains(int)', correct the casing of 'ID' in parameter name 'skillID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkillGroup.cs" Line="44">Correct the casing of 'ID' in member name 'StaticSkillGroup.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticSkillLevel" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'StaticSkillLevel' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'StaticSkillLevel' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StaticSkillLevelEnumerableExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetAllDependencies(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Data.StaticSkillLevel&gt;,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'StaticSkillLevelEnumerableExtensions.GetAllDependencies(this IEnumerable&lt;StaticSkillLevel&gt;, bool)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToCharacter(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Data.StaticSkillLevel&gt;,EVEMon.Common.Character)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'StaticSkillLevelEnumerableExtensions.ToCharacter(this IEnumerable&lt;StaticSkillLevel&gt;, Character)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StaticSkills" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ArrayIndicesCount" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkills.cs" Line="25">Replace the term 'Indices' in member name 'StaticSkills.ArrayIndicesCount' with the preferred alternate 'Indexes'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGroupByID(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkills.cs" Line="183">Correct the casing of 'ID' in member name 'StaticSkills.GetGroupByID(int)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSkill(EVEMon.Common.Serialization.Datafiles.SerializableSkillPrerequisite)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="StaticSkills.cs" Line="86">In method 'StaticSkills.GetSkill(this SerializableSkillPrerequisite)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Station" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Error">'Station' should override Equals since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Station' should define operator '!=' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Station' should define operator '&lt;' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Station' should define operator '==' since it implements IComparable.</Issue>
           <Issue Name="Operator" Certainty="75" Level="Error">'Station' should define operator '&gt;' since it implements IComparable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Data.SolarSystem,EVEMon.Common.Serialization.Datafiles.SerializableStation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Station.cs" Line="38">In method 'Station.Station(SolarSystem, SerializableStation)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(EVEMon.Common.Serialization.API.SerializableOutpost)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Station.cs" Line="26">In method 'Station.Station(SerializableOutpost)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CompareTo(EVEMon.Common.Data.Station)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Station.cs" Line="112">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'Station.CompareTo(Station)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CorporationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Station.cs" Line="69">Correct the casing of 'ID' in member name 'Station.CorporationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Data" File="Station.cs" Line="53">Correct the casing of 'ID' in member name 'Station.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StationServices" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DNATherapy" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DNA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DNA' in member name 'StationServices.DNATherapy' by changing it to 'Dna'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Interbus" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Interbus" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Interbus' in member name 'StationServices.Interbus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Paintshop" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Paintshop" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Paintshop' in member name 'StationServices.Paintshop' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.IgbService">
       <Types>
        <Type Name="IgbClientDataReadEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Igb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Igb' in type name 'IgbClientDataReadEventArgs'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Buffer" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbClientDataReadEventArgs.cs" Line="20">Change 'IgbClientDataReadEventArgs.Buffer' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IgbServer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Igb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Igb' in type name 'IgbServer'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ExtractHeaders(System.Byte[],System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="233">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'IgbServer.ExtractHeaders(byte[], Dictionary&lt;string, string&gt;)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IgbServerPort" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Igb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="46">Correct the spelling of 'Igb' in member name 'IgbServer.IgbServerPort' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessRequest(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.IO.StreamWriter)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="311">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'IgbServer.ProcessRequest(string, Dictionary&lt;string, string&gt;, StreamWriter)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="354">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'IgbServer.ProcessRequest(string, Dictionary&lt;string, string&gt;, StreamWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="354">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'IgbServer.ProcessRequest(string, Dictionary&lt;string, string&gt;, StreamWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="354">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'IgbServer.ProcessRequest(string, Dictionary&lt;string, string&gt;, StreamWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="358">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'IgbServer.ProcessRequest(string, Dictionary&lt;string, string&gt;, StreamWriter)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendOutputToClient(EVEMon.Common.IgbService.IgbTcpClient,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="187">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'IgbServer.SendOutputToClient(IgbTcpClient, Dictionary&lt;string, string&gt;, string)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbServer.cs" Line="192">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'IgbServer.SendOutputToClient(IgbTcpClient, Dictionary&lt;string, string&gt;, string)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IgbTcpClient" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Igb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Igb' in type name 'IgbTcpClient'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EndRead(System.IAsyncResult)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbTcpClient.cs" Line="135">Modify 'IgbTcpClient.EndRead(IAsyncResult)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Write(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbTcpClient.cs" Line="161">In method 'IgbTcpClient.Write(string)', correct the spelling of 'str' in parameter name 'str' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IgbTcpListener" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Igb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Igb' in type name 'IgbTcpListener'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EndAcceptTcpClient(System.IAsyncResult)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\IGBService" File="IgbTcpListener.cs" Line="134">Modify 'IgbTcpListener.EndAcceptTcpClient(IAsyncResult)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Net">
       <Types>
        <Type Name="DownloadFileAsyncResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.IO.FileInfo,EVEMon.Common.Net.HttpWebServiceException,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cancelled" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="DownloadFileAsyncResult.cs" Line="14">In member 'DownloadFileAsyncResult.DownloadFileAsyncResult(FileInfo, HttpWebServiceException, bool)', replace the term 'cancelled' in parameter name 'cancelled' with the preferred alternate 'canceled'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Cancelled" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cancelled" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="DownloadFileAsyncResult.cs" Line="33">Replace the term 'Cancelled' in member name 'DownloadFileAsyncResult.Cancelled' with the preferred alternate 'Canceled'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DownloadFileCompletedCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'DownloadFileCompletedCallback'.</Issue>
          </Message>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'DownloadFileCompletedCallback', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DownloadImageCompletedCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'DownloadImageCompletedCallback'.</Issue>
          </Message>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'DownloadImageCompletedCallback', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DownloadProgressChangedCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'DownloadProgressChangedCallback'.</Issue>
          </Message>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'DownloadProgressChangedCallback', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DownloadStringCompletedCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'DownloadStringCompletedCallback'.</Issue>
          </Message>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'DownloadStringCompletedCallback', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DownloadXmlAsyncResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Xml.XmlDocument,EVEMon.Common.Net.HttpWebServiceException)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="xdoc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="DownloadXmlAsyncResult.cs" Line="13">In method 'DownloadXmlAsyncResult.DownloadXmlAsyncResult(XmlDocument, HttpWebServiceException)', correct the spelling of 'xdoc' in parameter name 'xdoc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="DownloadXmlAsyncResult.cs" Line="13">Modify member 'DownloadXmlAsyncResult.DownloadXmlAsyncResult(XmlDocument, HttpWebServiceException)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Result" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="DownloadXmlAsyncResult.cs" Line="21">Modify member 'DownloadXmlAsyncResult.Result' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DownloadXmlCompletedCallback" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callback' in type name 'DownloadXmlCompletedCallback'.</Issue>
          </Message>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'DownloadXmlCompletedCallback', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HttpPostData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Content" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpPostData.cs" Line="25">Change 'HttpPostData.Content' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpWebService" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CancelRequest(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.cs" Line="67">The 'this' parameter (or 'Me' in Visual Basic) of 'HttpWebService.CancelRequest(object)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadFile(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.FileDownload.cs" Line="19">Change the type of parameter 'url' of method 'HttpWebService.DownloadFile(string, string)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadFile(string, string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadFileAsync(System.String,System.String,EVEMon.Common.Net.DownloadFileCompletedCallback,EVEMon.Common.Net.DownloadProgressChangedCallback)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.FileDownload.cs" Line="53">In method 'HttpWebService.DownloadFileAsync(string, string, DownloadFileCompletedCallback, DownloadProgressChangedCallback)', correct the spelling of 'Callback' in parameter name 'progressCallback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.FileDownload.cs" Line="53">In method 'HttpWebService.DownloadFileAsync(string, string, DownloadFileCompletedCallback, DownloadProgressChangedCallback)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.FileDownload.cs" Line="53">Change the type of parameter 'url' of method 'HttpWebService.DownloadFileAsync(string, string, DownloadFileCompletedCallback, DownloadProgressChangedCallback)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadFileAsync(string, string, DownloadFileCompletedCallback, DownloadProgressChangedCallback)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadFileAsyncCompleted(EVEMon.Common.Net.WebRequestAsyncState)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.FileDownload.cs" Line="76">Modify 'HttpWebService.DownloadFileAsyncCompleted(WebRequestAsyncState)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadImage(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.ImageDownload.cs" Line="22">Change the type of parameter 'url' of method 'HttpWebService.DownloadImage(string)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadImage(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadImageAsync(System.String,EVEMon.Common.Net.DownloadImageCompletedCallback,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.ImageDownload.cs" Line="47">In method 'HttpWebService.DownloadImageAsync(string, DownloadImageCompletedCallback, object)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.ImageDownload.cs" Line="47">Change the type of parameter 'url' of method 'HttpWebService.DownloadImageAsync(string, DownloadImageCompletedCallback, object)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadImageAsync(string, DownloadImageCompletedCallback, object)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.StringDownload.cs" Line="22">Change the type of parameter 'url' of method 'HttpWebService.DownloadString(string)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadString(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadStringAsync(System.String,EVEMon.Common.Net.DownloadStringCompletedCallback,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.StringDownload.cs" Line="54">In method 'HttpWebService.DownloadStringAsync(string, DownloadStringCompletedCallback, object)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.StringDownload.cs" Line="54">Change the type of parameter 'url' of method 'HttpWebService.DownloadStringAsync(string, DownloadStringCompletedCallback, object)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadStringAsync(string, DownloadStringCompletedCallback, object)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadXml(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.XmlDownload.cs" Line="23">Modify member 'HttpWebService.DownloadXml(string)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.XmlDownload.cs" Line="23">Change the type of parameter 'url' of method 'HttpWebService.DownloadXml(string)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadXml(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadXml(System.String,EVEMon.Common.Net.HttpPostData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.XmlDownload.cs" Line="34">Modify member 'HttpWebService.DownloadXml(string, HttpPostData)' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.XmlDownload.cs" Line="34">Change the type of parameter 'url' of method 'HttpWebService.DownloadXml(string, HttpPostData)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadXml(string, HttpPostData)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadXmlAsync(System.String,EVEMon.Common.Net.HttpPostData,EVEMon.Common.Net.DownloadXmlCompletedCallback,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.XmlDownload.cs" Line="64">In method 'HttpWebService.DownloadXmlAsync(string, HttpPostData, DownloadXmlCompletedCallback, object)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.XmlDownload.cs" Line="64">Change the type of parameter 'url' of method 'HttpWebService.DownloadXmlAsync(string, HttpPostData, DownloadXmlCompletedCallback, object)' from string to System.Uri, or provide an overload of 'HttpWebService.DownloadXmlAsync(string, HttpPostData, DownloadXmlCompletedCallback, object)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImage(EVEMon.Common.Net.HttpWebServiceRequest)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.ImageDownload.cs" Line="86">The 'this' parameter (or 'Me' in Visual Basic) of 'HttpWebService.GetImage(HttpWebServiceRequest)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidURL(System.String,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.cs" Line="34">Consider a design that does not require that 'errorMsg' be an out parameter.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.cs" Line="54">Modify 'HttpWebService.IsValidURL(string, out string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.cs" Line="34">Correct the casing of 'URL' in member name 'HttpWebService.IsValidURL(string, out string)' by changing it to 'Url'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebService.cs" Line="34">Change the type of parameter 'url' of method 'HttpWebService.IsValidURL(string, out string)' from string to System.Uri, or provide an overload of 'HttpWebService.IsValidURL(string, out string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpWebServiceException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'HttpWebServiceException': private HttpWebServiceException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'HttpWebServiceException': public HttpWebServiceException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'HttpWebServiceException': public HttpWebServiceException(String).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'HttpWebServiceException': public HttpWebServiceException(String, Exception).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'HttpWebServiceException' as this type implements ISerializable.</Issue>
          </Message>
          <Message TypeName="TypesShouldNotExtendCertainBaseTypes" Category="Microsoft.Design" CheckId="CA1058" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="System.ApplicationException" Certainty="75" Level="Error">Change the base type of 'HttpWebServiceException' so that it no longer extends 'ApplicationException'. This base exception type does not provide any additional value for framework classes. Extend 'System.Exception' or an existing unsealed exception type instead. Do not create a new exception base type unless there is specific value in enabling the creation of a catch handler for an entire class of exceptions.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Exception(System.String,System.Exception)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="52">Change the type of parameter 'url' of method 'HttpWebServiceException.Exception(string, Exception)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.Exception(string, Exception)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FileError(System.String,System.Exception)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="198">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.FileError(string, Exception)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="197">Change the type of parameter 'url' of method 'HttpWebServiceException.FileError(string, Exception)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.FileError(string, Exception)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImageException(System.String,System.ArgumentException)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="186">Consider changing the type of parameter 'ex' in 'HttpWebServiceException.ImageException(string, ArgumentException)' from 'ArgumentException' to its base type 'Exception'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="187">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ImageException(string, ArgumentException)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="186">Change the type of parameter 'url' of method 'HttpWebServiceException.ImageException(string, ArgumentException)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.ImageException(string, ArgumentException)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseWebException(System.Net.WebException,System.String,System.String,EVEMon.Common.Net.HttpWebServiceExceptionStatus&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="112">Consider a design that does not require that 'status' be an out parameter.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="129">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="137">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="147">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="152">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="156">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="122">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="142">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="160">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="112">Change the type of parameter 'url' of method 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.ParseWebException(WebException, string, string, out HttpWebServiceExceptionStatus)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RedirectsExceededException(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="63">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.RedirectsExceededException(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="62">Change the type of parameter 'url' of method 'HttpWebServiceException.RedirectsExceededException(string)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.RedirectsExceededException(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestsDisabledException(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="73">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.RequestsDisabledException(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="72">Change the type of parameter 'url' of method 'HttpWebServiceException.RequestsDisabledException(string)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.RequestsDisabledException(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Url" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="37">Change the type of property 'HttpWebServiceException.Url' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WebException(System.String,EVEMon.Common.Net.HttpWebServiceState,System.Net.WebException)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="86">Change the type of parameter 'url' of method 'HttpWebServiceException.WebException(string, HttpWebServiceState, WebException)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.WebException(string, HttpWebServiceState, WebException)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlException(System.String,System.Xml.XmlException)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="175">Consider changing the type of parameter 'ex' in 'HttpWebServiceException.XmlException(string, XmlException)' from 'XmlException' to its base type 'Exception'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="176">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HttpWebServiceException.XmlException(string, XmlException)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceException.cs" Line="175">Change the type of parameter 'url' of method 'HttpWebServiceException.XmlException(string, XmlException)' from string to System.Uri, or provide an overload of 'HttpWebServiceException.XmlException(string, XmlException)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpWebServiceState" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MaxBufferSize" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceState.cs" Line="27">The 'this' parameter (or 'Me' in Visual Basic) of 'HttpWebServiceState.MaxBufferSize' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxRedirects" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceState.cs" Line="51">The 'this' parameter (or 'Me' in Visual Basic) of 'HttpWebServiceState.MaxRedirects' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MinBufferSize" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Net" File="HttpWebServiceState.cs" Line="35">The 'this' parameter (or 'Me' in Visual Basic) of 'HttpWebServiceState.MinBufferSize' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Notifications">
       <Types>
        <Type Name="APIErrorNotification" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APIErrorNotification' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Notification" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_behaviour" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Notification.m_behaviour' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_category" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Notification.m_category' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_description" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Notification.m_description' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_priority" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Notification.m_priority' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_sender" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Notification.m_sender' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_userValidated" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Notification.m_userValidated' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotificationCategory" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IgbServiceException" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Igb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Igb' in member name 'NotificationCategory.IgbServiceException' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestNofitication" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Nofitication" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Nofitication' in member name 'NotificationCategory.TestNofitication' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Scheduling">
       <Types>
        <Type Name="ScheduleEntry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetRangesInPeriod(System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dt" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'ScheduleEntry.GetRangesInPeriod(DateTime, DateTime)', correct the casing of 'Dt' in parameter name 'fromDt' by changing it to 'DT'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'ScheduleEntry.GetRangesInPeriod(DateTime, DateTime)', correct the casing of 'Dt' in parameter name 'toDt' by changing it to 'DT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_endDate" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="mend" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'mend' in member name 'ScheduleEntry.m_endDate' exists as a discrete term. If your usage is intended to be single word, case it as 'mend' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleEntry.m_endDate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_options" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleEntry.m_options' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_startDate" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleEntry.m_startDate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_title" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleEntry.m_title' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ScheduleEntryOptions" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EVETime" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVE' in member name 'ScheduleEntryOptions.EVETime' by changing it to 'Eve'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ScheduleEntryTitleComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Compare(EVEMon.Common.Scheduling.ScheduleEntry,EVEMon.Common.Scheduling.ScheduleEntry)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Scheduling" File="ScheduleEntryTitleComparer.cs" Line="10">In member 'ScheduleEntryTitleComparer.Compare(ScheduleEntry, ScheduleEntry)', change parameter name 'e1' to 'x' in order to match the identifier as it has been declared in 'Comparer&lt;ScheduleEntry&gt;.Compare(ScheduleEntry, ScheduleEntry)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Scheduling" File="ScheduleEntryTitleComparer.cs" Line="10">In member 'ScheduleEntryTitleComparer.Compare(ScheduleEntry, ScheduleEntry)', change parameter name 'e2' to 'y' in order to match the identifier as it has been declared in 'Comparer&lt;ScheduleEntry&gt;.Compare(ScheduleEntry, ScheduleEntry)'.</Issue>
            </Message>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Scheduling" File="ScheduleEntryTitleComparer.cs" Line="11">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEntryTitleComparer.Compare(ScheduleEntry, ScheduleEntry)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Scheduler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Import(EVEMon.Common.Serialization.Settings.SerializableScheduler)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Scheduling" File="Scheduler.cs" Line="106">'serialEntry', a variable, is cast to type 'SerializableSimpleScheduleEntry' multiple times in method 'Scheduler.Import(SerializableScheduler)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SkillIsBlockedAt(System.DateTime,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Scheduling" File="Scheduler.cs" Line="72">Consider a design that does not require that 'blockingEntry' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Serialization">
       <Types>
        <Type Name="ISerializableCharacterIdentity" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'ISerializableCharacterIdentity.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCharacterBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BloodLine" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BloodLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'BloodLine' in member name 'SerializableCharacterBase.BloodLine' exists as a discrete term. If your usage is intended to be single word, case it as 'Bloodline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Certificates" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableCharacterBase.Certificates' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableCharacterCertificate&gt;' in 'SerializableCharacterBase.Certificates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CorporationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCharacterBase.CorporationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Skills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableCharacterBase.Skills' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableCharacterSkill&gt;' in 'SerializableCharacterBase.Skills' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Serialization.API">
       <Types>
        <Type Name="APIErrors" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APIErrors' by changing it to 'Api'.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'APIErrors' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CCP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CCP' in member name 'APIErrors.CCP' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="APIResult`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APIResult&lt;T&gt;' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Net.HttpWebServiceException)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="exc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\API" File="APIResult.cs" Line="14">In method 'APIResult&lt;T&gt;.APIResult(HttpWebServiceException)', correct the spelling of 'exc' in parameter name 'exc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.InvalidOperationException)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="exc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\API" File="APIResult.cs" Line="14">In method 'APIResult&lt;T&gt;.APIResult(InvalidOperationException)', correct the spelling of 'exc' in parameter name 'exc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Xml.XmlException)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="exc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\API" File="APIResult.cs" Line="14">In method 'APIResult&lt;T&gt;.APIResult(XmlException)', correct the spelling of 'exc' in parameter name 'exc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Xml.Xsl.XsltException)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="exc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\API" File="APIResult.cs" Line="14">In method 'APIResult&lt;T&gt;.APIResult(XsltException)', correct the spelling of 'exc' in parameter name 'exc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_CachedUntil" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\API" File="APIResult.cs" Line="168">Remove the underscores from member name 'APIResult&lt;T&gt;._CachedUntil'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_CurrentTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\API" File="APIResult.cs" Line="155">Remove the underscores from member name 'APIResult&lt;T&gt;._CurrentTime'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#APIVersion" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'API' in member name 'APIResult&lt;T&gt;.APIVersion' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CCPError" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CCP' in type name 'CCPError' by changing it to 'Ccp'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CCPJobCompletedStatus" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CCP' in type name 'CCPJobCompletedStatus' by changing it to 'Ccp'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GM_Aborted" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'CCPJobCompletedStatus.GM_Aborted'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Inflight_Unanchored" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Inflight" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Inflight' in member name 'CCPJobCompletedStatus.Inflight_Unanchored' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'CCPJobCompletedStatus.Inflight_Unanchored'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CCPOrderState" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CCP' in type name 'CCPOrderState' by changing it to 'Ccp'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Canceled" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Canceled" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Canceled' in member name 'CCPOrderState.Canceled' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IAPIResult" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'IAPIResult' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CCPError" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CCP' in member name 'IAPIResult.CCPError' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocument" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Xml" Certainty="75" Level="Error">Modify member 'IAPIResult.XmlDocument' so that it no longer exposes the concrete type 'XmlDocument'. Use IXPathNavigable to represent XML data sources.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAccountBalance" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AccountID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAccountBalance.AccountID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAccountBalanceList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Accounts" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableAccountBalanceList.Accounts' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAPICharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPICharacter' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerializableAPIImplant" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIImplant' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerializableAPIImplantSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIImplantSet' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerializableAPIJob" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIJob' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ActivityID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.ActivityID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InstalledItemLocationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.InstalledItemLocationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InstalledItemTypeID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.InstalledItemTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InstallerID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.InstallerID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JobID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.JobID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutputLocationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.OutputLocationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutputTypeID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.OutputTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SolarSystemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIJob.SolarSystemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAPIJobList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIJobList' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Jobs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableAPIJobList.Jobs' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableAPIJob&gt;' in 'SerializableAPIJobList.Jobs' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAPIOrder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIOrder' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ItemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIOrder.ItemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIOrder.OrderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OwnerID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIOrder.OwnerID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAPIOrder.StationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAPIOrderList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIOrderList' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Orders" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableAPIOrderList.Orders' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableAPIOrder&gt;' in 'SerializableAPIOrderList.Orders' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCharacterCertificate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CertificateID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCharacterCertificate.CertificateID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCharacterList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Characters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableCharacterList.Characters' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableCharacterListItem&gt;' in 'SerializableCharacterList.Characters' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCharacterListItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CorporationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCharacterListItem.CorporationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCharacterSkill" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCharacterSkill.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Skillpoints" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Skillpoints" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Skillpoints' in member name 'SerializableCharacterSkill.Skillpoints' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableConquerableStationList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Outposts" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableConquerableStationList.Outposts' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableOutpost&gt;' in 'SerializableConquerableStationList.Outposts' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableOutpost" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CorporationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableOutpost.CorporationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SolarSystemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableOutpost.SolarSystemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableOutpost.StationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StationTypeID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableOutpost.StationTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableQueuedSkill" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CCPEndTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CCP' in member name 'SerializableQueuedSkill.CCPEndTime' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CCPStartTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CCP' in member name 'SerializableQueuedSkill.CCPStartTime' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableQueuedSkill.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableServerStatus" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CCPOpen" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CCP' in member name 'SerializableServerStatus.CCPOpen' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Open" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Open()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\API" File="SerializableServerStatus.cs" Line="30">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SerializableServerStatus.Open.get()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableSkillInTraining" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TrainingTypeID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableSkillInTraining.TrainingTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableSkillQueue" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'SerializableSkillQueue' so that it does not end in 'Queue'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Queue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableSkillQueue.Queue' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableQueuedSkill&gt;' in 'SerializableSkillQueue.Queue' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Serialization.Battleclinic">
       <Types>
        <Type Name="SerializableLoadout" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in type name 'SerializableLoadout'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LoadoutId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in member name 'SerializableLoadout.LoadoutId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadoutName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\Battleclinic" File="SerializableLoadoutFeed.cs" Line="43">Correct the spelling of 'Loadout' in member name 'SerializableLoadout.LoadoutName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rating" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="rating" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'rating' in member name 'SerializableLoadout.rating' by changing it to 'Rating'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Slots" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableLoadout.Slots' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableLoadoutSlot&gt;' in 'SerializableLoadout.Slots' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableLoadoutFeed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in type name 'SerializableLoadoutFeed'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerializableLoadoutRace" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in type name 'SerializableLoadoutRace'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Loadouts" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Loadouts" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadouts' in member name 'SerializableLoadoutRace.Loadouts' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableLoadoutRace.Loadouts' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableLoadoutSlot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in type name 'SerializableLoadoutSlot'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ItemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableLoadoutSlot.ItemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Serialization.Datafiles">
       <Types>
        <Type Name="BlueprintsDatafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'BlueprintsDatafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Groups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'BlueprintsDatafile.Groups' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificatesDatafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'CertificatesDatafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Categories" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'CertificatesDatafile.Categories' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GeoDatafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'GeoDatafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Jumps" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'GeoDatafile.Jumps' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Regions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'GeoDatafile.Regions' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemsDatafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'ItemsDatafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MarketGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'ItemsDatafile.MarketGroups' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PropertiesDatafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'PropertiesDatafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Categories" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'PropertiesDatafile.Categories' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReprocessingDatafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'ReprocessingDatafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Items" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'ReprocessingDatafile.Items' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableBlueprint" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableBlueprint.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InventionTypeID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableBlueprint.InventionTypeID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableBlueprint.InventionTypeID' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrereqSkill" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prereq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prereq' in member name 'SerializableBlueprint.PrereqSkill' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableBlueprint.PrereqSkill' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProduceItemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableBlueprint.ProduceItemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReqMaterial" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Req" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Req' in member name 'SerializableBlueprint.ReqMaterial' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableBlueprint.ReqMaterial' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableBlueprintGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Blueprints" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableBlueprintGroup.Blueprints' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableBlueprintGroup.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubGroups" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SubGroups' in member name 'SerializableBlueprintGroup.SubGroups' exists as a discrete term. If your usage is intended to be single word, case it as 'Subgroups' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableBlueprintGroup.SubGroups' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCertificate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCertificate.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Prerequisites" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableCertificate.Prerequisites' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Recommendations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableCertificate.Recommendations' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCertificateCategory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Classes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableCertificateCategory.Classes' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCertificateCategory.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCertificateClass" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Certificates" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableCertificateClass.Certificates' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCertificateClass.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCertificatePrerequisite" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCertificatePrerequisite.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCertificateRecommendation" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'SerializableCertificateRecommendation' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'SerializableCertificateRecommendation' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCertificateRecommendation.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableConstellation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableConstellation.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Systems" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableConstellation.Systems' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableItem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableItem.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Prereqs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prereqs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prereqs' in member name 'SerializableItem.Prereqs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableItem.Prereqs' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Properties" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableItem.Properties' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reprocessing" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableItem.Reprocessing' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableItemMaterials" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableItemMaterials.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Materials" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableItemMaterials.Materials' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableJump" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FirstSystemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableJump.FirstSystemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SecondSystemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableJump.SecondSystemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableMarketGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableMarketGroup.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Items" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableMarketGroup.Items' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubGroups" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SubGroups' in member name 'SerializableMarketGroup.SubGroups' exists as a discrete term. If your usage is intended to be single word, case it as 'Subgroups' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableMarketGroup.SubGroups' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableMaterialQuantity" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableMaterialQuantity.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializablePrereqSkill" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Prereq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prereq' in type name 'SerializablePrereqSkill'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializablePrereqSkill.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializablePrerequisiteSkill" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializablePrerequisiteSkill.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableProperty" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableProperty.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnitID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableProperty.UnitID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializablePropertyCategory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Properties" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializablePropertyCategory.Properties' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializablePropertyValue" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializablePropertyValue.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableRegion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Constellations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableRegion.Constellations' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableRegion.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableReprocessingMaterial" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableReprocessingMaterial.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableRequiredMaterial" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableRequiredMaterial.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableSkill" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableSkill.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Prereqs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prereqs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prereqs' in member name 'SerializableSkill.Prereqs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableSkill.Prereqs' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableSkillGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableSkillGroup.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Skills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableSkillGroup.Skills' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableSkillPrerequisite" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'SerializableSkillPrerequisite' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'SerializableSkillPrerequisite' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableSkillPrerequisite.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableSolarSystem" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableSolarSystem.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SerializableSolarSystem.Stations' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#X" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'SerializableSolarSystem.X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'SerializableSolarSystem.Y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Z" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Z" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'SerializableSolarSystem.Z'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableStation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CorporationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableStation.CorporationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableStation.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillsDatafile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'SkillsDatafile'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Groups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SkillsDatafile.Groups' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Serialization.Exportation">
       <Types>
        <Type Name="OutputCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AttributeEnhancers" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OutputCharacter.AttributeEnhancers' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OutputAttributeEnhancer&gt;' in 'OutputCharacter.AttributeEnhancers' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BloodLine" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BloodLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'BloodLine' in member name 'OutputCharacter.BloodLine' exists as a discrete term. If your usage is intended to be single word, case it as 'Bloodline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Certificates" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OutputCharacter.Certificates' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OutputCertificate&gt;' in 'OutputCharacter.Certificates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CharacterID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'OutputCharacter.CharacterID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SkillGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OutputCharacter.SkillGroups' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OutputSkillGroup&gt;' in 'OutputCharacter.SkillGroups' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OutputSkillGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Skills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OutputSkillGroup.Skills' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OutputSkill&gt;' in 'OutputSkillGroup.Skills' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Serialization.Importation">
       <Types>
        <Type Name="OldExportedAttributeAdjustment" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'OldExportedAttributeAdjustment' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OldExportedAttributeEnhancers" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Inteligence" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Inteligence" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Inteligence' in member name 'OldExportedAttributeEnhancers.Inteligence' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToSerializableImplantSet()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\Importation" File="OldExportedAttributeEnhancers.cs" Line="52">The 'this' parameter (or 'Me' in Visual Basic) of 'OldExportedAttributeEnhancers.ToSerializableImplantSet()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OldExportedCertificate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CertificateID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'OldExportedCertificate.CertificateID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OldExportedCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BloodLine" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BloodLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'BloodLine' in member name 'OldExportedCharacter.BloodLine' exists as a discrete term. If your usage is intended to be single word, case it as 'Bloodline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Certificates" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OldExportedCharacter.Certificates' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OldExportedCertificate&gt;' in 'OldExportedCharacter.Certificates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SkillGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OldExportedCharacter.SkillGroups' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OldExportedSkillGroup&gt;' in 'OldExportedCharacter.SkillGroups' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToSerializableCCPCharacter()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\Importation" File="OldExportedCharacter.cs" Line="113">Correct the casing of 'CCP' in member name 'OldExportedCharacter.ToSerializableCCPCharacter()' by changing it to 'Ccp'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OldExportedSkillGroup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Skills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\Importation" File="OldExportedSkillGroup.cs" Line="39">Change 'OldExportedSkillGroup.Skills' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Serialization\Importation" File="OldExportedSkillGroup.cs" Line="39">Change 'List&lt;OldExportedSkill&gt;' in 'OldExportedSkillGroup.Skills' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OldSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Accounts" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OldSettings.Accounts' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableAccount&gt;' in 'OldSettings.Accounts' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Characters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OldSettings.Characters' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OldSettingsCharacter&gt;' in 'OldSettings.Characters' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Plans" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OldSettings.Plans' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;OldSettingsPlan&gt;' in 'OldSettings.Plans' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OldSettingsCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'OldSettingsCharacter.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OldSettingsPlan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Entries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'OldSettingsPlan.Entries' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializablePlanEntry&gt;' in 'OldSettingsPlan.Entries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Serialization.Settings">
       <Types>
        <Type Name="SerializableAccount" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableAccount.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IgnoreList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableAccount.IgnoreList' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableCharacterIdentity&gt;' in 'SerializableAccount.IgnoreList' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAPIMethod" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIMethod' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerializableAPIProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIProvider' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Methods" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableAPIProvider.Methods' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableAPIMethod&gt;' in 'SerializableAPIProvider.Methods' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Url" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'SerializableAPIProvider.Url' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAPIProviders" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIProviders' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CustomProviders" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableAPIProviders.CustomProviders' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableAPIProvider&gt;' in 'SerializableAPIProviders.CustomProviders' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableAPIUpdate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'SerializableAPIUpdate' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerializableCCPCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CCP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CCP' in type name 'SerializableCCPCharacter' by changing it to 'Ccp'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IndustryJobs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableCCPCharacter.IndustryJobs' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableJob&gt;' in 'SerializableCCPCharacter.IndustryJobs' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LastUpdates" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableCCPCharacter.LastUpdates' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableAPIUpdate&gt;' in 'SerializableCCPCharacter.LastUpdates' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MarketOrders" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableCCPCharacter.MarketOrders' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableOrderBase&gt;' in 'SerializableCCPCharacter.MarketOrders' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SkillQueue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableCCPCharacter.SkillQueue' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableQueuedSkill&gt;' in 'SerializableCCPCharacter.SkillQueue' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableCharacterIdentity" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableCharacterIdentity.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableImplantSetCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'SerializableImplantSetCollection' so that it does not end in 'Collection'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#API" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'API' in member name 'SerializableImplantSetCollection.API' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CustomSets" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableImplantSetCollection.CustomSets' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableSettingsImplantSet&gt;' in 'SerializableImplantSetCollection.CustomSets' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OldAPI" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'API' in member name 'SerializableImplantSetCollection.OldAPI' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableJob" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InstalledItemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableJob.InstalledItemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JobID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableJob.JobID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutputItemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableJob.OutputItemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SolarSystemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableJob.SolarSystemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableOrderBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ItemID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableOrderBase.ItemID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableOrderBase.OrderID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializableOrderBase.StationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializablePlan" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Entries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializablePlan.Entries' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializablePlanEntry&gt;' in 'SerializablePlan.Entries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InvalidEntries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializablePlan.InvalidEntries' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableInvalidPlanEntry&gt;' in 'SerializablePlan.InvalidEntries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializablePlanEntry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in member name 'SerializablePlanEntry.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PlanGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializablePlanEntry.PlanGroups' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'SerializablePlanEntry.PlanGroups' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error">The property name 'SerializablePlanEntry.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableScheduler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Entries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableScheduler.Entries' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableScheduleEntry&gt;' in 'SerializableScheduler.Entries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Accounts" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableSettings.Accounts' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableAccount&gt;' in 'SerializableSettings.Accounts' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#APIProviders" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'API' in member name 'SerializableSettings.APIProviders' by changing it to 'Api'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Characters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableSettings.Characters' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableSettingsCharacter&gt;' in 'SerializableSettings.Characters' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IGB" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IGB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IGB' in member name 'SerializableSettings.IGB' by changing it to 'Igb'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MonitoredCharacters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableSettings.MonitoredCharacters' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;MonitoredCharacterSettings&gt;' in 'SerializableSettings.MonitoredCharacters' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Plans" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SerializableSettings.Plans' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializablePlan&gt;' in 'SerializableSettings.Plans' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableUriCharacter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Uri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'SerializableUriCharacter.Uri' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.SettingsObjects">
       <Types>
        <Type Name="BlueprintBrowserSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MetagroupFilter" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Metagroup" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Metagroup' in member name 'BlueprintBrowserSettings.MetagroupFilter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CalendarSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GoogleURL" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="URL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'URL' in member name 'CalendarSettings.GoogleURL' by changing it to 'Url'.</Issue>
            </Message>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'CalendarSettings.GoogleURL' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateFilter" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#NextGradeUntrainable" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Untrainable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Untrainable' in member name 'CertificateFilter.NextGradeUntrainable' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterUISettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CollapsedGroups" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'CharacterUISettings.CollapsedGroups' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'CharacterUISettings.CollapsedGroups' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="G15Settings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ShowEVETime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVE' in member name 'G15Settings.ShowEVETime' by changing it to 'Eve'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GoogleCalendarReminder" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Sms" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sms" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sms' in member name 'GoogleCalendarReminder.Sms' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IGBSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="IGB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'IGB' in type name 'IGBSettings' by changing it to 'Igb'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IGBServerEnabled" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IGB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IGB' in member name 'IGBSettings.IGBServerEnabled' by changing it to 'Igb'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IGBServerPort" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IGB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IGB' in member name 'IGBSettings.IGBServerPort' by changing it to 'Igb'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IGBServerPublic" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IGB" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IGB' in member name 'IGBSettings.IGBServerPublic' by changing it to 'Igb'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IndustryJobColumn" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TTC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TTC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'TTC' in member name 'IndustryJobColumn.TTC' by changing it to 'Ttc'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IndustryJobGrouping" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ActivityDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'IndustryJobGrouping.ActivityDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EndDateDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'IndustryJobGrouping.EndDateDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InstalledItemTypeDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'IndustryJobGrouping.InstalledItemTypeDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LocationDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'IndustryJobGrouping.LocationDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutputItemTypeDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'IndustryJobGrouping.OutputItemTypeDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StateDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'IndustryJobGrouping.StateDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IndustryJobSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Columns" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'IndustryJobSettings.Columns' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemBrowserSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MetagroupFilter" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Metagroup" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Metagroup' in member name 'ItemBrowserSettings.MetagroupFilter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindowSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ShowPrereqMetSkills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Prereq" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prereq' in member name 'MainWindowSettings.ShowPrereqMetSkills' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MarketOrderGrouping" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IssuedDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'MarketOrderGrouping.IssuedDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ItemTypeDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'MarketOrderGrouping.ItemTypeDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LocationDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'MarketOrderGrouping.LocationDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OrderTypeDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'MarketOrderGrouping.OrderTypeDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StateDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'MarketOrderGrouping.StateDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MarketOrderSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Columns" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'MarketOrderSettings.Columns' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MarkupType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Markup" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Markup' in type name 'MarkupType'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="NotificationSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Categories" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'NotificationSettings.Categories' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmailServerRequiresSSL" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SSL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SSL' in member name 'NotificationSettings.EmailServerRequiresSSL' by changing it to 'Ssl'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanExportSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Markup" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Markup" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Markup' in member name 'PlanExportSettings.Markup' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanWindowSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Columns" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'PlanWindowSettings.Columns' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DimUntrainable" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Untrainable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Untrainable' in member name 'PlanWindowSettings.DimUntrainable' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnlyShowSelectionSummaryOnMultiSelect" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'PlanWindowSettings.OnlyShowSelectionSummaryOnMultiSelect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PortraitSizes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'PortraitSizes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#x16" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'PortraitSizes.x16' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x24" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'PortraitSizes.x24' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x32" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'PortraitSizes.x32' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x48" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'PortraitSizes.x48' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'PortraitSizes.x64' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x80" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'PortraitSizes.x80' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#x96" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'x' in member name 'PortraitSizes.x96' by changing it to 'X'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProxySettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Username" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Username' in member name 'ProxySettings.Username' should be expressed as a compound word, 'UserName'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchedulerUISettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BlockingColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in member name 'SchedulerUISettings.BlockingColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in member name 'SchedulerUISettings.TextColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableColor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in type name 'SerializableColor'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#A" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="A" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'SerializableColor.A'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#B" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="B" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'SerializableColor.B'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#G" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="G" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'SerializableColor.G'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Explicit(EVEMon.Common.SettingsObjects.SerializableColor):System.Drawing.Color" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="SerializableColor.cs" Line="50">In method 'SerializableColor.explicit operator Color(SerializableColor)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="SerializableColor.cs" Line="50">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'SerializableColor.explicit operator Color(SerializableColor)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Explicit(System.Drawing.Color):EVEMon.Common.SettingsObjects.SerializableColor" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="SerializableColor.cs" Line="55">In method 'SerializableColor.explicit operator SerializableColor(Color)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="SerializableColor.cs" Line="55">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'SerializableColor.explicit operator SerializableColor(Color)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#R" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="R" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'SerializableColor.R'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SerializableDictionary`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">Add [Serializable] to 'SerializableDictionary&lt;TKey, TValue&gt;' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SerializableRectangle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#op_Explicit(EVEMon.Common.SettingsObjects.SerializableRectangle):System.Drawing.Rectangle" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="SerializableRectangle.cs" Line="44">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'SerializableRectangle.explicit operator Rectangle(SerializableRectangle)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#op_Explicit(System.Drawing.Rectangle):EVEMon.Common.SettingsObjects.SerializableRectangle" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Multiple" Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="SerializableRectangle.cs" Line="49">Provide a method named 'ToXXX' or 'FromXXX' as an alternate for operator 'SerializableRectangle.explicit operator SerializableRectangle(Rectangle)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillPieChartSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Colors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'SkillPieChartSettings.Colors' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SerializableColor&gt;' in 'SkillPieChartSettings.Colors' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Colors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Colors' in member name 'SkillPieChartSettings.Colors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ToolTipNotificationBehaviour" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RepeatUntiClicked" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Unti" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Unti' in member name 'ToolTipNotificationBehaviour.RepeatUntiClicked' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayPopupSort" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#NameASC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ASC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ASC' in member name 'TrayPopupSort.NameASC' by changing it to 'Asc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NameDESC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DESC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DESC' in member name 'TrayPopupSort.NameDESC' by changing it to 'Desc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrainingCompletionTimeASC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ASC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ASC' in member name 'TrayPopupSort.TrainingCompletionTimeASC' by changing it to 'Asc'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TrainingCompletionTimeDESC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DESC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DESC' in member name 'TrayPopupSort.TrainingCompletionTimeDESC' by changing it to 'Desc'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayPopupStyles" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'TrayPopupStyles' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UISettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConfirmedTips" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'UISettings.ConfirmedTips' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'UISettings.ConfirmedTips' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Splitters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'UISettings.Splitters' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WindowLocations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'UISettings.WindowLocations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UpdateSettings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckEVEMonVersion" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVE' in member name 'UpdateSettings.CheckEVEMonVersion' by changing it to 'Eve'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckTimeOnStartup" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Startup" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Startup' in member name 'UpdateSettings.CheckTimeOnStartup' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Periods" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'UpdateSettings.Periods' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatesUrl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="UpdateSettings.cs" Line="94">Change the type of property 'UpdateSettings.UpdatesUrl' from string to System.Uri.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_UpdatesUrl()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\SettingsObjects" File="UpdateSettings.cs" Line="103">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'UpdateSettings.UpdatesUrl.get()' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Common.Threading">
       <Types>
        <Type Name="Actor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'Actor' because it creates members of the following IDisposable types: 'AutoResetEvent'. If 'Actor' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AssertAccess()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="Actor.cs" Line="190">'Actor.AssertAccess()' creates an exception of type 'AccessViolationException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DoWork()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="Actor.cs" Line="60">'Actor.DoWork()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Dispatcher" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BackgroundInvoke(System.Action,System.AsyncCallback,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="Dispatcher.cs" Line="165">In method 'Dispatcher.BackgroundInvoke(Action, AsyncCallback, object)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="Dispatcher.cs" Line="165">In member 'Dispatcher.BackgroundInvoke(Action, AsyncCallback, object)', consider replacing the data type identifier 'object' in parameter name 'object' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsMultiThreaded" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MultiThreaded" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="Dispatcher.cs" Line="30">The compound word 'MultiThreaded' in member name 'Dispatcher.IsMultiThreaded' exists as a discrete term. If your usage is intended to be single word, case it as 'Multithreaded' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="Dispatcher.cs" Line="30">Correct the spelling of 'Multi' in member name 'Dispatcher.IsMultiThreaded' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IActor" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetTimer(System.Action,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="callback" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'IActor.GetTimer(Action, int, bool)', correct the spelling of 'callback' in parameter name 'callback' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IActorTimer" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Stop()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stop" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Rename virtual/interface member 'IActorTimer.Stop()' so that it no longer conflicts with the reserved language keyword 'Stop'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Message" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:59:35Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'Message' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'Message' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UIActor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AssertAccess()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Reserved" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="UIActor.cs" Line="119">'UIActor.AssertAccess()' creates an exception of type 'AccessViolationException', an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UIActorTimer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Windows.Forms.Form,System.Action,System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="form" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Threading" File="UIActorTimer.cs" Line="22">Parameter 'form' of 'UIActorTimer.UIActorTimer(Form, Action, int, bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="System.Linq">
       <Types>
        <Type Name="EnumerableExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IndexOf`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="EnumerableExtensions.cs" Line="67">In method 'EnumerableExtensions.IndexOf&lt;T&gt;(this IEnumerable&lt;T&gt;, T)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEmpty`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="EnumerableExtensions.cs" Line="15">In method 'EnumerableExtensions.IsEmpty&lt;T&gt;(this IEnumerable&lt;T&gt;)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="item" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Common\Collections" File="EnumerableExtensions.cs" Line="16">'EnumerableExtensions.IsEmpty&lt;T&gt;(this IEnumerable&lt;T&gt;)' declares a variable, 'item', of type 'T', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../EVEMon/bin/x86/Debug/EVEMon.exe">
   <Modules>
    <Module Name="evemon.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EVEMon.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'EVE' in assembly name 'EVEMon.exe' by changing it to 'Eve'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EVEMon.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'EVEMon.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EVEMon">
       <Types>
        <Type Name="AboutWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#myFont" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AboutWindow.myFont' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#myFontbold" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'AboutWindow.myFontbold' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Fontbold" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fontbold' in member name 'AboutWindow.myFontbold' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#slOutput" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AboutWindow.slOutput' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="APIErrorWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APIErrorWindow' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CharacterMonitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Character)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="CharacterMonitor.cs" Line="74">'character', a parameter, is cast to type 'CCPCharacter' multiple times in method 'CharacterMonitor.CharacterMonitor(Character)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfdSaveDialog" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CharacterMonitor.sfdSaveDialog' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateTrainingInfo()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="CharacterMonitor.cs" Line="275">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterMonitor.UpdateTrainingInfo()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="CharacterMonitor.cs" Line="275">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterMonitor.UpdateTrainingInfo()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="CharacterMonitor.cs" Line="291">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterMonitor.UpdateTrainingInfo()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="CharacterMonitor.cs" Line="291">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CharacterMonitor.UpdateTrainingInfo()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatafileVersion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'DatafileVersion'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DateChanged" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatafileVersion.DateChanged' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Md5" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatafileVersion.Md5' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Message" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatafileVersion.Message' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Name" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatafileVersion.Name' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Url" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatafileVersion.Url' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DatafileVersions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in type name 'DatafileVersions'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ChangedDataFiles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="261">Change 'List&lt;DatafileVersion&gt;' in 'DatafileVersions.ChangedDataFiles' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Datafiles" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DatafileVersions.Datafiles' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Datafiles" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafiles' in member name 'DatafileVersions.Datafiles' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataUpdateAvailableEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'DataUpdateAvailableEventArgs' so that it does not end in 'EventArgs'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ChangedFiles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="397">Change 'DataUpdateAvailableEventArgs.ChangedFiles' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="397">Change 'List&lt;DatafileVersion&gt;' in 'DataUpdateAvailableEventArgs.ChangedFiles' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateUrl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="389">Change the type of property 'DataUpdateAvailableEventArgs.UpdateUrl' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataUpdateAvailableHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'DataUpdateAvailableHandler', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DataUpdateNotifyForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnUpdate_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="DataUpdateNotifyForm.cs" Line="74">Change 'DataUpdateNotifyForm.btnUpdate_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="G15Handler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_syncLock" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'G15Handler.m_syncLock' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Start()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="G15Handler.cs" Line="97">Modify 'G15Handler.Start()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InstanceManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'InstanceManager' because it creates members of the following IDisposable types: 'Semaphore'. If 'InstanceManager' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetInstance()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="InstanceManager.cs" Line="12">Change 'InstanceManager.GetInstance()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Signaled" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Signaled" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Signaled' in member name 'InstanceManager.Signaled' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ListViewExporter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateCSV(System.Windows.Forms.ListView)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="68">Modify 'ListViewExporter.CreateCSV(ListView)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="CSV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="21">Correct the casing of 'CSV' in member name 'ListViewExporter.CreateCSV(ListView)' by changing it to 'Csv'.</Issue>
            </Message>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="21">In method 'ListViewExporter.CreateCSV(ListView)', correct the spelling of 'a' in parameter name 'aListViewToExport' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="62">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'ListViewExporter.CreateCSV(ListView)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="65">Because the behavior of 'Convert.ToDouble(string)' could vary based on the current user's locale settings, replace this call in 'ListViewExporter.CreateCSV(ListView)' with a call to 'Convert.ToDouble(string, IFormatProvider)'. If the result of 'Convert.ToDouble(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="62">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'ListViewExporter.CreateCSV(ListView)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="65">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'ListViewExporter.CreateCSV(ListView)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="ListViewExporter.cs" Line="46">Replace the call to 'string.operator ==(string, string)' in 'ListViewExporter.CreateCSV(ListView)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AppendCharacterTrainingTime(EVEMon.Common.CCPCharacter,System.TimeSpan)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="952">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.AppendCharacterTrainingTime(CCPCharacter, TimeSpan)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#copySkillsToClipboardBBFormatToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1609">Change 'MainWindow.copySkillsToClipboardBBFormatToolStripMenuItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTab(EVEMon.Common.Character)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="400">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.CreateTab(Character)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#exceptionWindowRecursiveExceptionToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1939">'MainWindow.exceptionWindowRecursiveExceptionToolStripMenuItem_Click(object, EventArgs)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1939">'MainWindow.exceptionWindowRecursiveExceptionToolStripMenuItem_Click(object, EventArgs)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionWindowToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1929">'MainWindow.ExceptionWindowToolStripMenuItem_Click(object, EventArgs)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentCharacter()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="496">Change 'MainWindow.GetCurrentCharacter()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentMonitor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="506">Change 'MainWindow.GetCurrentMonitor()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#resetSettingsToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1238">Change 'MainWindow.resetSettingsToolStripMenuItem_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartProcess(System.String,System.String[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1039">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.StartProcess(string, string[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#trayIcon_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1727">'e', a parameter, is cast to type 'MouseEventArgs' multiple times in method 'MainWindow.trayIcon_Click(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TriggerAutoShrink()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="93">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.TriggerAutoShrink()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryPlaySkillCompletionSound()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="756">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.TryPlaySkillCompletionSound()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsShowOwnedSkillbooks_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindow.cs" Line="1519">Change 'MainWindow.tsShowOwnedSkillbooks_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ttMainWindow" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'MainWindow.ttMainWindow' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindowIndustryJobsList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EveClient_TimerTick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="905">Replace the call to 'string.operator ==(string, string)' in 'MainWindowIndustryJobsList.EveClient_TimerTick(object, EventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetActiveJobStateColor(EVEMon.Common.ActiveJobState)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="674">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowIndustryJobsList.GetActiveJobStateColor(ActiveJobState)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRange(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="692">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowIndustryJobsList.GetRange(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnitCount(EVEMon.Common.IndustryJob)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="617">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowIndustryJobsList.GetUnitCount(IndustryJob)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTextMatching(EVEMon.Common.IndustryJob,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="721">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowIndustryJobsList.IsTextMatching(IndustryJob, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="722">In method 'MainWindowIndustryJobsList.IsTextMatching(IndustryJob, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="722">In method 'MainWindowIndustryJobsList.IsTextMatching(IndustryJob, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="722">In method 'MainWindowIndustryJobsList.IsTextMatching(IndustryJob, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="722">In method 'MainWindowIndustryJobsList.IsTextMatching(IndustryJob, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="722">In method 'MainWindowIndustryJobsList.IsTextMatching(IndustryJob, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="722">In method 'MainWindowIndustryJobsList.IsTextMatching(IndustryJob, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#jobExpPanelControl_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="833">'sender', a parameter, is cast to type 'Label' multiple times in method 'MainWindowIndustryJobsList.jobExpPanelControl_MouseClick(object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="834">'sender', a parameter, is cast to type 'Label' multiple times in method 'MainWindowIndustryJobsList.jobExpPanelControl_MouseClick(object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="834">'sender', a parameter, is cast to type 'Label' multiple times in method 'MainWindowIndustryJobsList.jobExpPanelControl_MouseClick(object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lvJobs" Kind="Field" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MainWindowIndustryJobsList.lvJobs' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColumn(EVEMon.Common.IndustryJob,System.Windows.Forms.ListViewItem+ListViewSubItem,EVEMon.Common.SettingsObjects.IndustryJobColumn)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="557">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'MainWindowIndustryJobsList.SetColumn(IndustryJob, ListViewItem.ListViewSubItem, IndustryJobColumn)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="562">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'MainWindowIndustryJobsList.SetColumn(IndustryJob, ListViewItem.ListViewSubItem, IndustryJobColumn)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="567">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'MainWindowIndustryJobsList.SetColumn(IndustryJob, ListViewItem.ListViewSubItem, IndustryJobColumn)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="572">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'MainWindowIndustryJobsList.SetColumn(IndustryJob, ListViewItem.ListViewSubItem, IndustryJobColumn)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="533">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'MainWindowIndustryJobsList.SetColumn(IndustryJob, ListViewItem.ListViewSubItem, IndustryJobColumn)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateContent()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowIndustryJobs.cs" Line="321">In method 'MainWindowIndustryJobsList.UpdateContent()', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindowMarketOrdersList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetRange(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="653">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowMarketOrdersList.GetRange(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTextMatching(EVEMon.Common.MarketOrder,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="680">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowMarketOrdersList.IsTextMatching(MarketOrder, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="681">In method 'MainWindowMarketOrdersList.IsTextMatching(MarketOrder, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="681">In method 'MainWindowMarketOrdersList.IsTextMatching(MarketOrder, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="681">In method 'MainWindowMarketOrdersList.IsTextMatching(MarketOrder, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="681">In method 'MainWindowMarketOrdersList.IsTextMatching(MarketOrder, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="681">In method 'MainWindowMarketOrdersList.IsTextMatching(MarketOrder, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="681">In method 'MainWindowMarketOrdersList.IsTextMatching(MarketOrder, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#listView" Kind="Field" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MainWindowMarketOrdersList.listView' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#marketExpPanelControl_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="792">'sender', a parameter, is cast to type 'Label' multiple times in method 'MainWindowMarketOrdersList.marketExpPanelControl_MouseClick(object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="793">'sender', a parameter, is cast to type 'Label' multiple times in method 'MainWindowMarketOrdersList.marketExpPanelControl_MouseClick(object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="793">'sender', a parameter, is cast to type 'Label' multiple times in method 'MainWindowMarketOrdersList.marketExpPanelControl_MouseClick(object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetColumn(EVEMon.Common.MarketOrder,System.Windows.Forms.ListViewItem+ListViewSubItem,EVEMon.Common.SettingsObjects.MarketOrderColumn)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="606">'order', a parameter, is cast to type 'BuyOrder' multiple times in method 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="624">'order', a parameter, is cast to type 'BuyOrder' multiple times in method 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="625">'order', a parameter, is cast to type 'BuyOrder' multiple times in method 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="629">'order', a parameter, is cast to type 'BuyOrder' multiple times in method 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="631">'order', a parameter, is cast to type 'BuyOrder' multiple times in method 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="631">'order', a parameter, is cast to type 'BuyOrder' multiple times in method 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="539">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="596">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="603">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="631">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="546">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="572">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="582">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="610">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="610">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MainWindowMarketOrdersList.SetColumn(MarketOrder, ListViewItem.ListViewSubItem, MarketOrderColumn)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateContent()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowMarketOrders.cs" Line="342">In method 'MainWindowMarketOrdersList.UpdateContent()', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindowSkillsList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DisplayTooltip(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowSkillsList.cs" Line="705">'item', a parameter, is cast to type 'SkillGroup' multiple times in method 'MainWindowSkillsList.DisplayTooltip(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTooltip(EVEMon.Common.Skill)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowSkillsList.cs" Line="719">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowSkillsList.GetTooltip(Skill)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTooltip(EVEMon.Common.SkillGroup)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowSkillsList.cs" Line="796">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowSkillsList.GetTooltip(SkillGroup)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbSkills_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowSkillsList.cs" Line="216">'item', a variable, is cast to type 'Skill' multiple times in method 'MainWindowSkillsList.lbSkills_DrawItem(object, DrawItemEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowSkillsList.cs" Line="212">'item', a variable, is cast to type 'SkillGroup' multiple times in method 'MainWindowSkillsList.lbSkills_DrawItem(object, DrawItemEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbSkills_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowSkillsList.cs" Line="598">'item', a variable, is cast to type 'SkillGroup' multiple times in method 'MainWindowSkillsList.lbSkills_MouseDown(object, MouseEventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindowSkillsQueueList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetTooltip(EVEMon.Common.QueuedSkill)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="MainWindowSkillsQueueList.cs" Line="541">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindowSkillsQueueList.GetTooltip(QueuedSkill)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ClientToScreen(System.IntPtr,EVEMon.NativeMethods+POINT&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpPoint' be a reference parameter.</Issue>
            </Message>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ClientToScreen(IntPtr, ref NativeMethods.POINT)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ClientToScreen(IntPtr, ref NativeMethods.POINT)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.ClientToScreen(IntPtr, ref NativeMethods.POINT)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumWindows(EVEMon.Relocator+WindowFoundHandler,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.EnumWindows(Relocator.WindowFoundHandler, int)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.EnumWindows(Relocator.WindowFoundHandler, int)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.EnumWindows(Relocator.WindowFoundHandler, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetClassName(IntPtr, StringBuilder, int)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetClassName(IntPtr, StringBuilder, int)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetClassName(IntPtr, StringBuilder, int)', correct the spelling of 'n' in parameter name 'nMaxCount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error">In member 'NativeMethods.GetClassName(IntPtr, StringBuilder, int)', consider replacing the data type identifier 'String' in parameter name 'lpString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetClassName(IntPtr, StringBuilder, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpString' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClientRect(System.IntPtr,EVEMon.NativeMethods+RECT&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpRect' be an out parameter.</Issue>
            </Message>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetClientRect(IntPtr, out NativeMethods.RECT)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetClientRect(IntPtr, out NativeMethods.RECT)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetClientRect(IntPtr, out NativeMethods.RECT)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowLong(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowLong(IntPtr, int)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowLong(IntPtr, int)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowLong(IntPtr, int)', correct the spelling of 'n' in parameter name 'nIndex' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="long" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error">Consider replacing the language-specific data type identifier 'Long' in member name 'NativeMethods.GetWindowLong(IntPtr, int)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'NativeMethods.GetWindowLong(IntPtr, int)' will be 8 bytes wide on 32-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 32-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'NativeMethods.GetWindowLong(IntPtr, int)' will be 8 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetWindowLong(IntPtr, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowRect(System.IntPtr,EVEMon.NativeMethods+RECT&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpRect' be an out parameter.</Issue>
            </Message>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowRect(IntPtr, out NativeMethods.RECT)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowRect(IntPtr, out NativeMethods.RECT)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'NativeMethods.GetWindowRect(IntPtr, out NativeMethods.RECT)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetWindowRect(IntPtr, out NativeMethods.RECT)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowText(IntPtr, StringBuilder, int)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowText(IntPtr, StringBuilder, int)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowText(IntPtr, StringBuilder, int)', correct the spelling of 'n' in parameter name 'nMaxCount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error">In member 'NativeMethods.GetWindowText(IntPtr, StringBuilder, int)', consider replacing the data type identifier 'String' in parameter name 'lpString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetWindowText(IntPtr, StringBuilder, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpString' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowThreadProcessId(System.IntPtr,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpdwProcessId' be an out parameter.</Issue>
            </Message>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowThreadProcessId(IntPtr, out int)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowThreadProcessId(IntPtr, out int)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lpdw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetWindowThreadProcessId(IntPtr, out int)', correct the spelling of 'lpdw' in parameter name 'lpdwProcessId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetWindowThreadProcessId(IntPtr, out int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GWL_STYLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GWL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GWL' in member name 'NativeMethods.GWL_STYLE' by changing it to 'Gwl'.</Issue>
            </Message>
            <Message Id="STYLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STYLE' in member name 'NativeMethods.GWL_STYLE' by changing it to 'Style'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.GWL_STYLE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', correct the casing of 'X' in parameter name 'X' by changing it to 'x'.</Issue>
            </Message>
            <Message Id="Y" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', correct the casing of 'Y' in parameter name 'Y' by changing it to 'y'.</Issue>
            </Message>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', consider providing a more meaningful name than parameter name 'X'.</Issue>
            </Message>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', consider providing a more meaningful name than parameter name 'Y'.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', correct the spelling of 'b' in parameter name 'bRepaint' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', correct the spelling of 'n' in parameter name 'nHeight' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)', correct the spelling of 'n' in parameter name 'nWidth' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning">Add the MarshalAsAttribute to parameter 'bRepaint' of P/Invoke 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)'. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.MoveWindow(IntPtr, int, int, int, int, bool)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowLong(System.IntPtr,System.Int32,System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.SetWindowLong(IntPtr, int, long)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.SetWindowLong(IntPtr, int, long)', correct the spelling of 'dw' in parameter name 'dwNewLong' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.SetWindowLong(IntPtr, int, long)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.SetWindowLong(IntPtr, int, long)', correct the spelling of 'n' in parameter name 'nIndex' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="long" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error">Consider replacing the language-specific data type identifier 'Long' in member name 'NativeMethods.SetWindowLong(IntPtr, int, long)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
             <Issue Name="LanguageSpecificMemberParameter" Certainty="75" Level="Error">In member 'NativeMethods.SetWindowLong(IntPtr, int, long)', consider replacing the language-specific data type identifier 'Long' in parameter name 'dwNewLong' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'dwNewLong' of P/Invoke 'NativeMethods.SetWindowLong(IntPtr, int, long)' will be 8 bytes wide on 32-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 32-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'dwNewLong' of P/Invoke 'NativeMethods.SetWindowLong(IntPtr, int, long)' will be 8 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'NativeMethods.SetWindowLong(IntPtr, int, long)' will be 8 bytes wide on 32-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 32-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'NativeMethods.SetWindowLong(IntPtr, int, long)' will be 8 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.SetWindowLong(IntPtr, int, long)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WS_BORDER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BORDER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BORDER' in member name 'NativeMethods.WS_BORDER' by changing it to 'Border'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.WS_BORDER'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WS_DLGFRAME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DLGFRAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DLGFRAME' in member name 'NativeMethods.WS_DLGFRAME' by changing it to 'Dlgframe'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.WS_DLGFRAME'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods+POINT" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="POINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'POINT' in type name 'NativeMethods.POINT' by changing it to 'Point'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'NativeMethods.POINT'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'NativeMethods.POINT' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'NativeMethods.POINT' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#X" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.POINT.X' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'NativeMethods.POINT.X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.POINT.Y' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning">Consider providing a more meaningful name than member name 'NativeMethods.POINT.Y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods+RECT" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="RECT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'RECT' in type name 'NativeMethods.RECT' by changing it to 'Rect'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'NativeMethods.RECT'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'NativeMethods.RECT' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'NativeMethods.RECT' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Bottom" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.RECT.Bottom' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Left" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.RECT.Left' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Right" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.RECT.Right' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Top" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.RECT.Top' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotificationList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DisplayTooltip(EVEMon.Common.Notifications.Notification)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="401">'notification', a parameter, is cast to type 'APIErrorNotification' multiple times in method 'NotificationList.DisplayTooltip(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="460">'notification', a parameter, is cast to type 'IndustryJobsNotification' multiple times in method 'NotificationList.DisplayTooltip(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="425">'notification', a parameter, is cast to type 'MarketOrdersNotification' multiple times in method 'NotificationList.DisplayTooltip(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="410">'notification', a parameter, is cast to type 'SkillCompletionNotification' multiple times in method 'NotificationList.DisplayTooltip(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="volume" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="439">'NotificationList.DisplayTooltip(Notification)' declares a variable, 'volume', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowDetails(EVEMon.Common.Notifications.Notification)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="349">'notification', a parameter, is cast to type 'APIErrorNotification' multiple times in method 'NotificationList.ShowDetails(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="376">'notification', a parameter, is cast to type 'IndustryJobsNotification' multiple times in method 'NotificationList.ShowDetails(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="364">'notification', a parameter, is cast to type 'MarketOrdersNotification' multiple times in method 'NotificationList.ShowDetails(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="357">'notification', a parameter, is cast to type 'SkillCompletionNotification' multiple times in method 'NotificationList.ShowDetails(Notification)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="NotificationList.cs" Line="344">The 'this' parameter (or 'Me' in Visual Basic) of 'NotificationList.ShowDetails(Notification)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Overview" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PerformCustomLayout()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="numRows" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Overview.cs" Line="158">'Overview.PerformCustomLayout()' declares a variable, 'numRows', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Program" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#HandleUnhandledException(System.Exception)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Program.cs" Line="206">Modify 'Program.HandleUnhandledException(Exception)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Program.cs" Line="215">Change 'Program.HandleUnhandledException(Exception)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MakeWindowsJuicy()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Program.cs" Line="129">Modify 'Program.MakeWindowsJuicy()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Relocator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Relocator" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Relocator' in type name 'Relocator'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EnumWindowCallBack(System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="EVEMon.NativeMethods.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="81">'Relocator.EnumWindowCallBack(int, int)' calls 'NativeMethods.GetWindowText(IntPtr, StringBuilder, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="EVEMon.NativeMethods.GetWindowThreadProcessId(System.IntPtr,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="87">'Relocator.EnumWindowCallBack(int, int)' calls 'NativeMethods.GetWindowThreadProcessId(IntPtr, out int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClientRectInScreenCoords(System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="EVEMon.NativeMethods.ClientToScreen(System.IntPtr,EVEMon.NativeMethods+POINT@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="65">'Relocator.GetClientRectInScreenCoords(IntPtr)' calls 'NativeMethods.ClientToScreen(IntPtr, ref NativeMethods.POINT)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="EVEMon.NativeMethods.GetClientRect(System.IntPtr,EVEMon.NativeMethods+RECT@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="61">'Relocator.GetClientRectInScreenCoords(IntPtr)' calls 'NativeMethods.GetClientRect(IntPtr, out NativeMethods.RECT)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetScreenDescription(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="screen+1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="189">Correct the potential overflow in the operation 'screen+1' in 'Relocator.GetScreenDescription(int)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowDescription(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVEMon.NativeMethods.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="154">'Relocator.GetWindowDescription(IntPtr)' calls 'NativeMethods.GetWindowText(IntPtr, StringBuilder, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="151">In method 'Relocator.GetWindowDescription(IntPtr)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="151">In method 'Relocator.GetWindowDescription(IntPtr)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowDimensions(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="177">In method 'Relocator.GetWindowDimensions(IntPtr)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="177">In method 'Relocator.GetWindowDimensions(IntPtr)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_autoRelocation" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'Relocator.m_autoRelocation' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Relocate(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="120">In method 'Relocator.Relocate(IntPtr, int)', correct the spelling of 'Wnd' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="120">In method 'Relocator.Relocate(IntPtr, int)', correct the spelling of 'h' in parameter name 'hWnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="hDiff" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="124">'Relocator.Relocate(IntPtr, int)' declares a variable, 'hDiff', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="wDiff" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="Relocator.cs" Line="123">'Relocator.Relocate(IntPtr, int)' declares a variable, 'wDiff', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Relocator+WindowFoundHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'Relocator.WindowFoundHandler', correct the spelling of 'Param' in parameter name 'lParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message Id="hwnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'Relocator.WindowFoundHandler', correct the spelling of 'hwnd' in parameter name 'hwnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message Id="l" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'Relocator.WindowFoundHandler', correct the spelling of 'l' in parameter name 'lParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Relocator.WindowFoundHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SkillQueueControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BorderColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="SkillQueueControl.cs" Line="187">Correct the spelling of 'Color' in member name 'SkillQueueControl.BorderColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EmptyColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="SkillQueueControl.cs" Line="167">Correct the spelling of 'Color' in member name 'SkillQueueControl.EmptyColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FirstColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="SkillQueueControl.cs" Line="126">Correct the spelling of 'Color' in member name 'SkillQueueControl.FirstColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="SkillQueueControl.cs" Line="210">In member 'SkillQueueControl.OnPaint(PaintEventArgs)', change parameter name 'pe' to 'e' in order to match the identifier as it has been declared in 'Control.OnPaint(PaintEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SecondColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="SkillQueueControl.cs" Line="147">Correct the spelling of 'Color' in member name 'SkillQueueControl.SecondColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillQueueToolTip" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'SkillQueueToolTip' because it creates members of the following IDisposable types: 'ToolTip'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SkillsPieChart" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="resources" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="SkillsPieChart.Designer.cs" Line="31">'SkillsPieChart.InitializeComponent()' declares a variable, 'resources', of type 'ComponentResourceManager', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TipWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="tiptext" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TipWindow.cs" Line="18">In method 'TipWindow.TipWindow(string, string, string)', correct the spelling of 'tiptext' in parameter name 'tiptext' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowTip(System.Windows.Forms.Form,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="tiptext" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TipWindow.cs" Line="54">In method 'TipWindow.ShowTip(Form, string, string, string)', correct the spelling of 'tiptext' in parameter name 'tiptext' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayIcon" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#mouseState" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'TrayIcon.mouseState' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayIcon+MouseStateHovering" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'TrayIcon.MouseStateHovering' because it creates members of the following IDisposable types: 'Timer'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TrayIcon+MouseStateOver" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'TrayIcon.MouseStateOver' because it creates members of the following IDisposable types: 'Timer'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TrayIcon+NativeMethods" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#FindWindow(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpClassName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpWindowName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayIcon+NativeMethods+APPBARDATA" Kind="Struct" Accessibility="Public" ExternallyVisible="False">
         <Members>
          <Member Name="#Create()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayIcon.cs" Line="609">'TrayIcon.NativeMethods.APPBARDATA.Create()' calls into 'Marshal.SizeOf(Type)' which has a LinkDemand. By making this call, 'Marshal.SizeOf(Type)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'TrayIcon.NativeMethods.APPBARDATA.Create()'&#xD;&#xA;   -&gt;'TrayIcon.NativeMethods.APPBARDATA.Create()'&#xD;&#xA;   -&gt;'TrayIcon.SetToolTipLocation(Form)'</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayPopUpWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="PopUp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PopUp' in type name 'TrayPopUpWindow' exists as a discrete term. If your usage is intended to be single word, case it as 'Popup'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CompleteLayout()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayPopUpWindow.cs" Line="393">'control', a variable, is cast to type 'FlowLayoutPanel' multiple times in method 'TrayPopUpWindow.CompleteLayout()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawBorder(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayPopUpWindow.cs" Line="124">The 'this' parameter (or 'Me' in Visual Basic) of 'TrayPopUpWindow.DrawBorder(PaintEventArgs)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCharacters()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayPopUpWindow.cs" Line="299">Change 'TrayPopUpWindow.GetCharacters()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayPopUpWindow+NativeMethods" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#SetWindowPos(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'TrayPopUpWindow.NativeMethods.SetWindowPos(IntPtr, int, int, int, int, int, uint)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowWindow(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'TrayPopUpWindow.NativeMethods.ShowWindow(IntPtr, int)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayTooltipWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FormatTooltipText(System.String,EVEMon.Common.Character)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayTooltipWindow.cs" Line="179">The 'this' parameter (or 'Me' in Visual Basic) of 'TrayTooltipWindow.FormatTooltipText(string, Character)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayTooltipWindow.cs" Line="198">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'TrayTooltipWindow.FormatTooltipText(string, Character)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayTooltipWindow.cs" Line="194">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'TrayTooltipWindow.FormatTooltipText(string, Character)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayTooltipWindow.cs" Line="215">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TrayTooltipWindow.FormatTooltipText(string, Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayTooltipWindow.cs" Line="200">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'TrayTooltipWindow.FormatTooltipText(string, Character)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateContent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="TrayTooltipWindow.cs" Line="161">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'TrayTooltipWindow.UpdateContent()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayTooltipWindow+NativeMethods" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#SetWindowPos(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'TrayTooltipWindow.NativeMethods.SetWindowPos(IntPtr, int, int, int, int, int, uint)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowWindow(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'TrayTooltipWindow.NativeMethods.ShowWindow(IntPtr, int)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UIHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExportAfterPlanCharacter(EVEMon.Common.Character,EVEMon.Common.Plan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UIHelper.cs" Line="167">Change 'UIHelper.ExportAfterPlanCharacter(Character, Plan)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportCharacter(EVEMon.Common.Character)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UIHelper.cs" Line="207">Change 'UIHelper.ExportCharacter(Character)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UIHelper.cs" Line="224">Change 'UIHelper.ExportCharacter(Character)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExportPlan(EVEMon.Common.Plan)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UIHelper.cs" Line="94">Change 'UIHelper.ExportPlan(Plan)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnhandledExceptionWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CopyDetailsLinkLabel_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="168">Change 'UnhandledExceptionWindow.CopyDetailsLinkLabel_LinkClicked(object, LinkLabelLinkClickedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="175">Change 'UnhandledExceptionWindow.CopyDetailsLinkLabel_LinkClicked(object, LinkLabelLinkClickedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DatafileReport" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="110">The 'this' parameter (or 'Me' in Visual Basic) of 'UnhandledExceptionWindow.DatafileReport' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_DatafileReport()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="127">Modify 'UnhandledExceptionWindow.DatafileReport.get()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ResetButtonLinkLabel_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="181">Change 'UnhandledExceptionWindow.ResetButtonLinkLabel_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="193">Change 'UnhandledExceptionWindow.ResetButtonLinkLabel_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnhandledExceptionWindow_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="57">Modify 'UnhandledExceptionWindow.UnhandledExceptionWindow_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="75">Modify 'UnhandledExceptionWindow.UnhandledExceptionWindow_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="100">Modify 'UnhandledExceptionWindow.UnhandledExceptionWindow_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="oRight" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UnhandledExceptionWindow.cs" Line="52">'UnhandledExceptionWindow.UnhandledExceptionWindow_Load(object, EventArgs)' declares a variable, 'oRight', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UpdateAvailableEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'UpdateAvailableEventArgs' so that it does not end in 'EventArgs'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AutoInstallUrl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="365">Change the type of property 'UpdateAvailableEventArgs.AutoInstallUrl' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateUrl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="325">Change the type of property 'UpdateAvailableEventArgs.UpdateUrl' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UpdateAvailableHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="e" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In delegate 'UpdateAvailableHandler', consider providing a more meaningful name than parameter name 'e'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UpdateDownloadForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateDownloadForm.cs" Line="17">In member 'UpdateDownloadForm.UpdateDownloadForm(string, string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateDownloadForm.cs" Line="17">Change the type of parameter 'url' of method 'UpdateDownloadForm.UpdateDownloadForm(string, string)' from string to System.Uri, or provide an overload of 'UpdateDownloadForm.UpdateDownloadForm(string, string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DownloadCompleted(EVEMon.Common.Net.DownloadFileAsyncResult)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateDownloadForm.cs" Line="95">Modify 'UpdateDownloadForm.DownloadCompleted(DownloadFileAsyncResult)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateDownloadForm_Shown(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateDownloadForm.cs" Line="34">Modify 'UpdateDownloadForm.UpdateDownloadForm_Shown(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UpdateManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BeginCheck()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="101">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'UpdateManager.BeginCheck()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteInstallationFiles()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateManager.cs" Line="39">Modify 'UpdateManager.DeleteInstallationFiles()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataUpdateAvailable" Kind="Event" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'DataUpdateAvailableHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'DataUpdateAvailableHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateAvailable" Kind="Event" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'UpdateAvailableHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'UpdateAvailableHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UpdateNotifyForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnIgnore_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateNotifyForm.cs" Line="39">Change 'UpdateNotifyForm.btnIgnore_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecPatcher(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateNotifyForm.cs" Line="104">Modify 'UpdateNotifyForm.ExecPatcher(string, string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateInformation()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Replace(System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="UpdateNotifyForm.cs" Line="165">'UpdateNotifyForm.UpdateInformation()' calls 'string.Replace(string, string)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WindowsFactory`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CloseUnique()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="WindowsFactory.cs" Line="24">Remove 'WindowsFactory&lt;TForm&gt;.CloseUnique()' from 'WindowsFactory&lt;TForm&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByTag`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="WindowsFactory.cs" Line="142">Remove 'WindowsFactory&lt;TForm&gt;.GetByTag&lt;TTag&gt;(TTag)' from 'WindowsFactory&lt;TForm&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowByTag`1(!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="WindowsFactory.cs" Line="176">Remove 'WindowsFactory&lt;TForm&gt;.ShowByTag&lt;TTag&gt;(TTag)' from 'WindowsFactory&lt;TForm&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowByTag`1(!!0,System.Func`2&lt;!!0,!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="WindowsFactory.cs" Line="190">Remove 'WindowsFactory&lt;TForm&gt;.ShowByTag&lt;TTag&gt;(TTag, Func&lt;TTag, TForm&gt;)' from 'WindowsFactory&lt;TForm&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowUnique()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="WindowsFactory.cs" Line="84">Remove 'WindowsFactory&lt;TForm&gt;.ShowUnique()' from 'WindowsFactory&lt;TForm&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowUnique(System.Func`1&lt;!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon" File="WindowsFactory.cs" Line="96">Remove 'WindowsFactory&lt;TForm&gt;.ShowUnique(Func&lt;TForm&gt;)' from 'WindowsFactory&lt;TForm&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Accounting">
       <Types>
        <Type Name="AccountsListBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnDrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountsListBox.cs" Line="136">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'AccountsListBox.OnDrawItem(object, DrawItemEventArgs)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountsListBox.cs" Line="133">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'AccountsListBox.OnDrawItem(object, DrawItemEventArgs)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AccountsManagementWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#editUriButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="result" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountsManagementWindow.cs" Line="470">'AccountsManagementWindow.editUriButton_Click(object, EventArgs)' declares a variable, 'result', of type 'DialogResult', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#importCharacterMenu_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="result" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountsManagementWindow.cs" Line="429">'AccountsManagementWindow.importCharacterMenu_Click(object, EventArgs)' declares a variable, 'result', of type 'DialogResult', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_readonlyColor" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'AccountsManagementWindow.m_readonlyColor' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCharactersListContent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountsManagementWindow.cs" Line="311">'character', a variable, is cast to type 'UriCharacter' multiple times in method 'AccountsManagementWindow.UpdateCharactersListContent()'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountsManagementWindow.cs" Line="284">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'AccountsManagementWindow.UpdateCharactersListContent()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountsManagementWindow.cs" Line="305">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'AccountsManagementWindow.UpdateCharactersListContent()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AccountUpdateOrAdditionWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#nextButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int64.TryParse(System.String,System.Int64@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountUpdateOrAdditionWindow.cs" Line="137">'AccountUpdateOrAdditionWindow.nextButton_Click(object, EventArgs)' calls 'long.TryParse(string, out long)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnLoad(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="AccountUpdateOrAdditionWindow.cs" Line="51">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'AccountUpdateOrAdditionWindow.OnLoad(EventArgs)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CharacterImportationWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Accounting" File="CharacterImportationWindow.Designer.cs" Line="208">Modify the call to 'Timer.Interval.set(int)' in method 'CharacterImportationWindow.InitializeComponent()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Controls">
       <Types>
        <Type Name="BorderPanel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="BorderPanel.cs" Line="41">In member 'BorderPanel.OnPaint(PaintEventArgs)', change parameter name 'pe' to 'e' in order to match the identifier as it has been declared in 'Control.OnPaint(PaintEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ColumnSelectWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'ColumnSelectWindow' to protected.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetAllKeys()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'ColumnSelectWindow.GetAllKeys()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDefaultColumns()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'ColumnSelectWindow.GetDefaultColumns()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DraggableListView" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Draggable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Draggable' in type name 'DraggableListView'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetDraggingSkill(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="48">The 'this' parameter (or 'Me' in Visual Basic) of 'DraggableListView.GetDraggingSkill(DragEventArgs)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragDrop(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="57">In member 'DraggableListView.OnDragDrop(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragDrop(DragEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragEnter(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="184">In member 'DraggableListView.OnDragEnter(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragEnter(DragEventArgs)'.</Issue>
            </Message>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="206">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'DraggableListView.OnDragEnter(DragEventArgs)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragOver(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="129">In member 'DraggableListView.OnDragOver(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragOver(DragEventArgs)'.</Issue>
            </Message>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="168">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'DraggableListView.OnDragOver(DragEventArgs)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RestrictedPaint()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="244">'DraggableListView.RestrictedPaint()' calls into 'ControlPaint.DrawReversibleLine(Point, Point, Color)' which has a LinkDemand. By making this call, 'ControlPaint.DrawReversibleLine(Point, Point, Color)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'DraggableListView.RestrictedPaint()'&#xD;&#xA;   -&gt;'DraggableListView.RestrictedPaint()'&#xD;&#xA;   -&gt;'DraggableListView.ClearDropMarker()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="244">'DraggableListView.RestrictedPaint()' calls into 'ControlPaint.DrawReversibleLine(Point, Point, Color)' which has a LinkDemand. By making this call, 'ControlPaint.DrawReversibleLine(Point, Point, Color)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'DraggableListView.RestrictedPaint()'&#xD;&#xA;   -&gt;'DraggableListView.RestrictedPaint()'&#xD;&#xA;   -&gt;'DraggableListView.DrawDropMarker(int, bool)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="244">'DraggableListView.RestrictedPaint()' calls into 'ControlPaint.DrawReversibleLine(Point, Point, Color)' which has a LinkDemand. By making this call, 'ControlPaint.DrawReversibleLine(Point, Point, Color)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'DraggableListView.RestrictedPaint()'&#xD;&#xA;   -&gt;'DraggableListView.RestrictedPaint()'&#xD;&#xA;   -&gt;'DraggableListView.OnPaint(PaintEventArgs)'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sorting" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Sorting(System.Windows.Forms.SortOrder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="value" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
               <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableListView.cs" Line="34">Parameter 'value' of 'DraggableListView.Sorting.set(SortOrder)' is never used. Remove the parameter or use it in the method body.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DraggableTabControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Draggable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Draggable' in type name 'DraggableTabControl'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetDraggedTab(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="175">The 'this' parameter (or 'Me' in Visual Basic) of 'DraggableTabControl.GetDraggedTab(DragEventArgs)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetInsertionIndex(System.Int32,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="231">The 'this' parameter (or 'Me' in Visual Basic) of 'DraggableTabControl.GetInsertionIndex(int, bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragDrop(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="108">In member 'DraggableTabControl.OnDragDrop(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragDrop(DragEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragOver(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="60">In member 'DraggableTabControl.OnDragOver(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragOver(DragEventArgs)'.</Issue>
            </Message>
            <Message Id="oldOnLeft" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="89">'DraggableTabControl.OnDragOver(DragEventArgs)' declares a variable, 'oldOnLeft', of type 'bool', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DraggableTabControl+InsertionMarker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'DraggableTabControl.InsertionMarker'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OnDragDrop(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="385">In member 'DraggableTabControl.InsertionMarker.OnDragDrop(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragDrop(DragEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragEnter(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="379">In member 'DraggableTabControl.InsertionMarker.OnDragEnter(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragEnter(DragEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDragOver(System.Windows.Forms.DragEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="DraggableTabControl.cs" Line="391">In member 'DraggableTabControl.InsertionMarker.OnDragOver(DragEventArgs)', change parameter name 'e' to 'drgevent' in order to match the identifier as it has been declared in 'Control.OnDragOver(DragEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DropDownMouseMoveComboBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DropDownMouseMove" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'DropDownMouseMoveHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
             <Issue Name="TooMany" Certainty="95" Level="Error">Remove all but the first two parameters of 'DropDownMouseMoveHandler'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'DropDownMouseMoveHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExpandablePanelControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'animationSpeed' and 'AnimationSpeed' so that they differ by more than case.</Issue>
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'expandDirection' and 'ExpandDirection' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#animationSpeed" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.animationSpeed' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#contextMenuStrip" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.contextMenuStrip' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#expandDirection" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.expandDirection' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExpandedOnStartup" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Startup" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="ExpandablePanelControl.cs" Line="313">Correct the spelling of 'Startup' in member name 'ExpandablePanelControl.ExpandedOnStartup' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nfpHeader" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.nfpHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="nfp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'nfp' in member name 'ExpandablePanelControl.nfpHeader' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsmiExpandCollapse" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.tsmiExpandCollapse' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tsmi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsmi' in member name 'ExpandablePanelControl.tsmiExpandCollapse' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsmiHighAnim" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.tsmiHighAnim' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Anim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Anim' in member name 'ExpandablePanelControl.tsmiHighAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tsmi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsmi' in member name 'ExpandablePanelControl.tsmiHighAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsmiLowAnim" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.tsmiLowAnim' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Anim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Anim' in member name 'ExpandablePanelControl.tsmiLowAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tsmi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsmi' in member name 'ExpandablePanelControl.tsmiLowAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsmiMedAnim" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.tsmiMedAnim' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Anim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Anim' in member name 'ExpandablePanelControl.tsmiMedAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tsmi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsmi' in member name 'ExpandablePanelControl.tsmiMedAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsmiNoAnim" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.tsmiNoAnim' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Anim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Anim' in member name 'ExpandablePanelControl.tsmiNoAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tsmi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsmi' in member name 'ExpandablePanelControl.tsmiNoAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsmiSelectAnim" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.tsmiSelectAnim' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Anim" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Anim' in member name 'ExpandablePanelControl.tsmiSelectAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tsmi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsmi' in member name 'ExpandablePanelControl.tsmiSelectAnim' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsmiSeparator" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ExpandablePanelControl.tsmiSeparator' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tsmi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tsmi' in member name 'ExpandablePanelControl.tsmiSeparator' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ListViewHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DisableDoubleBuffer(System.Windows.Forms.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVEMon.Controls.ListViewHelper.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="ListViewHelper.cs" Line="45">'ListViewHelper.DisableDoubleBuffer(Control)' calls 'ListViewHelper.SendMessage(IntPtr, int, int, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnableDoubleBuffer(System.Windows.Forms.Control)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVEMon.Controls.ListViewHelper.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="ListViewHelper.cs" Line="33">'ListViewHelper.EnableDoubleBuffer(Control)' calls 'ListViewHelper.SendMessage(IntPtr, int, int, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'ListViewHelper.SendMessage(IntPtr, int, int, int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'wparam' of P/Invoke 'ListViewHelper.SendMessage(IntPtr, int, int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'lparam' of P/Invoke 'ListViewHelper.SendMessage(IntPtr, int, int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'ListViewHelper.SendMessage(IntPtr, int, int, int)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetExtendedStyle(System.Windows.Forms.Control,EVEMon.Controls.ListViewHelper+ListViewExtendedStyles)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVEMon.Controls.ListViewHelper.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="ListViewHelper.cs" Line="22">'ListViewHelper.SetExtendedStyle(Control, ListViewHelper.ListViewExtendedStyles)' calls 'ListViewHelper.SendMessage(IntPtr, int, int, int)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ListViewHelper+ListViewExtendedStyles" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NotFlagsNoZeroValue" Certainty="95" Level="CriticalError">Add a member to 'ListViewHelper.ListViewExtendedStyles' that has a value of zero with a suggested name of 'None'.</Issue>
          </Message>
          <Message TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">The constituent members of 'ListViewHelper.ListViewExtendedStyles' appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'ListViewHelper.ListViewExtendedStyles'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'ListViewHelper.ListViewExtendedStyles' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MultilWorkAreas" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multil" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multil' in member name 'ListViewHelper.ListViewExtendedStyles.MultilWorkAreas' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubItemImages" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SubItem" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'SubItem' in member name 'ListViewHelper.ListViewExtendedStyles.SubItemImages' exists as a discrete term. If your usage is intended to be single word, case it as 'Subitem' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ListViewHelper+ListViewMessages" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NotFlagsNoZeroValue" Certainty="95" Level="CriticalError">Add a member to 'ListViewHelper.ListViewMessages' that has a value of zero with a suggested name of 'None'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'ListViewHelper.ListViewMessages'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'ListViewHelper.ListViewMessages' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MultiPanel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MultiPanel" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MultiPanel' in type name 'MultiPanel' exists as a discrete term. If your usage is intended to be single word, case it as 'Multipanel'.</Issue>
          </Message>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiPanel'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SelectionChange" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MultiPanelSelectionChangeHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'MultiPanelSelectionChangeHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultiPanelPage" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MultiPanel" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MultiPanel' in type name 'MultiPanelPage' exists as a discrete term. If your usage is intended to be single word, case it as 'Multipanel'.</Issue>
          </Message>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiPanelPage'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MultiPanelSelectionChangeEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MultiPanel" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MultiPanel' in type name 'MultiPanelSelectionChangeEventArgs' exists as a discrete term. If your usage is intended to be single word, case it as 'Multipanel'.</Issue>
          </Message>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiPanelSelectionChangeEventArgs'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MultiPanelSelectionChangeHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MultiPanel" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MultiPanel' in type name 'MultiPanelSelectionChangeHandler' exists as a discrete term. If your usage is intended to be single word, case it as 'Multipanel'.</Issue>
          </Message>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiPanelSelectionChangeHandler'.</Issue>
          </Message>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'MultiPanelSelectionChangeHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="NativeMethods" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.UInt32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'NativeMethods.BitBlt(IntPtr, int, int, int, int, IntPtr, int, int, uint)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyGraphics(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Graphics,System.Drawing.Point)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NativeMethods.cs" Line="41">'NativeMethods.CopyGraphics(Graphics, Rectangle, Graphics, Point)' calls into 'Graphics.GetHdc()' which has a LinkDemand. By making this call, 'Graphics.GetHdc()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'NativeMethods.CopyGraphics(Graphics, Rectangle, Graphics, Point)'&#xD;&#xA;   -&gt;'NativeMethods.CopyGraphics(Graphics, Rectangle, Graphics, Point)'</Issue>
            </Message>
            <Message Id="dest" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NativeMethods.cs" Line="41">In method 'NativeMethods.CopyGraphics(Graphics, Rectangle, Graphics, Point)', correct the spelling of 'dest' in parameter name 'dest' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NativeMethods.cs" Line="41">In method 'NativeMethods.CopyGraphics(Graphics, Rectangle, Graphics, Point)', correct the spelling of 'dest' in parameter name 'destClip' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NativeMethods.cs" Line="41">In method 'NativeMethods.CopyGraphics(Graphics, Rectangle, Graphics, Point)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetWindowPos(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'NativeMethods.SetWindowPos(int, int, int, int, int, int, uint)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowInactiveTopmost(System.Windows.Forms.Form)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NativeMethods.cs" Line="27">Consider changing the type of parameter 'frm' in 'NativeMethods.ShowInactiveTopmost(this Form)' from 'Form' to its base type 'Control'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NativeMethods.cs" Line="27">In method 'NativeMethods.ShowInactiveTopmost(this Form)', correct the spelling of 'frm' in parameter name 'frm' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowWindow(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'NativeMethods.ShowWindow(IntPtr, int)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NoFlickerListBox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WndProc(System.Windows.Forms.Message&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NoFlickerListBox.cs" Line="38">'NoFlickerListBox.WndProc(ref Message)' calls into 'ListBox.WndProc(ref Message)' which has a LinkDemand. By making this call, 'ListBox.WndProc(ref Message)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'NoFlickerListBox.WndProc(ref Message)'&#xD;&#xA;   -&gt;'NoFlickerListBox.WndProc(ref Message)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NoFlickerListBox.cs" Line="38">'NoFlickerListBox.WndProc(ref Message)' calls into 'Message.Msg.get()' which has a LinkDemand. By making this call, 'Message.Msg.get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'NoFlickerListBox.WndProc(ref Message)'&#xD;&#xA;   -&gt;'NoFlickerListBox.WndProc(ref Message)'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NoFlickerListBox.cs" Line="38">'NoFlickerListBox.WndProc(ref Message)' calls into 'Message.Msg.set(int)' which has a LinkDemand. By making this call, 'Message.Msg.set(int)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'NoFlickerListBox.WndProc(ref Message)'&#xD;&#xA;   -&gt;'NoFlickerListBox.WndProc(ref Message)'</Issue>
            </Message>
            <Message TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="BaseOnly" Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="NoFlickerListBox.cs" Line="38">Add the following security attribute to 'NoFlickerListBox.WndProc(ref Message)' in order to match a LinkDemand on base method 'ListBox.WndProc(ref Message)':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)].</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PersistentSplitContainer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RememberDistanceKey" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_RememberDistanceKey(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="PersistentSplitContainer.cs" Line="51">Modify 'PersistentSplitContainer.RememberDistanceKey.set(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Throbber" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Throbber" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Throbber' in type name 'Throbber'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls" File="Throbber.cs" Line="53">Modify the call to 'Timer.Interval.set(int)' in method 'Throbber.Throbber()' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThrobberState" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Throbber" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Throbber' in type name 'ThrobberState'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Strobing" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Strobing" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Strobing' in member name 'ThrobberState.Strobing' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Controls.Design">
       <Types>
        <Type Name="MultiPanelDesigner" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MultiPanel" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MultiPanel' in type name 'MultiPanelDesigner' exists as a discrete term. If your usage is intended to be single word, case it as 'Multipanel'.</Issue>
          </Message>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiPanelDesigner'.</Issue>
          </Message>
          <Message TypeName="TransparentMethodsShouldNotDemandFxCopRule" Category="Microsoft.Security" CheckId="CA2143" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Declarative" Certainty="50" Level="CriticalWarning">'MultiPanelDesigner', a transparent type or method, contains a declarative security demand for 'PermissionSetAttribute'.  'MultiPanelDesigner' should be made security-safe critical or the demand should be removed from the transparent code.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetMultiPanelPage(System.Windows.Forms.Control)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelDesigner.cs" Line="138">'ctrl', a parameter, is cast to type 'MultiPanelPage' multiple times in method 'MultiPanelDesigner.GetMultiPanelPage(Control)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_verbs" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'MultiPanelDesigner.m_verbs' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultiPanelDesignerHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MultiPanel" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MultiPanel' in type name 'MultiPanelDesignerHelper' exists as a discrete term. If your usage is intended to be single word, case it as 'Multipanel'.</Issue>
          </Message>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiPanelDesignerHelper'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddPage(System.ComponentModel.Design.IDesignerHost,EVEMon.Controls.MultiPanel)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="oldSelectedPage" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelDesignerHelper.cs" Line="39">'MultiPanelDesignerHelper.AddPage(IDesignerHost, MultiPanel)' declares a variable, 'oldSelectedPage', of type 'MultiPanelPage', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDesignerVerbs(System.ComponentModel.Design.IDesignerHost,EVEMon.Controls.MultiPanel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelDesignerHelper.cs" Line="18">'MultiPanelDesignerHelper.GetDesignerVerbs(IDesignerHost, MultiPanel)' calls into 'DesignerVerbCollection.Add(DesignerVerb)' which has a LinkDemand. By making this call, 'DesignerVerbCollection.Add(DesignerVerb)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'MultiPanelDesignerHelper.GetDesignerVerbs(IDesignerHost, MultiPanel)'&#xD;&#xA;   -&gt;'MultiPanelDesignerHelper.GetDesignerVerbs(IDesignerHost, MultiPanel)'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectPage(System.ComponentModel.Design.IDesignerHost,EVEMon.Controls.MultiPanel,EVEMon.Controls.MultiPanelPage)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="oldSelectedPage" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelDesignerHelper.cs" Line="86">'MultiPanelDesignerHelper.SelectPage(IDesignerHost, MultiPanel, MultiPanelPage)' declares a variable, 'oldSelectedPage', of type 'MultiPanelPage', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultiPanelPageDesigner" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MultiPanel" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MultiPanel' in type name 'MultiPanelPageDesigner' exists as a discrete term. If your usage is intended to be single word, case it as 'Multipanel'.</Issue>
          </Message>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'MultiPanelPageDesigner'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Initialize(System.ComponentModel.IComponent)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelPageDesigner.cs" Line="43">'MultiPanelPageDesigner.Initialize(IComponent)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaintAdornments(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelPageDesigner.cs" Line="103">In member 'MultiPanelPageDesigner.OnPaintAdornments(PaintEventArgs)', change parameter name 'pea' to 'pe' in order to match the identifier as it has been declared in 'ParentControlDesigner.OnPaintAdornments(PaintEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PreFilterProperties(System.Collections.IDictionary)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelPageDesigner.cs" Line="132">'MultiPanelPageDesigner.PreFilterProperties(IDictionary)' calls into 'TypeDescriptor.CreateProperty(Type, PropertyDescriptor, params Attribute[])' which has a LinkDemand. By making this call, 'TypeDescriptor.CreateProperty(Type, PropertyDescriptor, params Attribute[])' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'MultiPanelPageDesigner.PreFilterProperties(IDictionary)'&#xD;&#xA;   -&gt;'MultiPanelPageDesigner.PreFilterProperties(IDictionary)'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Text" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Text(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="ot" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Controls\Design" File="MultiPanelPageDesigner.cs" Line="72">'MultiPanelPageDesigner.Text.set(string)' declares a variable, 'ot', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.ExternalCalendar">
       <Types>
        <Type Name="ExternalCalendarWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(EVEMon.Common.Character)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="36">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ExternalCalendarWindow.ExternalCalendarWindow(Character)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnConfirm_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="57">Modify 'ExternalCalendarWindow.btnConfirm_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="59">Change 'ExternalCalendarWindow.btnConfirm_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DoGoogleAppointment()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="154">Modify 'ExternalCalendarWindow.DoGoogleAppointment()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="165">Modify 'ExternalCalendarWindow.DoGoogleAppointment()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="172">Modify 'ExternalCalendarWindow.DoGoogleAppointment()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="156">Change 'ExternalCalendarWindow.DoGoogleAppointment()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="167">Change 'ExternalCalendarWindow.DoGoogleAppointment()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="174">Change 'ExternalCalendarWindow.DoGoogleAppointment()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DoOutlookAppointment()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="106">Modify 'ExternalCalendarWindow.DoOutlookAppointment()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="108">Change 'ExternalCalendarWindow.DoOutlookAppointment()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveChangesButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="194">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ExternalCalendarWindow.SaveChangesButton_Click(object, EventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbReminder_Validating(System.Object,System.ComponentModel.CancelEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="ExternalCalendarWindow.cs" Line="70">Change 'ExternalCalendarWindow.tbReminder_Validating(object, CancelEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.ImplantControls">
       <Types>
        <Type Name="ImplantSetsWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetImplant(EVEMon.Common.Serialization.Settings.SerializableSettingsImplantSet,EVEMon.Common.ImplantSlots)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ImplantControls" File="ImplantSetsWindow.cs" Line="248">The 'this' parameter (or 'Me' in Visual Basic) of 'ImplantSetsWindow.GetImplant(SerializableSettingsImplantSet, ImplantSlots)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImpGroups_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="phantomRow" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ImplantControls" File="ImplantSetsWindow.cs" Line="112">'ImplantSetsWindow.ImpGroups_Load(object, EventArgs)' declares a variable, 'phantomRow', of type 'DataGridViewRow', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ImplantControls" File="ImplantSetsWindow.cs" Line="73">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ImplantSetsWindow.ImpGroups_Load(object, EventArgs)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_lastImplant" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ImplantSetsWindow.m_lastImplant' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetImplant(EVEMon.Common.Serialization.Settings.SerializableSettingsImplantSet,EVEMon.Common.ImplantSlots,EVEMon.Common.Data.Implant)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ImplantControls" File="ImplantSetsWindow.cs" Line="263">The 'this' parameter (or 'Me' in Visual Basic) of 'ImplantSetsWindow.SetImplant(SerializableSettingsImplantSet, ImplantSlots, Implant)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.Schedule">
       <Types>
        <Type Name="CalendarControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDateFromPoint(System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="CalendarControl.cs" Line="309">In method 'CalendarControl.GetDateFromPoint(Point)', consider providing a more meaningful name than parameter name 'p'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintMonthCalendar(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="CalendarControl.cs" Line="122">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'CalendarControl.PaintMonthCalendar(PaintEventArgs)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="CalendarControl.cs" Line="213">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'CalendarControl.PaintMonthCalendar(PaintEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintMonthEntriesForDay(System.Drawing.Graphics,System.DateTime,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="datetime" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="CalendarControl.cs" Line="230">In method 'CalendarControl.PaintMonthEntriesForDay(Graphics, DateTime, Rectangle)', correct the spelling of 'datetime' in parameter name 'datetime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="CalendarControl.cs" Line="230">In method 'CalendarControl.PaintMonthEntriesForDay(Graphics, DateTime, Rectangle)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DayClicked" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'CalendarControl.DaySelectedEvent' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CalendarControl.DaySelectedEvent' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
             <Issue Name="TooMany" Certainty="95" Level="Error">Remove all but the first two parameters of 'CalendarControl.DaySelectedEvent'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'CalendarControl.DaySelectedEvent' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DayDoubleClicked" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'CalendarControl.DaySelectedEvent' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CalendarControl.DaySelectedEvent' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
             <Issue Name="TooMany" Certainty="95" Level="Error">Remove all but the first two parameters of 'CalendarControl.DaySelectedEvent'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'CalendarControl.DaySelectedEvent' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CalendarControl+DaySelectedEvent" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="datetime" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'CalendarControl.DaySelectedEvent', correct the spelling of 'datetime' in parameter name 'datetime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'CalendarControl.DaySelectedEvent'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="EditScheduleEntryWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDate(System.DateTime&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="EditScheduleEntryWindow.cs" Line="503">The 'this' parameter (or 'Me' in Visual Basic) of 'EditScheduleEntryWindow.GetDate(ref DateTime)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StripToDate(System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="EditScheduleEntryWindow.cs" Line="277">The 'this' parameter (or 'Me' in Visual Basic) of 'EditScheduleEntryWindow.StripToDate(DateTime)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryParseTime(System.String,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="EditScheduleEntryWindow.cs" Line="330">The 'this' parameter (or 'Me' in Visual Basic) of 'EditScheduleEntryWindow.TryParseTime(string, out int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ScheduleCalendar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Member" Certainty="95" Level="Error">Change member names 'Entries' and 'entries' so that they differ by more than case.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#blocking_color" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.blocking_color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'color' in member name 'ScheduleCalendar.blocking_color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BlockingColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="32">Correct the spelling of 'Color' in member name 'ScheduleCalendar.BlockingColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#entries" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.entries' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;ScheduleEntry&gt;' in 'ScheduleCalendar.entries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Entries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="66">Change 'List&lt;ScheduleEntry&gt;' in 'ScheduleCalendar.Entries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="238">In member 'ScheduleCalendar.OnPaint(PaintEventArgs)', change parameter name 'args' to 'e' in order to match the identifier as it has been declared in 'CalendarControl.OnPaint(PaintEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PaintMonthEntriesForDay(System.Drawing.Graphics,System.DateTime,System.Drawing.Rectangle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="q" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="113">'ScheduleCalendar.PaintMonthEntriesForDay(Graphics, DateTime, Rectangle)' declares a variable, 'q', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#recurring_color" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.recurring_color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'color' in member name 'ScheduleCalendar.recurring_color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#recurring_color2" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.recurring_color2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'color' in member name 'ScheduleCalendar.recurring_color2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RecurringColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="54">Correct the spelling of 'Color' in member name 'ScheduleCalendar.RecurringColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RecurringColor2" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="59">Correct the spelling of 'Color' in member name 'ScheduleCalendar.RecurringColor2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#single_color" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.single_color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'color' in member name 'ScheduleCalendar.single_color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#single_color2" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.single_color2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'color' in member name 'ScheduleCalendar.single_color2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SingleColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="40">Correct the spelling of 'Color' in member name 'ScheduleCalendar.SingleColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SingleColor2" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="45">Correct the spelling of 'Color' in member name 'ScheduleCalendar.SingleColor2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#smallFont" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.smallFont' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#text_color" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ScheduleCalendar.text_color' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'color' in member name 'ScheduleCalendar.text_color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TextColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleCalendar.cs" Line="25">Correct the spelling of 'Color' in member name 'ScheduleCalendar.TextColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ScheduleEditorWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#lbEntries_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="401">'temp', a variable, is cast to type 'SimpleScheduleEntry' multiple times in method 'ScheduleEditorWindow.lbEntries_SelectedIndexChanged(object, EventArgs)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowCalendarTooltip(System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="251">'entry', a variable, is cast to type 'SimpleScheduleEntry' multiple times in method 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="240">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="291">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="291">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="294">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="294">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="300">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Schedule" File="ScheduleEditorWindow.cs" Line="300">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ScheduleEditorWindow.ShowCalendarTooltip(DateTime)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.SettingsUI">
       <Types>
        <Type Name="APISettingsForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'APISettingsForm' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dgMethods_CellValidating(System.Object,System.Windows.Forms.DataGridViewCellValidatingEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="APISettingsForm.cs" Line="186">Replace the call to 'string.operator ==(string, string)' in 'APISettingsForm.dgMethods_CellValidating(object, DataGridViewCellValidatingEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtAPIHost_Validating(System.Object,System.ComponentModel.CancelEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="APISettingsForm.cs" Line="162">Replace the call to 'string.operator ==(string, string)' in 'APISettingsForm.txtAPIHost_Validating(object, CancelEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtConfigurationName_Validating(System.Object,System.ComponentModel.CancelEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="APISettingsForm.cs" Line="122">Replace the call to 'string.operator ==(string, string)' in 'APISettingsForm.txtConfigurationName_Validating(object, CancelEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SettingsForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ApplyToSettings()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="424">'SettingsForm.ApplyToSettings()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="454">'SettingsForm.ApplyToSettings()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="485">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SettingsForm.ApplyToSettings()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnDeleteAPIServer_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="847">Change 'SettingsForm.btnDeleteAPIServer_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#emailTestButton_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="725">Change 'SettingsForm.emailTestButton_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="729">Change 'SettingsForm.emailTestButton_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsValidPort(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="621">'SettingsForm.IsValidPort(string, string)' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SettingsForm_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="210">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SettingsForm.SettingsForm_Load(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="218">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SettingsForm.SettingsForm_Load(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="229">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SettingsForm.SettingsForm_Load(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="286">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SettingsForm.SettingsForm_Load(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowErrorMessage(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="639">The 'this' parameter (or 'Me' in Visual Basic) of 'SettingsForm.ShowErrorMessage(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="640">Change 'SettingsForm.ShowErrorMessage(string, string)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#skillIconSetComboBox_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="903">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SettingsForm.skillIconSetComboBox_SelectedIndexChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="921">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SettingsForm.skillIconSetComboBox_SelectedIndexChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="903">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'SettingsForm.skillIconSetComboBox_SelectedIndexChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="SettingsForm.cs" Line="932">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'SettingsForm.skillIconSetComboBox_SelectedIndexChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrayTooltipConfigForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FormatExampleTooltipText(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="TrayTooltipConfigForm.cs" Line="87">The 'this' parameter (or 'Me' in Visual Basic) of 'TrayTooltipConfigForm.FormatExampleTooltipText(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="TrayTooltipConfigForm.cs" Line="127">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'TrayTooltipConfigForm.FormatExampleTooltipText(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UpdateSettingsControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetUpdatePeriods(EVEMon.Common.APIMethods)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SettingsUI" File="UpdateSettingsControl.cs" Line="145">The 'this' parameter (or 'Me' in Visual Basic) of 'UpdateSettingsControl.GetUpdatePeriods(APIMethods)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="EVEMon.SkillPlanner">
       <Types>
        <Type Name="AttributeBarControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BasePointColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="97">Correct the spelling of 'Color' in member name 'AttributeBarControl.BasePointColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BorderColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="46">Correct the spelling of 'Color' in member name 'AttributeBarControl.BorderColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawTile(System.Drawing.Graphics,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="g" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="363">In method 'AttributeBarControl.DrawTile(Graphics, int)', consider providing a more meaningful name than parameter name 'g'.</Issue>
            </Message>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="363">In method 'AttributeBarControl.DrawTile(Graphics, int)', correct the spelling of 'i' in parameter name 'iTile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InactiveColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="80">Correct the spelling of 'Color' in member name 'AttributeBarControl.InactiveColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OuterBorderColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="63">Correct the spelling of 'Color' in member name 'AttributeBarControl.OuterBorderColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShiftColor(System.Drawing.Color,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="399">Correct the spelling of 'Color' in member name 'AttributeBarControl.ShiftColor(Color, int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="399">In method 'AttributeBarControl.ShiftColor(Color, int)', correct the spelling of 'color' in parameter name 'color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="399">The 'this' parameter (or 'Me' in Visual Basic) of 'AttributeBarControl.ShiftColor(Color, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SpentPointColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributeBarControl.cs" Line="114">Correct the spelling of 'Color' in member name 'AttributeBarControl.SpentPointColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Highlighting" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'HighlightingHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'HighlightingHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'HighlightingHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'ValueChangedHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ValueChangedHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'ValueChangedHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueChanging" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'ValueChangingHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'ValueChangingHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'ValueChangingHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AttributesOptimizationControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UpdateAttributeControls(EVEMon.Common.BaseCharacter,EVEMon.Common.AttributesOptimizer+RemappingResult,EVEMon.Common.EveAttribute,System.Windows.Forms.Label,EVEMon.SkillPlanner.AttributeBarControl,EVEMon.SkillPlanner.AttributeBarControl,EVEMon.SkillPlanner.AttributeBarControl)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationControl.cs" Line="147">The 'this' parameter (or 'Me' in Visual Basic) of 'AttributesOptimizationControl.UpdateAttributeControls(BaseCharacter, AttributesOptimizer.RemappingResult, EveAttribute, Label, AttributeBarControl, AttributeBarControl, AttributeBarControl)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="character" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationControl.cs" Line="147">Parameter 'character' of 'AttributesOptimizationControl.UpdateAttributeControls(BaseCharacter, AttributesOptimizer.RemappingResult, EveAttribute, Label, AttributeBarControl, AttributeBarControl, AttributeBarControl)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationControl.cs" Line="156">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizationControl.UpdateAttributeControls(BaseCharacter, AttributesOptimizer.RemappingResult, EveAttribute, Label, AttributeBarControl, AttributeBarControl, AttributeBarControl)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationControl.cs" Line="156">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizationControl.UpdateAttributeControls(BaseCharacter, AttributesOptimizer.RemappingResult, EveAttribute, Label, AttributeBarControl, AttributeBarControl, AttributeBarControl)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationControl.cs" Line="156">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizationControl.UpdateAttributeControls(BaseCharacter, AttributesOptimizer.RemappingResult, EveAttribute, Label, AttributeBarControl, AttributeBarControl, AttributeBarControl)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateControls(EVEMon.Common.Character,EVEMon.Common.BasePlan,EVEMon.Common.AttributesOptimizer+RemappingResult,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationControl.cs" Line="96">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizationControl.UpdateControls(Character, BasePlan, AttributesOptimizer.RemappingResult, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationControl.cs" Line="103">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizationControl.UpdateControls(Character, BasePlan, AttributesOptimizer.RemappingResult, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AttributeChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'AttributeChangedHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'AttributeChangedHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'AttributeChangedHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AttributesOptimizationForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddItemForAttribute(EVEMon.Common.AttributesOptimizer+RemappingResult,System.Windows.Forms.ListViewGroup,EVEMon.Common.EveAttribute)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="builder" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationForm.cs" Line="391">'AttributesOptimizationForm.AddItemForAttribute(AttributesOptimizer.RemappingResult, ListViewGroup, EveAttribute)' declares a variable, 'builder', of type 'StringBuilder', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="difference" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationForm.cs" Line="392">'AttributesOptimizationForm.AddItemForAttribute(AttributesOptimizer.RemappingResult, ListViewGroup, EveAttribute)' declares a variable, 'difference', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Run()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="bestDuration" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationForm.cs" Line="162">'AttributesOptimizationForm.Run()' declares a variable, 'bestDuration', of type 'TimeSpan', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateForRemappingList(System.Collections.Generic.List`1&lt;EVEMon.Common.AttributesOptimizer+RemappingResult&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationForm.cs" Line="281">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizationForm.UpdateForRemappingList(List&lt;AttributesOptimizer.RemappingResult&gt;)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AttributesOptimizationForm+Strategy" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'AttributesOptimizationForm.Strategy'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="AttributesOptimizationSettingsForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#buttonCharacter_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="AttributesOptimizationSettingsForm.cs" Line="56">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'AttributesOptimizationSettingsForm.buttonCharacter_Click(object, EventArgs)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BlueprintBrowserControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BelongsInMarketGroup(EVEMon.Common.Data.MarketGroup,System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="459">The 'this' parameter (or 'Me' in Visual Basic) of 'BlueprintBrowserControl.BelongsInMarketGroup(MarketGroup, IEnumerable&lt;int&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CharacterActivityTime(System.Double,System.Int32,System.Double,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="515">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.CharacterActivityTime(double, int, double, bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFacilityMultiplier(System.Double&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="597">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetFacilityMultiplier(out double)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="603">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetFacilityMultiplier(out double)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="603">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetFacilityMultiplier(out double)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="603">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetFacilityMultiplier(out double)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="606">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetFacilityMultiplier(out double)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFacilityResearchMultiplier(EVEMon.Common.BlueprintActivity)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="621">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetFacilityResearchMultiplier(BlueprintActivity)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="632">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetFacilityResearchMultiplier(BlueprintActivity)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetImplantMultiplier(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="656">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.GetImplantMultiplier(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeSpanToText(System.TimeSpan,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="525">The 'this' parameter (or 'Me' in Visual Basic) of 'BlueprintBrowserControl.TimeSpanToText(TimeSpan, bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateAttributes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="202">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.UpdateAttributes()' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="198">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.UpdateAttributes()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateRequiredMaterialsList()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="321">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.UpdateRequiredMaterialsList()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="328">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.UpdateRequiredMaterialsList()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="359">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.UpdateRequiredMaterialsList()' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="BlueprintBrowserControl.cs" Line="335">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'BlueprintBrowserControl.UpdateRequiredMaterialsList()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateBrowserControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#certSelectCtl_SelectionChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateBrowserControl.cs" Line="157">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CertificateBrowserControl.certSelectCtl_SelectionChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateBrowserControl.cs" Line="142">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CertificateBrowserControl.certSelectCtl_SelectionChanged(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedCertificate" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateBrowserControl.cs" Line="104">Because property 'CertificateBrowserControl.SelectedCertificate' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateEligibility()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateBrowserControl.cs" Line="295">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'CertificateBrowserControl.UpdateEligibility()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatePlanningMenuStatus(System.Windows.Forms.ToolStripMenuItem,EVEMon.Common.CertificateClass,EVEMon.Common.CertificateGrade,EVEMon.Common.Certificate)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateBrowserControl.cs" Line="318">The 'this' parameter (or 'Me' in Visual Basic) of 'CertificateBrowserControl.UpdatePlanningMenuStatus(ToolStripMenuItem, CertificateClass, CertificateGrade, Certificate)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateSelectControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#cmListSkills_Opening(System.Object,System.ComponentModel.CancelEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateSelectControl.cs" Line="806">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CertificateSelectControl.cmListSkills_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateSelectControl.cs" Line="808">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CertificateSelectControl.cmListSkills_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFilteredData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateSelectControl.cs" Line="504">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'CertificateSelectControl.GetFilteredData()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateSelectControl.cs" Line="505">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'CertificateSelectControl.GetFilteredData()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateSettingsForFilter(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateSelectControl.cs" Line="759">The 'this' parameter (or 'Me' in Visual Basic) of 'CertificateSelectControl.UpdateSettingsForFilter(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateSettingsForSort(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateSelectControl.cs" Line="768">The 'this' parameter (or 'Me' in Visual Basic) of 'CertificateSelectControl.UpdateSettingsForSort(int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateSettingsForTextSearch(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateSelectControl.cs" Line="750">The 'this' parameter (or 'Me' in Visual Basic) of 'CertificateSelectControl.UpdateSettingsForTextSearch(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CertificateTreeDisplayControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#cmListSkills_Opening(System.Object,System.ComponentModel.CancelEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateTreeDisplayControl.cs" Line="576">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CertificateTreeDisplayControl.cmListSkills_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateTreeDisplayControl.cs" Line="578">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CertificateTreeDisplayControl.cmListSkills_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#treeView_DrawNode(System.Object,System.Windows.Forms.DrawTreeNodeEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="height" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="CertificateTreeDisplayControl.cs" Line="492">'CertificateTreeDisplayControl.treeView_DrawNode(object, DrawTreeNodeEventArgs)' declares a variable, 'height', of type 'float', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EFTLoadoutImportationForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="EFT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'EFT' in type name 'EFTLoadoutImportationForm' by changing it to 'Eft'.</Issue>
          </Message>
          <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in type name 'EFTLoadoutImportationForm'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddItem(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EFTLoadoutImportationForm.cs" Line="344">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'EFTLoadoutImportationForm.AddItem(string)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsLoadout(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EFTLoadoutImportationForm.cs" Line="276">The 'this' parameter (or 'Me' in Visual Basic) of 'EFTLoadoutImportationForm.IsLoadout(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EFTLoadoutImportationForm.cs" Line="283">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'EFTLoadoutImportationForm.IsLoadout(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbEFTLoadout_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EFTLoadoutImportationForm.cs" Line="158">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'EFTLoadoutImportationForm.tbEFTLoadout_TextChanged(object, EventArgs)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EntrySuppressionWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CancelMultipleSkills" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EntrySuppressionWindow.cs" Line="19">Because property 'EntrySuppressionWindow.CancelMultipleSkills' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_CancelMultipleSkills(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EntrySuppressionWindow.cs" Line="21">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'EntrySuppressionWindow.CancelMultipleSkills.set(bool)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="EveObjectBrowserControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#eoImage" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.eoImage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="eo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'eo' in member name 'EveObjectBrowserControl.eoImage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EveClient_SettingsChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectBrowserControl.cs" Line="106">Remove the underscores from member name 'EveObjectBrowserControl.EveClient_SettingsChanged(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gbDescription" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.gbDescription' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lblEveObjCategory" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.lblEveObjCategory' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lbl' in member name 'EveObjectBrowserControl.lblEveObjCategory' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lblEveObjName" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.lblEveObjName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lbl' in member name 'EveObjectBrowserControl.lblEveObjName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lblHelp" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.lblHelp' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lbl' in member name 'EveObjectBrowserControl.lblHelp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_plan" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.m_plan' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_propertiesList" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.m_propertiesList' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pnlBrowserHeader" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.pnlBrowserHeader' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pnl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pnl' in member name 'EveObjectBrowserControl.pnlBrowserHeader' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pnlDetails" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.pnlDetails' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pnl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pnl' in member name 'EveObjectBrowserControl.pnlDetails' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#scDetails" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.scDetails' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#scDetailsRight" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.scDetailsRight' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#scObjectBrowser" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.scObjectBrowser' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbDescription" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectBrowserControl.tbDescription' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tb' in member name 'EveObjectBrowserControl.tbDescription' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EveObjectSelectControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildListView()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="105">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'EveObjectSelectControl.BuildListView()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CannotUse(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="eo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="462">In method 'EveObjectSelectControl.CannotUse(Item)', correct the spelling of 'eo' in parameter name 'eo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CanUse(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="eo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="387">In method 'EveObjectSelectControl.CanUse(Item)', correct the spelling of 'eo' in parameter name 'eo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cbUsabilityFilter" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.cbUsabilityFilter' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'cb' in member name 'EveObjectSelectControl.cbUsabilityFilter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#contextMenu_Opening(System.Object,System.ComponentModel.CancelEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="357">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'EveObjectSelectControl.contextMenu_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="359">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'EveObjectSelectControl.contextMenu_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EveObjectSelectControl_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="48">Remove the underscores from member name 'EveObjectSelectControl.EveObjectSelectControl_Load(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lblFilter" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.lblFilter' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lbl' in member name 'EveObjectSelectControl.lblFilter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbNoMatches" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.lbNoMatches' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbSearchList" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.lbSearchList' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbSearchTextHint" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.lbSearchTextHint' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbSearchTextHint_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="lb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="62">Correct the casing of 'lb' in member name 'EveObjectSelectControl.lbSearchTextHint_Click(object, EventArgs)' by changing it to 'LB'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="62">Remove the underscores from member name 'EveObjectSelectControl.lbSearchTextHint_Click(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lowerPanel" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.lowerPanel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_activity" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.m_activity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_activityFilter" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.m_activityFilter' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_plan" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.m_plan' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_selectedObjects" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.m_selectedObjects' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;Item&gt;' in 'EveObjectSelectControl.m_selectedObjects' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_usabilityPredicate" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.m_usabilityPredicate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pbSearchImage" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.pbSearchImage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="pb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'pb' in member name 'EveObjectSelectControl.pbSearchImage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SearchNode(System.Windows.Forms.TreeNode,System.String,System.Collections.Generic.List`1&lt;EVEMon.Common.Data.Item&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="162">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'EveObjectSelectControl.SearchNode(TreeNode, string, List&lt;Item&gt;)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="162">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'EveObjectSelectControl.SearchNode(TreeNode, string, List&lt;Item&gt;)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectAll(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="eo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="377">In method 'EveObjectSelectControl.SelectAll(Item)', correct the spelling of 'eo' in parameter name 'eo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SelectedObjects" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="193">Change 'List&lt;Item&gt;' in 'EveObjectSelectControl.SelectedObjects' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSelectedObjects(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Data.Item&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="224">In method 'EveObjectSelectControl.SetSelectedObjects(IEnumerable&lt;Item&gt;)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbSearchText" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.tbSearchText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="tb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'tb' in member name 'EveObjectSelectControl.tbSearchText' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbSearchText_Enter(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="tb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="72">Correct the casing of 'tb' in member name 'EveObjectSelectControl.tbSearchText_Enter(object, EventArgs)' by changing it to 'TB'.</Issue>
            </Message>
            <Message Id="tb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="72">Correct the spelling of 'tb' in member name 'EveObjectSelectControl.tbSearchText_Enter(object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="72">Remove the underscores from member name 'EveObjectSelectControl.tbSearchText_Enter(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbSearchText_Leave(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="tb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="82">Correct the casing of 'tb' in member name 'EveObjectSelectControl.tbSearchText_Leave(object, EventArgs)' by changing it to 'TB'.</Issue>
            </Message>
            <Message Id="tb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="82">Correct the spelling of 'tb' in member name 'EveObjectSelectControl.tbSearchText_Leave(object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="82">Remove the underscores from member name 'EveObjectSelectControl.tbSearchText_Leave(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbSearchText_TextChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="tb" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="92">Correct the casing of 'tb' in member name 'EveObjectSelectControl.tbSearchText_TextChanged(object, EventArgs)' by changing it to 'TB'.</Issue>
            </Message>
            <Message Id="tb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="92">Correct the spelling of 'tb' in member name 'EveObjectSelectControl.tbSearchText_TextChanged(object, EventArgs)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="EveObjectSelectControl.cs" Line="92">Remove the underscores from member name 'EveObjectSelectControl.tbSearchText_TextChanged(object, EventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tvItems" Kind="Field" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.tvItems' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#upperPanel" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EveObjectSelectControl.upperPanel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HighlightingHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Invoke(EVEMon.SkillPlanner.AttributeBarControl,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'highlightValue' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ImplantCalculator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PlanEditor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="44">Because property 'ImplantCalculator.PlanEditor' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateAttributeLabels(EVEMon.Common.EveAttribute,System.Int32,System.Windows.Forms.Label,System.Windows.Forms.Label)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="98">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ImplantCalculator.UpdateAttributeLabels(EveAttribute, int, Label, Label)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="103">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ImplantCalculator.UpdateAttributeLabels(EveAttribute, int, Label, Label)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="106">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ImplantCalculator.UpdateAttributeLabels(EveAttribute, int, Label, Label)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateTimes()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="139">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ImplantCalculator.UpdateTimes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="145">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ImplantCalculator.UpdateTimes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="158">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ImplantCalculator.UpdateTimes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ImplantCalculator.cs" Line="164">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ImplantCalculator.UpdateTimes()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IPlanOrderPluggable" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UpdateStatistics(EVEMon.Common.BasePlan,System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'areRemappingPointsActive' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemBrowserControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ttItem" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ItemBrowserControl.ttItem' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemSelectControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#m_techPredicate" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ItemSelectControl.m_techPredicate' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NewPlanWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PlanName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="NewPlanWindow.cs" Line="18">Because property 'NewPlanWindow.PlanName' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanEditorControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetColumnTextForItem(EVEMon.Common.PlanEntry,EVEMon.Common.SettingsObjects.PlanColumn,System.String,System.Globalization.NumberFormatInfo)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="576">The 'this' parameter (or 'Me' in Visual Basic) of 'PlanEditorControl.GetColumnTextForItem(PlanEntry, PlanColumn, string, NumberFormatInfo)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="594">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'PlanEditorControl.GetColumnTextForItem(PlanEntry, PlanColumn, string, NumberFormatInfo)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="597">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'PlanEditorControl.GetColumnTextForItem(PlanEntry, PlanColumn, string, NumberFormatInfo)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="603">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanEditorControl.GetColumnTextForItem(PlanEntry, PlanColumn, string, NumberFormatInfo)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="621">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanEditorControl.GetColumnTextForItem(PlanEntry, PlanColumn, string, NumberFormatInfo)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="624">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanEditorControl.GetColumnTextForItem(PlanEntry, PlanColumn, string, NumberFormatInfo)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="600">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'PlanEditorControl.GetColumnTextForItem(PlanEntry, PlanColumn, string, NumberFormatInfo)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFirstSelectedEntry()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="item" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="926">'PlanEditorControl.GetFirstSelectedEntry()' declares a variable, 'item', of type 'ListViewItem', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPlanEntry(System.Windows.Forms.ListViewItem)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="912">The 'this' parameter (or 'Me' in Visual Basic) of 'PlanEditorControl.GetPlanEntry(ListViewItem)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPlanSort(System.Windows.Forms.ColumnHeader)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="1281">The 'this' parameter (or 'Me' in Visual Basic) of 'PlanEditorControl.GetPlanSort(ColumnHeader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lvSkills_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="1966">Modify the call to 'Timer.Interval.set(int)' in method 'PlanEditorControl.lvSkills_SelectedIndexChanged(object, EventArgs)' to set the timer interval to a value that's greater than or equal to one second.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateSortVisualFeedback()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="order" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanEditorControl.cs" Line="1350">'PlanEditorControl.UpdateSortVisualFeedback()' declares a variable, 'order', of type 'ThreeStateSortOrder', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Perform(System.Windows.Forms.Form,EVEMon.Common.IPlanOperation)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanHelper.cs" Line="146">Consider changing the type of parameter 'parentForm' in 'PlanHelper.Perform(Form, IPlanOperation)' from 'Form' to its base type 'IWin32Window'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatesRegularPlanToMenu(System.Windows.Forms.ToolStripItem,EVEMon.Common.Plan,EVEMon.Common.Skill,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanHelper.cs" Line="29">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanHelper.UpdatesRegularPlanToMenu(ToolStripItem, Plan, Skill, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanManagementWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#miDelete_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanManagementWindow.cs" Line="395">Change 'PlanManagementWindow.miDelete_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateContent(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanManagementWindow.cs" Line="135">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanManagementWindow.UpdateContent(bool)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanPrinter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'PlanPrinter' because it creates members of the following IDisposable types: 'SolidBrush'. If 'PlanPrinter' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#doc_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="cumulativeSkillTotal" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Printing" File="PlanPrinter.cs" Line="93">'PlanPrinter.doc_PrintPage(object, PrintPageEventArgs)' declares a variable, 'cumulativeSkillTotal', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Print(System.Drawing.Graphics,System.String,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="p" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Printing" File="PlanPrinter.cs" Line="353">Parameter 'p' of 'PlanPrinter.Print(Graphics, string, Point)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintBold(System.Drawing.Graphics,System.String,System.Drawing.Point)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="p" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Printing" File="PlanPrinter.cs" Line="339">Parameter 'p' of 'PlanPrinter.PrintBold(Graphics, string, Point)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintEntry(System.Drawing.Graphics,System.Int32,EVEMon.Common.PlanEntry)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Printing" File="PlanPrinter.cs" Line="168">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanPrinter.PrintEntry(Graphics, int, PlanEntry)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintPageFooter(System.Drawing.Graphics,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\Printing" File="PlanPrinter.cs" Line="275">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanPrinter.PrintPageFooter(Graphics, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanToOperationForm" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnLoad(System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanToOperationForm.cs" Line="76">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'PlanToOperationForm.OnLoad(EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlanWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckInvalidEntries()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="313">Change 'PlanWindow.CheckInvalidEntries()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowBlueprintInBrowser(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="243">In method 'PlanWindow.ShowBlueprintInBrowser(Item)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowCertInBrowser(EVEMon.Common.Certificate)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="263">In method 'PlanWindow.ShowCertInBrowser(Certificate)', consider providing a more meaningful name than parameter name 'c'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowItemInBrowser(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="253">In method 'PlanWindow.ShowItemInBrowser(Item)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowShipInBrowser(EVEMon.Common.Data.Item)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="233">In method 'PlanWindow.ShowShipInBrowser(Item)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsbCopyForum_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="649">Change 'PlanWindow.tsbCopyForum_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="657">Change 'PlanWindow.tsbCopyForum_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsbDeletePlan_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="PlanWindow.cs" Line="439">Change 'PlanWindow.tsbDeletePlan_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RecommendedCertificatesControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#tvCertList_DrawNode(System.Object,System.Windows.Forms.DrawTreeNodeEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="lightForeColor" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="RecommendedCertificatesControl.cs" Line="331">'RecommendedCertificatesControl.tvCertList_DrawNode(object, DrawTreeNodeEventArgs)' declares a variable, 'lightForeColor', of type 'Color', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReqCertificatesTreeView" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#handleDoubleClick(System.Windows.Forms.Message&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.Parse(System.String,System.Globalization.NumberStyles)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="RecommendedCertificatesControl.cs" Line="621">Because the behavior of 'int.Parse(string, NumberStyles)' could vary based on the current user's locale settings, replace this call in 'ReqCertificatesTreeView.handleDoubleClick(ref Message)' with a call to 'int.Parse(string, NumberStyles, IFormatProvider)'. If the result of 'int.Parse(string, NumberStyles, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="RecommendedCertificatesControl.cs" Line="622">Because the behavior of 'int.Parse(string, NumberStyles)' could vary based on the current user's locale settings, replace this call in 'ReqCertificatesTreeView.handleDoubleClick(ref Message)' with a call to 'int.Parse(string, NumberStyles, IFormatProvider)'. If the result of 'int.Parse(string, NumberStyles, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReqSkillsTreeView" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#handleDoubleClick(System.Windows.Forms.Message&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.Parse(System.String,System.Globalization.NumberStyles)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ReqSkillsTreeView.cs" Line="28">Because the behavior of 'int.Parse(string, NumberStyles)' could vary based on the current user's locale settings, replace this call in 'ReqSkillsTreeView.handleDoubleClick(ref Message)' with a call to 'int.Parse(string, NumberStyles, IFormatProvider)'. If the result of 'int.Parse(string, NumberStyles, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ReqSkillsTreeView.cs" Line="29">Because the behavior of 'int.Parse(string, NumberStyles)' could vary based on the current user's locale settings, replace this call in 'ReqSkillsTreeView.handleDoubleClick(ref Message)' with a call to 'int.Parse(string, NumberStyles, IFormatProvider)'. If the result of 'int.Parse(string, NumberStyles, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShipBrowserControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#lblBattleclinic_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="window" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipBrowserControl.cs" Line="26">'ShipBrowserControl.lblBattleclinic_LinkClicked(object, LinkLabelLinkClickedEventArgs)' declares a variable, 'window', of type 'ShipLoadoutSelectWindow', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShipLoadoutSelectWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in type name 'ShipLoadoutSelectWindow'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="32">Initialize all static fields in 'ShipLoadoutSelectWindow' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExtractProperties(System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="609">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.ExtractProperties(Dictionary&lt;string, List&lt;string&gt;&gt;)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="617">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.ExtractProperties(Dictionary&lt;string, List&lt;string&gt;&gt;)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="625">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.ExtractProperties(Dictionary&lt;string, List&lt;string&gt;&gt;)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="633">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.ExtractProperties(Dictionary&lt;string, List&lt;string&gt;&gt;)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="641">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.ExtractProperties(Dictionary&lt;string, List&lt;string&gt;&gt;)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lblForum_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="439">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.lblForum_LinkClicked(object, LinkLabelLinkClickedEventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="443">Change 'ShipLoadoutSelectWindow.lblForum_LinkClicked(object, LinkLabelLinkClickedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnLoadoutFeedDownloaded(EVEMon.Common.Serialization.Battleclinic.SerializableLoadoutFeed,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="198">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.OnLoadoutFeedDownloaded(SerializableLoadoutFeed, string)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryLoadoutsFeed()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="104">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.QueryLoadoutsFeed()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="111">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.QueryLoadoutsFeed()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ShipLoadoutSelectWindow+LoadoutListSorter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Loadout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Loadout' in type name 'ShipLoadoutSelectWindow.LoadoutListSorter'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'ShipLoadoutSelectWindow.LoadoutListSorter'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Compare(System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Compare(System.String,System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="687">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.LoadoutListSorter.Compare(object, object)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="ShipLoadoutSelectWindow.cs" Line="690">Because the behavior of 'string.Compare(string, string)' could vary based on the current user's locale settings, replace this call in 'ShipLoadoutSelectWindow.LoadoutListSorter.Compare(object, object)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_loadouts" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ShipLoadoutSelectWindow.LoadoutListSorter.m_loadouts' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillBrowser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#UpdateLevelLabel(System.Windows.Forms.Label,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="isPlanned" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillBrowserControl.cs" Line="203">'SkillBrowser.UpdateLevelLabel(Label, int)' declares a variable, 'isPlanned', of type 'bool', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillBrowserControl.cs" Line="221">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'SkillBrowser.UpdateLevelLabel(Label, int)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdatePlanToMenuItem(System.Windows.Forms.ToolStripMenuItem,EVEMon.Common.Skill,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="isTraining" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillBrowserControl.cs" Line="311">'SkillBrowser.UpdatePlanToMenuItem(ToolStripMenuItem, Skill, int)' declares a variable, 'isTraining', of type 'bool', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillClickedEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#X" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillTreeDisplay.cs" Line="811">Consider providing a more meaningful name than member name 'SkillClickedEventArgs.X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillTreeDisplay.cs" Line="816">Consider providing a more meaningful name than member name 'SkillClickedEventArgs.Y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillClickedHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'SkillClickedHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SkillExplorerWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreatePrereqList(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.SkillLevel&gt;,System.Collections.Generic.List`1&lt;EVEMon.Common.SkillLevel&gt;&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillExplorerWindow.cs" Line="533">The 'this' parameter (or 'Me' in Visual Basic) of 'SkillExplorerWindow.CreatePrereqList(IEnumerable&lt;SkillLevel&gt;, ref List&lt;SkillLevel&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatPrerequisite(System.Text.StringBuilder,EVEMon.Common.SkillLevel,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillExplorerWindow.cs" Line="712">The 'this' parameter (or 'Me' in Visual Basic) of 'SkillExplorerWindow.FormatPrerequisite(StringBuilder, SkillLevel, ref int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsShowItemPrereqs_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillExplorerWindow.cs" Line="829">Change 'SkillExplorerWindow.tsShowItemPrereqs_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tsShowSkillPrereqs_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillExplorerWindow.cs" Line="699">Change 'SkillExplorerWindow.tsShowSkillPrereqs_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillSelectControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#cmSkills_Opening(System.Object,System.ComponentModel.CancelEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="815">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.cmSkills_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="816">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.cmSkills_Opening(object, CancelEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFilteredData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="301">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetFilteredData()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="302">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetFilteredData()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="302">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetFilteredData()' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetIconSet(System.Int32,System.Windows.Forms.ImageList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="171">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetIconSet(int, ImageList)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="186">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetIconSet(int, ImageList)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="171">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetIconSet(int, ImageList)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="196">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetIconSet(int, ImageList)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSortedListData(System.Collections.Generic.IEnumerable`1&lt;EVEMon.Common.Skill&gt;&amp;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="593">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetSortedListData(ref IEnumerable&lt;Skill&gt;, ref IEnumerable&lt;string&gt;)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillSelectControl.cs" Line="599">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'SkillSelectControl.GetSortedListData(ref IEnumerable&lt;Skill&gt;, ref IEnumerable&lt;string&gt;)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillTreeDisplay" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MeasureAndDrawText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\SkillPlanner" File="SkillTreeDisplay.cs" Line="645">The 'this' parameter (or 'Me' in Visual Basic) of 'SkillTreeDisplay.MeasureAndDrawText(Graphics, string, Font, Point, Color)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SkillClicked" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'SkillClickedHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SkillTreeDisplay+Cell" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'SkillTreeDisplay.Cell' because it creates members of the following IDisposable types: 'SkillTreeDisplay'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SkillTreeDisplay+Row" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Implement IDisposable on 'SkillTreeDisplay.Row' because it creates members of the following IDisposable types: 'SkillTreeDisplay'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ValueChangingHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Invoke(EVEMon.SkillPlanner.AttributeBarControl,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'deltaValue' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SNCalendar">
       <Types>
        <Type Name="GoogleAppointmentFilter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AddAppointment()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="AppointmentFilter.cs" Line="517">Modify 'GoogleAppointmentFilter.AddAppointment()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="insertedEntry" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="AppointmentFilter.cs" Line="535">'GoogleAppointmentFilter.AddAppointment()' declares a variable, 'insertedEntry', of type 'AtomEntry', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGoogleMinutes(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="AppointmentFilter.cs" Line="619">'GoogleAppointmentFilter.GetGoogleMinutes(int, int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="AppointmentFilter.cs" Line="627">'GoogleAppointmentFilter.GetGoogleMinutes(int, int)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateAppointment(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon\ExternalCalendar" File="AppointmentFilter.cs" Line="577">Modify 'GoogleAppointmentFilter.UpdateAppointment(int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../EVEMon/bin/x86/Debug/EVEMon.LogitechG15.dll">
   <Modules>
    <Module Name="evemon.logitechg15.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EVEMon.LogitechG15.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'EVE' in assembly name 'EVEMon.LogitechG15.dll' by changing it to 'Eve'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EVEMon.LogitechG15.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EVEMon.LogitechG15">
       <Types>
        <Type Name="Lcdisplay" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Lcdisplay" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lcdisplay' in type name 'Lcdisplay'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AbbreviationFormat(System.Decimal,System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="850">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Lcdisplay.AbbreviationFormat(decimal, float)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="853">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Lcdisplay.AbbreviationFormat(decimal, float)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="856">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Lcdisplay.AbbreviationFormat(decimal, float)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BUTTON1_VALUE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BUTTON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BUTTON' in member name 'Lcdisplay.BUTTON1_VALUE' by changing it to 'Button'.</Issue>
            </Message>
            <Message Id="VALUE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VALUE' in member name 'Lcdisplay.BUTTON1_VALUE' by changing it to 'Value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lcdisplay.BUTTON1_VALUE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BUTTON2_VALUE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BUTTON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BUTTON' in member name 'Lcdisplay.BUTTON2_VALUE' by changing it to 'Button'.</Issue>
            </Message>
            <Message Id="VALUE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VALUE' in member name 'Lcdisplay.BUTTON2_VALUE' by changing it to 'Value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lcdisplay.BUTTON2_VALUE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BUTTON3_VALUE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BUTTON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BUTTON' in member name 'Lcdisplay.BUTTON3_VALUE' by changing it to 'Button'.</Issue>
            </Message>
            <Message Id="VALUE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VALUE' in member name 'Lcdisplay.BUTTON3_VALUE' by changing it to 'Value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lcdisplay.BUTTON3_VALUE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BUTTON4_VALUE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BUTTON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BUTTON' in member name 'Lcdisplay.BUTTON4_VALUE' by changing it to 'Button'.</Issue>
            </Message>
            <Message Id="VALUE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VALUE' in member name 'Lcdisplay.BUTTON4_VALUE' by changing it to 'Value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Lcdisplay.BUTTON4_VALUE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Characters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'Lcdisplay.Characters' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="m_bmpLCD" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="88">'Lcdisplay' contains field 'Lcdisplay.m_bmpLCD' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'Lcdisplay' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="m_bmpLCDX" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="88">'Lcdisplay' contains field 'Lcdisplay.m_bmpLCDX' that is of IDisposable type: 'Bitmap'. Change the Dispose method on 'Lcdisplay' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FirstSkillCompletionRemaingTime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Remaing" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="304">Correct the spelling of 'Remaing' in member name 'Lcdisplay.FirstSkillCompletionRemaingTime' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderEVETime()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="554">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Lcdisplay.RenderEVETime()' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderWalletBalance()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="512">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Lcdisplay.RenderWalletBalance()' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowEVETime" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="177">Correct the casing of 'EVE' in member name 'Lcdisplay.ShowEVETime' by changing it to 'Eve'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateLcdDisplay(EVEMon.LogitechG15.LcdisplayPriority)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.PaintSkillCompletionMessage()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.PaintSplash()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintCharactersList()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintCycleSettings()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintRefreshingMessage()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' which has a LinkDemand. By making this call, 'Bitmap.LockBits(Rectangle, ImageLockMode, PixelFormat)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintsCharacter()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.PaintSkillCompletionMessage()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.PaintSplash()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintCharactersList()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintCycleSettings()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintRefreshingMessage()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="741">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' calls into 'Bitmap.UnlockBits(BitmapData)' which has a LinkDemand. By making this call, 'Bitmap.UnlockBits(BitmapData)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)'&#xD;&#xA;   -&gt;'Lcdisplay.UpdateLcdDisplay()'&#xD;&#xA;   -&gt;'Lcdisplay.PaintsCharacter()'&#xD;&#xA;   -&gt;'Lcdisplay.Paint()'</Issue>
            </Message>
            <Message Id="length" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="Lcdisplay.cs" Line="759">'Lcdisplay.UpdateLcdDisplay(LcdisplayPriority)' declares a variable, 'length', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#APIUpdateRequested" Kind="Event" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'CharacterHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CharacterHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'API' in member name 'Lcdisplay.APIUpdateRequested' by changing it to 'Api'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'CharacterHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AutoCycleChanged" Kind="Event" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'CharAutoCycleHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CharAutoCycleHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'CharAutoCycleHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CurrentCharacterChanged" Kind="Event" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'CharacterHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CharacterHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'CharacterHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LcdisplayPriority" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Lcdisplay" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Lcdisplay' in type name 'LcdisplayPriority'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="LcdState" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="NotFlagsNoZeroValue" Certainty="95" Level="CriticalError">Add a member to 'LcdState' that has a value of zero with a suggested name of 'None'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ProgressLine" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Render(System.Drawing.Graphics,System.Drawing.Graphics,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="ProgressLine.cs" Line="39">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ProgressLine.Render(Graphics, Graphics, float)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EveMon.LogitechG15" File="ProgressLine.cs" Line="31">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ProgressLine.Render(Graphics, Graphics, float)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../EVEMon/bin/x86/Debug/EVEMon.PieChart.dll">
   <Modules>
    <Module Name="evemon.piechart.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EVEMon.PieChart.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'EVE' in assembly name 'EVEMon.PieChart.dll' by changing it to 'Eve'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EVEMon.PieChart.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'EVEMon.PieChart.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EVEMon.PieChart">
       <Types>
        <Type Name="ColorUtil" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in type name 'ColorUtil'.</Issue>
          </Message>
          <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in type name 'ColorUtil'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'ColorUtil' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'ColorUtil' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateColorWithCorrectedLightness(System.Drawing.Color,System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="Util.cs" Line="156">Correct the spelling of 'Color' in member name 'ColorUtil.CreateColorWithCorrectedLightness(Color, float)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="Util.cs" Line="156">In method 'ColorUtil.CreateColorWithCorrectedLightness(Color, float)', correct the spelling of 'color' in parameter name 'color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EdgeColor" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in type name 'EdgeColor'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'EdgeColor' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'EdgeColor' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetRenderingColor(EVEMon.PieChart.EdgeColorType,System.Drawing.Color)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="Util.cs" Line="85">Correct the spelling of 'Color' in member name 'EdgeColor.GetRenderingColor(EdgeColorType, Color)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="Util.cs" Line="85">In method 'EdgeColor.GetRenderingColor(EdgeColorType, Color)', correct the spelling of 'Color' in parameter name 'edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="Util.cs" Line="85">In method 'EdgeColor.GetRenderingColor(EdgeColorType, Color)', correct the spelling of 'color' in parameter name 'color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#s_brightnessThreshold" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'EdgeColor.s_brightnessThreshold' is declared as 'static readonly' but is initialized with a constant value '0.4'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EdgeColorType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in type name 'EdgeColorType'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SurfaceColor" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in member name 'EdgeColorType.SurfaceColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SystemColor" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in member name 'EdgeColorType.SystemColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GraphicsUtil" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in type name 'GraphicsUtil'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'GraphicsUtil' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'GraphicsUtil' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IncludePoint(System.Drawing.RectangleF&amp;,System.Drawing.PointF)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="GraphicsUtil.cs" Line="20">Consider a design that does not require that 'rect' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IncludePointX(System.Drawing.RectangleF&amp;,System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="GraphicsUtil.cs" Line="36">Consider a design that does not require that 'rect' be a reference parameter.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="GraphicsUtil.cs" Line="36">In method 'GraphicsUtil.IncludePointX(ref RectangleF, float)', correct the spelling of 'x' in parameter name 'xToInclude' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IncludePointY(System.Drawing.RectangleF&amp;,System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="GraphicsUtil.cs" Line="56">Consider a design that does not require that 'rect' be a reference parameter.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="GraphicsUtil.cs" Line="56">In method 'GraphicsUtil.IncludePointY(ref RectangleF, float)', correct the spelling of 'y' in parameter name 'yToInclude' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PieChart3D" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Drawing.RectangleF,System.Decimal[],System.Drawing.Color[],System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="149">In method 'PieChart3D.PieChart3D(RectangleF, decimal[], Color[], float)', correct the spelling of 'Colors' in parameter name 'sliceColors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Decimal[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="42">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[])', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="42">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[])', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Decimal[],System.Drawing.Color[],System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="127">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], Color[], float)', correct the spelling of 'Colors' in parameter name 'sliceColors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="127">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], Color[], float)', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="127">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], Color[], float)', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Decimal[],System.Drawing.Color[],System.Single,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="186">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], Color[], float, string[])', correct the spelling of 'Colors' in parameter name 'sliceColors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="186">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], Color[], float, string[])', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="186">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], Color[], float, string[])', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Decimal[],System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="77">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], float)', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="77">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], float)', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Decimal[],System.Single,System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="220">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], float, string[])', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="220">In method 'PieChart3D.PieChart3D(float, float, float, float, decimal[], float, string[])', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChartSize" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="369">Because property 'PieChart3D.ChartSize' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Colors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="278">Correct the spelling of 'Colors' in member name 'PieChart3D.Colors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="278">Because property 'PieChart3D.Colors' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="278">Change 'PieChart3D.Colors' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatePieSlice(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,EVEMon.PieChart.ShadowStyle,EVEMon.PieChart.EdgeColorType,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="909">In method 'PieChart3D.CreatePieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'Color' in parameter name 'edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="909">In method 'PieChart3D.CreatePieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'color' in parameter name 'color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatePieSliceHighlighted(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,EVEMon.PieChart.ShadowStyle,EVEMon.PieChart.EdgeColorType,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="957">In method 'PieChart3D.CreatePieSliceHighlighted(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'Color' in parameter name 'edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="957">In method 'PieChart3D.CreatePieSliceHighlighted(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'color' in parameter name 'color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EdgeColorType" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="313">Correct the spelling of 'Color' in member name 'PieChart3D.EdgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="313">Because property 'PieChart3D.EdgeColorType' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EdgeLineWidth" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="321">Because property 'PieChart3D.EdgeLineWidth' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FitToBoundingRectangle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="459">Because property 'PieChart3D.FitToBoundingRectangle' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForeColor" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="303">Correct the spelling of 'Color' in member name 'PieChart3D.ForeColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFittingRectangle()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="706">Change 'PieChart3D.GetFittingRectangle()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetForemostPieSlice(EVEMon.PieChart.PieSlice[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="684">The 'this' parameter (or 'Me' in Visual Basic) of 'PieChart3D.GetForemostPieSlice(PieSlice[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HighlightedIndex" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="480">Because property 'PieChart3D.HighlightedIndex' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitialAngle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="468">Because property 'PieChart3D.InitialAngle' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsDisplacementValid(System.Single)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="1114">The 'this' parameter (or 'Me' in Visual Basic) of 'PieChart3D.IsDisplacementValid(float)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_edgeColorType" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_edgeColorType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in member name 'PieChart3D.m_edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_edgeLineWidth" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_edgeLineWidth' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_fitToBoundingRectangle" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_fitToBoundingRectangle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_font" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_font' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_foreColor" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_foreColor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Color' in member name 'PieChart3D.m_foreColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_heightBoundingRect" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_heightBoundingRect' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_highlightedIndex" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_highlightedIndex' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_initialAngle" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_initialAngle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pieSlices" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_pieSlices' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pieSlicesMapping" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_pieSlicesMapping' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_shadowStyle" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_shadowStyle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_sliceColors" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_sliceColors' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Colors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Colors' in member name 'PieChart3D.m_sliceColors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_sliceRelativeDisplacements" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_sliceRelativeDisplacements' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_sliceRelativeHeight" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_sliceRelativeHeight' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_texts" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_texts' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_values" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_values' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_widthBoundingRect" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_widthBoundingRect' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_xBoundingRect" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_xBoundingRect' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_yBoundingRect" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChart3D.m_yBoundingRect' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShadowStyle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="450">Because property 'PieChart3D.ShadowStyle' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SliceRelativeDisplacement" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="344">Because property 'PieChart3D.SliceRelativeDisplacement' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SliceRelativeDisplacements" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="357">Because property 'PieChart3D.SliceRelativeDisplacements' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="357">Change 'PieChart3D.SliceRelativeDisplacements' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SliceRelativeHeight" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="331">Because property 'PieChart3D.SliceRelativeHeight' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Texts" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="286">Because property 'PieChart3D.Texts' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="286">Change 'PieChart3D.Texts' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Values" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="267">Because property 'PieChart3D.Values' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="267">Change 'PieChart3D.Values' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#X" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="X" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="431">Consider providing a more meaningful name than member name 'PieChart3D.X'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Y" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChart.cs" Line="441">Consider providing a more meaningful name than member name 'PieChart3D.Y'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PieChartControl" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BottomMargin" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="80">Because property 'PieChartControl.BottomMargin' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Colors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Colors" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="118">Correct the spelling of 'Colors' in member name 'PieChartControl.Colors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="118">Change 'PieChartControl.Colors' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EdgeColorType" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="187">Correct the spelling of 'Color' in member name 'PieChartControl.EdgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="187">Because property 'PieChartControl.EdgeColorType' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EdgeLineWidth" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="199">Because property 'PieChartControl.EdgeLineWidth' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FitChart" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="94">Because property 'PieChartControl.FitChart' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitialAngle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="211">Because property 'PieChartControl.InitialAngle' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LeftMargin" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="41">Because property 'PieChartControl.LeftMargin' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mouseDown" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieChartControl.mouseDown' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnMouseMove(System.Windows.Forms.MouseEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Decimal.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="355">Because the behavior of 'decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'PieChartControl.OnMouseMove(MouseEventArgs)' with a call to 'decimal.ToString(IFormatProvider)'. If the result of 'decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="235">In member 'PieChartControl.OnPaint(PaintEventArgs)', change parameter name 'args' to 'e' in order to match the identifier as it has been declared in 'Control.OnPaint(PaintEventArgs)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RightMargin" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="54">Because property 'PieChartControl.RightMargin' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShadowStyle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="175">Because property 'PieChartControl.ShadowStyle' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SliceRelativeDisplacements" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="134">Because property 'PieChartControl.SliceRelativeDisplacements' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="134">Change 'PieChartControl.SliceRelativeDisplacements' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SliceRelativeHeight" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="163">Because property 'PieChartControl.SliceRelativeHeight' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Texts" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="154">Because property 'PieChartControl.Texts' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="154">Change 'PieChartControl.Texts' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolTips" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="145">Change 'PieChartControl.ToolTips' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TopMargin" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="67">Because property 'PieChartControl.TopMargin' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Values" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Name="AddGetter" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="106">Because property 'PieChartControl.Values' is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieChartControl.cs" Line="106">Change 'PieChartControl.Values' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PieSlice" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Drawing.Color,EVEMon.PieChart.ShadowStyle,EVEMon.PieChart.EdgeColorType,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="207">In method 'PieSlice.PieSlice(Rectangle, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'Color' in parameter name 'edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="207">In method 'PieSlice.PieSlice(Rectangle, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'Color' in parameter name 'surfaceColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Drawing.Color,EVEMon.PieChart.ShadowStyle,EVEMon.PieChart.EdgeColorType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="129">In method 'PieSlice.PieSlice(RectangleF, float, float, float, Color, ShadowStyle, EdgeColorType)', correct the spelling of 'Color' in parameter name 'edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="129">In method 'PieSlice.PieSlice(RectangleF, float, float, float, Color, ShadowStyle, EdgeColorType)', correct the spelling of 'Color' in parameter name 'surfaceColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="48">In method 'PieSlice.PieSlice(float, float, float, float, float, float, Color)', correct the spelling of 'Color' in parameter name 'surfaceColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="48">In method 'PieSlice.PieSlice(float, float, float, float, float, float, Color)', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="48">In method 'PieSlice.PieSlice(float, float, float, float, float, float, Color)', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,EVEMon.PieChart.ShadowStyle,EVEMon.PieChart.EdgeColorType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="90">'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;PieSlice..ctor(Single, Single, Single, Single, Single, Single, Single, Color, ShadowStyle, EdgeColorType)&#xD;&#xA;PieSlice.InitializePieSlice(Single, Single, Single, Single, Single):Void&#xD;&#xA;PieSlice.CreateSurfaceBrushes(Color, ShadowStyle):Void</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="90">'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;PieSlice..ctor(Single, Single, Single, Single, Single, Single, Single, Color, ShadowStyle, EdgeColorType)&#xD;&#xA;PieSlice.InitializePieSlice(Single, Single, Single, Single, Single):Void&#xD;&#xA;PieSlice.CreateSurfaceBrushes(Color, ShadowStyle):Void&#xD;&#xA;PieSlice.CreateBrushForPeriphery(Color):Brush</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="90">'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;PieSlice..ctor(Single, Single, Single, Single, Single, Single, Single, Color, ShadowStyle, EdgeColorType)&#xD;&#xA;PieSlice.InitializePieSlice(Single, Single, Single, Single, Single):Void&#xD;&#xA;PieSlice.CreateSurfaceBrushes(Color, ShadowStyle):Void&#xD;&#xA;PieSlice.CreateBrushForSide(Color, Double):Brush</Issue>
            </Message>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="90">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType)', correct the spelling of 'Color' in parameter name 'edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="90">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType)', correct the spelling of 'Color' in parameter name 'surfaceColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="90">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType)', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="90">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType)', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,EVEMon.PieChart.ShadowStyle,EVEMon.PieChart.EdgeColorType,System.Single)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="174">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'Color' in parameter name 'edgeColorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="174">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'Color' in parameter name 'surfaceColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="174">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'x' in parameter name 'xBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="174">In method 'PieSlice.PieSlice(float, float, float, float, float, float, float, Color, ShadowStyle, EdgeColorType, float)', correct the spelling of 'y' in parameter name 'yBoundingRect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateBrushForPeriphery(System.Drawing.Color)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="693">In method 'PieSlice.CreateBrushForPeriphery(Color)', correct the spelling of 'color' in parameter name 'color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateBrushForSide(System.Drawing.Color,System.Double)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="679">In method 'PieSlice.CreateBrushForSide(Color, double)', correct the spelling of 'color' in parameter name 'color' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSurfaceBrushes(System.Drawing.Color,EVEMon.PieChart.ShadowStyle)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Color" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="625">In method 'PieSlice.CreateSurfaceBrushes(Color, ShadowStyle)', correct the spelling of 'Color' in parameter name 'surfaceColor' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CylinderSurfaceSectionContainsPoint(System.Drawing.PointF,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="endAngle" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="1014">Parameter 'endAngle' of 'PieSlice.CylinderSurfaceSectionContainsPoint(PointF, float, float, PointF, PointF)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="startAngle" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="1014">Parameter 'startAngle' of 'PieSlice.CylinderSurfaceSectionContainsPoint(PointF, float, float, PointF, PointF)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTextPosition()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="320">Change 'PieSlice.GetTextPosition()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_boundingRectangle" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_boundingRectangle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_brushEndSide" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_brushEndSide' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_brushPeripherySurface" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_brushPeripherySurface' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_brushStartSide" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_brushStartSide' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_brushSurface" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_brushSurface' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_brushSurfaceHighlighted" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_brushSurfaceHighlighted' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_center" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_center' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="center" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'center' in member name 'PieSlice.m_center' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_centerBelow" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_centerBelow' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="center" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'center' in member name 'PieSlice.m_centerBelow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_endSide" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="mend" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'mend' in member name 'PieSlice.m_endSide' exists as a discrete term. If your usage is intended to be single word, case it as 'mend' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_endSide' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pen" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_pen' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pointEnd" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_pointEnd' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pointEndBelow" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_pointEndBelow' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pointStart" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_pointStart' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_pointStartBelow" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_pointStartBelow' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_sliceHeight" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_sliceHeight' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_startAngle" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_startAngle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_startSide" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_startSide' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_sweepAngle" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PieSlice.m_sweepAngle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PeripheralPoint(System.Single,System.Single,System.Single,System.Single,System.Single)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Center" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 20:21:33Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="799">In method 'PieSlice.PeripheralPoint(float, float, float, float, float)', correct the spelling of 'Center' in parameter name 'xCenter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="799">In method 'PieSlice.PeripheralPoint(float, float, float, float, float)', correct the spelling of 'Center' in parameter name 'yCenter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="799">In method 'PieSlice.PeripheralPoint(float, float, float, float, float)', correct the spelling of 'x' in parameter name 'xCenter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="799">In method 'PieSlice.PeripheralPoint(float, float, float, float, float)', correct the spelling of 'y' in parameter name 'yCenter' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="799">The 'this' parameter (or 'Me' in Visual Basic) of 'PieSlice.PeripheralPoint(float, float, float, float, float)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Split(System.Single)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="transformedSplitAngle" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.PieChart" File="PieSlice.cs" Line="395">'PieSlice.Split(float)' declares a variable, 'transformedSplitAngle', of type 'float', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Quadrilateral" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Empty" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Quadrilateral.Empty' or change the field to one that is an immutable reference type. If the reference type 'Quadrilateral' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../EVEMon/bin/x86/Debug/EVEMon.Sales.dll">
   <Modules>
    <Module Name="evemon.sales.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EVEMon.Sales.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EVEMon.Sales.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'EVEMon.Sales.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EVEMon.Sales">
       <Types>
        <Type Name="BattleclinicParser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Battleclinic" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Battleclinic' in type name 'BattleclinicParser'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CXIParser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CXI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CXI' in type name 'CXIParser' by changing it to 'Cxi'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DefaultMineralParserAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'DefaultMineralParserAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="RemoveSetter" Certainty="95" Level="Error">Remove the property setter from 'DefaultMineralParserAttribute.Name' or reduce its accessibility because it corresponds to positional argument 'name'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Specify AttributeUsage on 'DefaultMineralParserAttribute'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IMineralParser" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CourtesyUrl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'IMineralParser.CourtesyUrl' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPrices()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'IMineralParser.GetPrices()' doesn't nest generic type 'IEnumerable&lt;Pair&lt;string, decimal&gt;&gt;'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'IMineralParser.GetPrices()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MatariParser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Matari" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Matari' in type name 'MatariParser'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MineralDataRequest" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralDataRequest.cs" Line="34">Initialize all static fields in 'MineralDataRequest' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCourtesyUrl(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralDataRequest.cs" Line="99">Change the return type of 'MineralDataRequest.GetCourtesyUrl(string)' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPrices(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralDataRequest.cs" Line="67">Consider a design where 'MineralDataRequest.GetPrices(string)' doesn't nest generic type 'IEnumerable&lt;Pair&lt;string, decimal&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parsers" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'MineralDataRequest.Parsers' doesn't nest generic type 'IEnumerable&lt;Pair&lt;string, IMineralParser&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MineralParserException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'MineralParserException': protected MineralParserException(SerializationInfo, StreamingContext).</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'MineralParserException': public MineralParserException().</Issue>
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'MineralParserException': public MineralParserException(String, Exception).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'MineralParserException' as this type implements ISerializable.</Issue>
          </Message>
          <Message TypeName="TypesShouldNotExtendCertainBaseTypes" Category="Microsoft.Design" CheckId="CA1058" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="System.ApplicationException" Certainty="75" Level="Error">Change the base type of 'MineralParserException' so that it no longer extends 'ApplicationException'. This base exception type does not provide any additional value for framework classes. Extend 'System.Exception' or an existing unsealed exception type instead. Do not create a new exception base type unless there is specific value in enabling the creation of a catch handler for an entire class of exceptions.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MineralTile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#groupBox1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.groupBox1' is a member of type 'MineralTile', which is serializable, but is of type 'GroupBox', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.groupBox1'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#icon" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.icon' is a member of type 'MineralTile', which is serializable, but is of type 'PictureBox', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.icon'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#label1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.label1' is a member of type 'MineralTile', which is serializable, but is of type 'Label', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.label1'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lblLastPrice" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.lblLastPrice' is a member of type 'MineralTile', which is serializable, but is of type 'Label', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.lblLastPrice'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lblQuantity" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.lblQuantity' is a member of type 'MineralTile', which is serializable, but is of type 'Label', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.lblQuantity'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MineralName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_MineralName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="39">Modify 'MineralTile.MineralName.set(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#PricePerUnit" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_PricePerUnit()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Decimal.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="63">Because the behavior of 'decimal.Parse(string)' could vary based on the current user's locale settings, replace this call in 'MineralTile.PricePerUnit.get()' with a call to 'decimal.Parse(string, IFormatProvider)'. If the result of 'decimal.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_PricePerUnit(System.Decimal)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="64">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MineralTile.PricePerUnit.set(decimal)' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Quantity" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Quantity()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="57">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'MineralTile.Quantity.get()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Quantity(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
               <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="58">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'MineralTile.Quantity.set(int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#tableLayoutPanel1" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.tableLayoutPanel1' is a member of type 'MineralTile', which is serializable, but is of type 'TableLayoutPanel', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.tableLayoutPanel1'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbSubtotal" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.tbSubtotal' is a member of type 'MineralTile', which is serializable, but is of type 'TextBox', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.tbSubtotal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtLastSell" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.txtLastSell' is a member of type 'MineralTile', which is serializable, but is of type 'TextBox', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.txtLastSell'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtStock" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'MineralTile.txtStock' is a member of type 'MineralTile', which is serializable, but is of type 'TextBox', which is not serializable. Add the NonSerializedAttribute to 'MineralTile.txtStock'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateSubtotal()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="93">Modify 'MineralTile.UpdateSubtotal()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Decimal.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="88">Because the behavior of 'decimal.Parse(string)' could vary based on the current user's locale settings, replace this call in 'MineralTile.UpdateSubtotal()' with a call to 'decimal.Parse(string, IFormatProvider)'. If the result of 'decimal.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Decimal.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="98">Because the behavior of 'decimal.ToString(string)' could vary based on the current user's locale settings, replace this call in 'MineralTile.UpdateSubtotal()' with a call to 'decimal.ToString(string, IFormatProvider)'. If the result of 'decimal.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralTile.cs" Line="89">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'MineralTile.UpdateSubtotal()' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MineralWorksheet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#bckgrndWrkrGetPrices_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralWorksheet.cs" Line="110">Change 'MineralWorksheet.bckgrndWrkrGetPrices_RunWorkerCompleted(object, RunWorkerCompletedEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#copyUnformattedTotalToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Decimal.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralWorksheet.cs" Line="215">Because the behavior of 'decimal.ToString()' could vary based on the current user's locale settings, replace this call in 'MineralWorksheet.copyUnformattedTotalToolStripMenuItem_Click(object, EventArgs)' with a call to 'decimal.ToString(IFormatProvider)'. If the result of 'decimal.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tslCourtesy_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Sales" File="MineralWorksheet.cs" Line="169">Modify 'MineralWorksheet.tslCourtesy_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../EVEMon/bin/x86/Debug/EVEMon.Watchdog.exe">
   <Modules>
    <Module Name="evemon.watchdog.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EVEMon.Watchdog.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'EVE' in assembly name 'EVEMon.Watchdog.exe' by changing it to 'Eve'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EVEMon.Watchdog.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'EVEMon.Watchdog.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EVEMon.Watchdog">
       <Types>
        <Type Name="WatchdogWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsEvemonRunning" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Watchdog" File="WatchdogWindow.cs" Line="44">The 'this' parameter (or 'Me' in Visual Basic) of 'WatchdogWindow.IsEvemonRunning' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StartProcess(System.String,System.String[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.Watchdog" File="WatchdogWindow.cs" Line="96">The 'this' parameter (or 'Me' in Visual Basic) of 'WatchdogWindow.StartProcess(string, string[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../EVEMon/bin/x86/Debug/EVEMon.WindowsApi.dll">
   <Modules>
    <Module Name="evemon.windowsapi.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'EVEMon.WindowsApi.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="EVE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'EVE' in assembly name 'EVEMon.WindowsApi.dll' by changing it to 'Eve'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'EVEMon.WindowsApi.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="EVEMon.WindowsApi">
       <Types>
        <Type Name="OsFeatureCheck" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Os" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Os' in type name 'OsFeatureCheck' by changing it to 'OS'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Windows7" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetProcessAppID(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-06-21 19:15:57Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\Users\RichardSlater\Documents\Projects\EVEMon\EVEMon.WindowsApi" File="Windows7.cs" Line="19">Correct the casing of 'ID' in member name 'Windows7.SetProcessAppID(string)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105">
   <Name>Array fields should not be read only</Name>
   <Description>Read-only fields that reference arrays might not give the intended effect. Setting a field which references an array to read-only prevents the value of the field from being changed. Note that elements in the array can be changed. You can ignore this violation if protecting the contents of the array is not a concern.</Description>
   <Resolution Name="Default">Either replace {0} with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182299(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="SecurityRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
   <Name>Collections should implement generic interface</Name>
   <Description>Non-generic strongly typed collections should implement one of the generic collection interfaces. This will allow better integration of the collection with generic API.</Description>
   <Resolution Name="Default">{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182132(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeCompoundWord">The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Resolution Name="TooMany">Remove all but the first two parameters of {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DefineAccessorsForAttributeArguments" Category="Microsoft.Design" CheckId="CA1019">
   <Name>Define accessors for attribute arguments</Name>
   <Description>Provide accessors for both named and positional arguments. Each positional argument on an attribute should declare a read-only property with the same name (but different casing). Each named argument should provide a read/write property with the same name (but different casing).</Description>
   <Resolution Name="Default">Add a public read-only property accessor for positional argument {0} of Attribute {1}.</Resolution>
   <Resolution Name="RemoveSetter">Remove the property setter from {0} or reduce its accessibility because it corresponds to positional argument {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182136(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="SecurityRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
   <Name>Do not declare static members on generic types</Name>
   <Description>The syntax for calling static members on generic types is complex as the type parameter has to be specified for each call.</Description>
   <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182139(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
   <Resolution Name="StringCreation">{0} calls {1} but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Resolution>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>Do not indirectly expose methods with link demands</Name>
   <Description>Do not wrap a method protected by a LinkDemand with a method that does not perform a security check. A LinkDemand checks the permissions of the immediate caller rather than checking the permissions of all callers in the call stack. In this case, the permissions of the wrapper method will be checked. If the wrapper method does not, itself, check the permissions of callers higher in the call stack, malicious code might be able to execute the wrapped function even though it lacks permission to do so.</Description>
   <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182303(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="SecurityRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="NoAllowedExceptions">{0} creates an exception of type {1}. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Resolution>
   <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="Reserved">{0} creates an exception of type {1}, an exception type that is reserved by the runtime and should never be raised by managed code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotUseTimersThatPreventPowerStateChanges" Category="Microsoft.Mobility" CheckId="CA1601">
   <Name>Do not use timers that prevent power state changes</Name>
   <Description>Do not poll more often than or utilize timers that fire more frequently than once per second. Higher frequency periodic activity will keep the CPU busy and interfere with power-saving idle timers that turn off the display and hard disks.</Description>
   <Resolution Name="Default">Modify the call to {0} in method {1} to set the timer interval to a value that's greater than or equal to one second.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182230(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="MobilityRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
   <Name>Enums should have zero value</Name>
   <Description>An enum should generally have a zero value. If the enum is not decorated with the Flags attribute, it should have a member with a value of zero that represents the empty state. Optionally, this value is named 'None'. For a Flags-attributed enum, a zero-valued member is optional and, if it exists, should always be named 'None'. This value should indicate that no values have been set in the enum. Using a zero-valued member for other purposes is contrary to the use of the Flags attribute in that the bitwise AND and OR operators are useless with the member.</Description>
   <Resolution Name="FlagsRename">In enum {0}, change the name of {1} to 'None'.</Resolution>
   <Resolution Name="NotFlagsNoZeroValue">Add a member to {0} that has a value of zero with a suggested name of 'None'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182149(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="EventsShouldNotHaveBeforeOrAfterPrefix" Category="Microsoft.Naming" CheckId="CA1713">
   <Name>Events should not have before or after prefix</Name>
   <Description>Use present and past tense for pre-events and post-events, instead of using 'Before' and 'After'. For example, use Closing and Closed rather than BeforeClose and AfterClose.</Description>
   <Resolution Name="After">Replace {0} with a past tense version of the event name.</Resolution>
   <Resolution Name="Before">Replace {0} with a present tense version of the event name.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182238(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
   <Name>Flags enums should have plural names</Name>
   <Description>An enumeration marked with FlagsAttribute should have a plural name.</Description>
   <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264486(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
   <Name>Generic methods should provide type parameter</Name>
   <Description>Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don't support inference.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182150(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ICollectionImplementationsHaveStronglyTypedMembers" Category="Microsoft.Design" CheckId="CA1035">
   <Name>ICollection implementations have strongly typed members</Name>
   <Description>Types that implement ICollection should also provide a version of CopyTo with the first parameter set to a strong type, namely a type other than an array of objects or System.Array. Implement the interface member explicitly and make the strongly typed version public. It is safe to ignore violations of this rule when you are implementing a new object-based collection, such as a binary tree, where types based on your collection will determine what the strong type is. These types should expose strongly typed members.</Description>
   <Resolution Name="Default">{0} should provide a strongly typed implementation of ICollection.CopyTo.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/49stb304(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="DelegateParameter">In delegate {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="DelegateParameterMoreMeaningfulName">In delegate {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberMoreMeaningfulName">Consider providing a more meaningful name than member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldDifferByMoreThanCase" Category="Microsoft.Naming" CheckId="CA1708">
   <Name>Identifiers should differ by more than case</Name>
   <Description>Do not use names that require case sensitivity for uniqueness. Components must be fully usable from both case-sensitive and case-insensitive languages. Since case-insensitive languages cannot distinguish between two names within the same context that differ only by case, components must avoid this situation.</Description>
   <Resolution Name="Member">Change member names {0} and '{1}' so that they differ by more than case.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182242(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
   <Name>Identifiers should have correct prefix</Name>
   <Description>Prefix interface names with the letter 'I' to indicate that the type is an interface, as in IFormattable. Prefix generic type parameter names with the letter 'T' and provide them with descriptive names, as in Dictionary&lt;TKey, TValue&gt;, unless a single 'T' is completely self-explanatory, as in Collection&lt;T&gt;. Use Pascal casing for both interface and type parameter names. Use abbreviations sparingly. Do not use the underscore character. Do use similar names when defining a class/interface pair where the class is a standard implementation of the interface. The names should differ only by the letter I prefixed on the interface name, as with Component and IComponent.</Description>
   <Resolution Name="TypeTypeParameter">On type {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182243(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Resolution Name="LanguageSpecificMemberParameter">In member {0}, consider replacing the language-specific data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
   <Name>Implement standard exception constructors</Name>
   <Description>Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</Description>
   <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182151(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectMessage">Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Resolution>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235">
   <Name>Mark all non-serializable fields</Name>
   <Description>All fields that cannot be serialized directly should have the NonSerializedAttribute. Types that have the SerializableAttribute should not have fields of types that do not have the SerializableAttribute unless the fields are marked with the NonSerializedAttribute.</Description>
   <Resolution Name="Default">Field {0} is a member of type {1}, which is serializable, but is of type {2}, which is not serializable. Add the NonSerializedAttribute to {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182349(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018">
   <Name>Mark attributes with AttributeUsageAttribute</Name>
   <Description>The AttributeUsage attribute specifies the targets that are valid for the attribute (see System.AttributeTargets), whether an attribute can appear on a target more than once, and whether the attribute is inheritable.</Description>
   <Resolution Name="Default">Specify AttributeUsage on {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182158(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error, Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
   <Name>Mark boolean P/Invoke arguments with MarshalAs</Name>
   <Description>All boolean P/Invoke parameters and return types should be explicitly marked with the MarshalAs attribute. By default, the system will marshal all booleans as 4-byte UnmanagedType.Bool. This is the correct behavior for Win32 'BOOL' arguments but incorrect for C++ 'bool' arguments, which should be marshaled as 1-byte UnmanagedType.U1. For code maintainability reasons, always explicitly specify the marshaling information for boolean arguments and return values.</Description>
   <Resolution Name="Default">Add the MarshalAsAttribute to parameter {0} of P/Invoke {1}. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Resolution Name="Return">Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182206(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="InteroperabilityRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027">
   <Name>Mark enums with FlagsAttribute</Name>
   <Description>The enumeration appears to be made up of combinable flags. If this true, apply the Flags attribute to the enumeration.</Description>
   <Resolution Name="Default">The constituent members of {0} appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182159(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
   <Name>Mark ISerializable types with SerializableAttribute</Name>
   <Description>The System.Runtime.Serialization.ISerializable interface allows the type to customize its serialization, while the Serializable attribute enables the runtime to recognize the type as being serializable.</Description>
   <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182350(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059">
   <Name>Members should not expose certain concrete types</Name>
   <Description>Members should not expose certain concrete types.</Description>
   <Resolution Name="Xml">Modify member {0} so that it no longer exposes the concrete type {1}. Use IXPathNavigable to represent XML data sources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182160(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>Normalize strings to uppercase</Name>
   <Description>Strings should be normalized to upper-case.</Description>
   <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264487(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
   <Name>Operations should not overflow</Name>
   <Description>Arithmetic operations should not be done without first validating the operands to prevent overflow.</Description>
   <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182354(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="OperatorOverloadsHaveNamedAlternates" Category="Microsoft.Usage" CheckId="CA2225">
   <Name>Operator overloads have named alternates</Name>
   <Description>When redefining operators, implement named methods to provide access to the operator functionality from languages that do not support operator overloading. For example, the functionality of the '+' operator should also be accessible using an 'Add' method.</Description>
   <Resolution Name="Multiple">Provide a method named '{0}' or '{1}' as an alternate for operator {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182355(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideLinkDemandsShouldBeIdenticalToBase" Category="Microsoft.Security" CheckId="CA2123">
   <Name>Override link demands should be identical to base</Name>
   <Description>If a virtual method has a LinkDemand, in many cases, so should any override of it, and if an override has a LinkDemand, so should the overridden virtual method. Because it is possible to call any of the overrides of a virtual method explicitly, they should all have the same LinkDemand status or, if not, should be reviewed. This also applies to LinkDemand security checks for methods that part of an interface implementation, because the caller might use an interface-typed reference to access the method.</Description>
   <Resolution Name="BaseOnly">Add the following security attribute to {0} in order to match a LinkDemand on base method {1}:  {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182305(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="SecurityTransparencyRules.dll" Version="4.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036">
   <Name>Override methods on comparable types</Name>
   <Description>Types that implement IComparable should redefine Equals and comparison operators to keep the meanings of less than, greater than, and equals consistent throughout the type.</Description>
   <Resolution Name="Equals">{0} should override Equals since it implements IComparable.</Resolution>
   <Resolution Name="Operator">{0} should define operator '{1}' since it implements IComparable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182163(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</Resolution>
   <Resolution Name="Return">As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="PortabilityRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes should not be visible</Name>
   <Description>Interop layer should not be public. The DllImport attribute should not be applied to publicly accessible members (public or protected).</Description>
   <Resolution Name="Default">Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="InteroperabilityRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
   <Name>Parameter names should not match member names</Name>
   <Description>Parameter names should be distinct from member names.</Description>
   <Resolution Name="Default">Change either member or parameter name {0} so that one differs from the other.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182252(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044">
   <Name>Properties should not be write only</Name>
   <Description>Write-only properties usually indicate a flawed design.</Description>
   <Resolution Name="AddGetter">Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182165(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Resolution Name="SameType">The property name {0} is confusing given the existence of method {1}. Rename or remove one of these members.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TransparentMethodsShouldNotDemandFxCopRule" Category="Microsoft.Security" CheckId="CA2143">
   <Name>Transparent methods should not use security demands</Name>
   <Description>Security transparent code should not be responsible for verifying the security of an operation, and therefore should not demand permissions.  Any code which is performing security checks, such as security demands, should be safe-critical instead.</Description>
   <Resolution Name="Declarative">{0}, a transparent type or method, contains a declarative security demand for {1}.  {0} should be made security-safe critical or the demand should be removed from the transparent code.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/dd997566(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalWarning</MessageLevel>
   <File Name="SecurityTransparencyRules.dll" Version="4.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="Default">The type name {0} conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.</Resolution>
   <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TypesShouldNotExtendCertainBaseTypes" Category="Microsoft.Design" CheckId="CA1058">
   <Name>Types should not extend certain base types</Name>
   <Description>It is best not to extend some base types or to prefer extending better alternatives to those base types.</Description>
   <Resolution Name="System.ApplicationException">Change the base type of {0} so that it no longer extends {1}. This base exception type does not provide any additional value for framework classes. Extend 'System.Exception' or an existing unsealed exception type instead. Do not create a new exception base type unless there is specific value in enabling the creation of a catch handler for an entire class of exceptions.</Resolution>
   <Resolution Name="System.Collections.CollectionBase">Change the base type of {0} from {1} to its generic equivalent 'System.Collections.ObjectModel.Collection'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182171(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Resolution Name="NonBreaking">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
   <Name>URI properties should not be strings</Name>
   <Description>If a property name contains "uri" or "url" or "urn" and it's typed as string, it should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182175(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
   <Name>URI return values should not be strings</Name>
   <Description>If a function name contains "uri" or "url" or "urn" and the return type is string, the return type should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182176(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003">
   <Name>Use generic event handler instances</Name>
   <Description>Do not declare new delegates to be used as event handlers when targeting a version of the .NET Framework that supports generics. Use an instance EventHandler&lt;T&gt; instead.</Description>
   <Resolution Name="Default">Remove {0} and replace its usage with EventHandler&lt;T&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182178(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UseIntegralOrStringArgumentForIndexers" Category="Microsoft.Design" CheckId="CA1043">
   <Name>Use integral or string argument for indexers</Name>
   <Description>Indexers (indexed properties) should use either integer or string types for indexing values. These types are easy to use and commonly used for indexing data structures; using other types can significantly reduce the usability of the library. For example, public char this [int index] is the C# signature for the String type's indexer.</Description>
   <Resolution Name="Default">Use an integral value or string as the parameter to indexer {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182180(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802">
   <Name>Use literals where appropriate</Name>
   <Description>Prefer literals over InitOnly fields if values do not have to be calculated at runtime.</Description>
   <Resolution Name="Default">Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182280(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, replace the term '{1}' in parameter name {2} with the preferred alternate '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
