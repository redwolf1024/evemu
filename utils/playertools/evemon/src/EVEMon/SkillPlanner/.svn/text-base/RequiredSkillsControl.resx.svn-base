<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>100, 17</value>
  </metadata>
  <metadata name="ilIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAk
        DAAAAk1TRnQBSQFMAgEBBAEAARABAQEQAQEBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AqgACYgFYAekBjAFt
        AScB/wGPAW8BKAH/AZEBcQEpAf8BkwFzASsB/wGVAYEBKQH/AZgBggEsAf8BnAGHATAB/wGjAY4BOAH/
        AakBlwFAAf8BsAGdAUoB/wG1AZ8BTgH/AywBQ8wAAWMBYgFYAekBowGUAVUB/wGsAZ0BYAH/AbUBpwFt
        Af8BtwGqAXAB/wGsAZwBWQH/AagBlwFOAf8BrQGcAVMB/wG0AaMBWgH/AbsBqgFjAf8BwgGyAWwB/wG3
        AaUBVgH/AywBQ1AAAzIBUANEAXkDEQEXFAADMgFQA0QBegMSARgcAAMQARYDRQF9AyQBNigAAWMBYgFY
        AekBtwGsAYQB/wHRAcoBrwH/AdwB1gHAAf8B4QHbAcgB/wG0AaUBZwH/AaYBlAFLAf8BqQGXAU0B/wGv
        AZ4BVAH/AbcBpgFdAf8BvgGuAWcB/wG1AaIBUgH/AywBQxgAAwkBDAMuAUcDQAFwA0IBdQM2AVkDEgEY
        IAACQgFZAfUCAAL/AlEBUgGnEAADMQFPAikBcgH6AgAC/wNDAXgcAANSAakBnQH/AZ0B/wNeAd0DAQEC
        JAABYwFiAVgB6QGfAZABUAH/AaUBlwFXAf8BrAGeAWAB/wGwAaIBZAH/AakBmQFUAf8BpQGUAUoB/wGo
        AZYBTAH/Aa4BnAFSAf8BtQGjAVoB/wG8AasBZAH/AbMBnwFPAf8DLAFDFAADBQEHAVgCWwHGAQABtwL/
        AQABsQL/AQABqgL/AQABowL/AT4BXAFjAfgDMQFOHAACWQFbAcMCAAL/AkABqAH9AlEBUgGnAxEBFwQA
        AzsBZQJNAXIB+gIAAv8CQQFrAfkDLwFKFAADEAEWA1IBqQF/AaYBfgH+AY0B3wGNAf8BkwH7AZMB/wNb
        AcsDFAEbIAABaAFlAWIB6QGmAZkBXQH/AaYBmAFaAf8BqQGbAVwB/wGrAZwBXQH/AagBmAFTAf8BrgGe
        AVwB/wGuAZ4BWgH/AbUBpQFjAf8BtwGoAWIB/wG9Aa4BaQH/AbABnwFLAf8DKwFCEAADHAEnAVoCXwHb
        AVcCXwHoAUYBRQFGAX8DLAFDAyMBMwM9AWkBWAJcAdEDXQHtAzEBThgAAxQBGwFWAVQBVgHuAiEC/wI8
        Av8BUgFRAVIBpwMxAU4CTQFyAfoCLAL/AUcBQQFrAfkDKAE9GAADUgGpAUkB/wFJAf8BTQFyAU0B+gMt
        AUUDZAHnAYEB/wGBAf8DUQGiIAABaQFoAWIB6QHQAckBsAH/AdUBzgG3Af8BxgG8AZsB/wHNAcQBpgH/
        AcEBtgGPAf8BzwHGAacB/wHJAb4BmQH/AdQBywGtAf8BwwG2AYcB/wG9Aa4BawH/AZcBgwFVAf4DKgFA
        EAADTgGUAQABxQL/AzMBUhQAAVgCXAHRAT4BXAFjAfgDEgEYGAADFAEbAVoBVwFaAcUCVwL/Al8BiAH7
        A2IB9gKDAv8CTQFxAfoDOAFcHAABWwFiAUkB9gFNAXEBTQH6AzgBXAQAAzUBVQFuAZcBaAH+AV8BiAFc
        AfsBSAJHAYMDBgEIGAABagFoAWIB6QHSAcsBswH/AdMBzQG2Af8BwAG2AZMB/wGvAaIBZgH/AboBrQGC
        Af8BuAGqAXAB/wG/AbIBhgH/AcABswGHAf8BxAG3AYoB/wG+Aa4BbgH/AawBmAFEAf8DKgFBEAABWwJe
        AdkDWQHHAwQBBhQAAz0BaQEAAY8C/wM2AVkcAAMUARsBXAJVAeoCrAL/ArgC/wNZAfUDKAE9IAADMwFT
        AykBPwwAA0QBewE6AekBNwH/ASoB/wEqAf8DOwFlGAACaAFiAekBywHDAagB/wHUAc4BtwH/Ac4BxwGt
        Af8BvgG0AY8B/wG2AaoBcgH/Ab8BswGKAf8BtgGoAWsB/wG4AaoBbQH/AcABswGGAf8BuwGrAWoB/wGn
        AZUBPwH/AyoBQRAAAVICZQH0AzwBZhgAAyMBMwEAAY8C/wNCAXUcAAM7AWQCXAFuAfgCowL/AqwC/wGK
        AYMBqAH9AVQBUgFUAaYDEAEWNAACUgFQAaMBHQH/AR0B/wFaAWEBWgHkAywBQxQAAWoBaAFiAekB1QHP
        AboB/wHgAdsBywH/AdkB1AHAAf8B2wHWAcMB/wHYAdIBvAH/AcEBtQGOAf8BwAG0AYsB/wHCAbUBiwH/
        AcUBuQGPAf8BrwGdAVQB/wGQAX8BSwH+AykBPxAAAVgCYgHvA0gBhhgAAywBQwEAAY8C/wNAAXAYAAMx
        AU4BXgFHAW4B+QJNAv8BagFnAWsB+QFkAVMBZAHxAlcC/wI7Av8BUQFPAVMBpTQAAw8BFAFZAWcBWQHy
        AQQB/wEEAf8DWAHjAyIBMhAAAWoBaQFjAekB1AHOAbcB/wHmAeIB1QH/AecB5AHXAf8B5wHjAdcB/wHb
        AdYBxAH/AeAB2wHKAf8B2AHRAbkB/wHTAcoBrAH/Ab8BsgGEAf8BtAGkAWAB/wGMAX8BRAH+AykBPxAA
        A1kBxwNcAecDCAELFAABRgFFAUYBfwEAAY8C/wMuAUcUAAM7AWQCQQFuAfkCFwL/Ak0BcQH6AzgBXAMU
        ARwBWwFYAVsBxgIhAv8CKwF+AfwCTwFTAaUDEAEWMAADGgEkAVgBXgFYAd0BAAH/AQAB/wNAAW4QAAFr
        AWoBZwHpAdYB0AG6Af8B0QHLAbMB/wHQAckBsQH/Ac8ByAGvAf8BzgHHAa0B/wHPAcgBrwH/AdABygGx
        Af8BxwG+AZ4B/wG1AacBaQH/Aa0BnQFVAf8BiQF/AUEB/gMpAT8QAAE/AkABbwEAAcUC/wNMAZIDCAEL
        CAADBAEGAzMBUgFXAl8B6AJYAVsBxgMJAQwUAAJMAV8B8wIAAv8BMgEpAXEB+gMpAT4IAAMUARwBUwFO
        AV0B8AIAAv8CAAL/A0IBdTQAAzEBTgNaAdMDEwEaEAACbAFqAekB4AHcAcwB/wHbAdUBwgH/AdAByQGx
        Af8BywHEAagB/wHKAcIBpgH/AcoBwgGmAf8BygHCAaYB/wHKAcIBpgH/AcgBvwGhAf8BvgGzAYoB/wGO
        AX8BUAH+AykBPxAAAwMBBANWAbYBAAG+Av8DXAHnA0gBhgM8AWYDWQHHAQABnQL/AVoCXwHbAwUBBxgA
        AlkBWwHEAlIBZQH0AzgBXRAAAxQBHAJZAVsBxAJZAWcB8gMvAUpQAAJsAWsB6QHqAecB3AH/AeMB3gHP
        Af8B3gHaAckB/wHfAdsBygH/AdgB0gG9Af8BygHCAaYB/wHKAcIBpgH/AcoBwgGmAf8BygHCAaYB/wHK
        AcIBpgH/AZgBjwF4AfoDJAE2FAADAwEEAT8CQAFvA1kBxwFYAmIB7wFSAmUB9AFaAl4B2ANOAZQDHAEn
        mAABbgFtAWwB6QHzAfEB6wH/Ae0B6gHhAf8B5wHjAdcB/wHaAdUBwgH/Ad4B2QHHAf8B2gHUAcAB/wHM
        AcUBqgH/AcsBxAGpAf8BywHEAakB/wGVAZMBiAH7A0UBfAMBAQLMAANuAekB2QHYAdQB/wHQAcwBwQH/
        AcQBvgGrAf8BuQGzAZYB/wGzAakBiAH/AbMBqQGIAf8BswGpAYgB/wGzAakBiAH/AZcBiwF4AfwDRQF8
        AwEBAtAAA1gBwQNZAb4DVgGxA1QBrANTAaoDUgGpA1IBqQNSAakDUwGoAz0BaAMBAQJMAAFCAU0BPgcA
        AT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gQAE/wHAAQEG/wHAAQEC/wLjAfgB/wHAAQEB+AEf
        AeMBwwH4AX8BwAEBAfABDwHgAYMB4AE/AcABAQHgAQcB4AEHAeABPwHAAQEC4wHwAQ8B4gEPAcABAQLj
        AfgBHwHnAQ8BwAEBAecB4wH4AQ8B/wGHAcABAQHnAeMB8AEPAf8BgwHAAQEC4wHgAQMB/wHDAcABAQHh
        AYMB4QGDAf8B4wHAAQEB4AEHAeMBwwL/AcABAQHwAQ8E/wHAAQEG/wHAAQMG/wHAAQcC/ws=
</value>
  </data>
</root>