<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="IconPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAAC/AAAAvwFipAVzAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAAB7NJREFUWEe9lwlQlPcZxt/d5b5ZzuVS5JCgAakJsQaYaLB0piIxpmp0
        0mgqSUwyjSEaTSOZkqnNNNFGHd1qo0YCitygIuFQEAyWgsvRKoIcct8BlUNAffr+v42b2OYAcnwzDzN8
        M7vP733e9/1/3xIAmo7yiAJziSoziKJziGTT+Q7xmemaG+fL5Z2tT4fhc0c77CP6/c8NEFXh64Wx5Hh0
        RK5BGlGtkshkOhBTToCjN+Hqu3rfeAmorcXoETWKnByxi2jjzwWwuWKuN8bTEoDKSuDCBbQ9twKJRNes
        p5HClBLg6k1zFfKevs1cbHU1cPEicPYsRj7cgXPODviA6LWppjAlAJ72rRV+szHOvUdpKVBQAJw+DSQm
        omVlOOKIGlyIzKYCMWkANjfLUSj6+qJeBsrKgMJC4MwZIDkZiI3F8LYo5DjZYwfR6z8JQDbR2xX+D2E8
        4ShQVARkZwPl5UBKCnDgALBrF64vW4IjRE1eROaThZhUAmxunq2n+EKqnocOOTnaFoiruRn46CNgxw4M
        RT6PLJUd3iOK+lEBsoi2VwT4Yjz+MJCXB2RmYry3F1VVVZiYmACOcirbtwNRUWj8VQgOEDW7E1lMBuJ7
        E2Bzyyw9vQGpep54nDwJlJQgMjKSz1HC7NmzMSQ24s03gY0bcXP5UmQ62iKaaMuPAnCK6N2KX8zBxNGD
        2olPSgIGBxESEiIBCJ0/fx7YuRNYtw5YuRL1wYHYS9Tqw/DfB/GdCbC51Wl9vcF+cerdn3gxgHyFhYXp
        AIqLi4HLl4HVq4HwcNwMXoAUB1u8TbTtBwFkEsVUPDIXEx/vA1JTgbg4YGBAAoiIiNABaDQa7UBuY7/Q
        UGDhQtTN98NOonZfIuvvgvjWBNjc+qS+/s0+UX16OhAfj7tiBr68Vq1apQOoq6vT3q2oAIKCgIAA3PDx
        RKKdEpuJ3pkWQDrRnzWPPoyJv+8Fjh8HDh3CWHe3DmD9+vU6gPb2dt39exs2AD4+4OnEVT8fvE/UMZfI
        5tsgvjEBNldmGOjfknqfwA+dw4cxxjMwOjqqM9q0aZMO4MaNG7r7E7whwlxo0NsDx2ytsYkHeUoAqUR/
        0QT64Yswf4y+EQns34+BpiYMDw/j7t27kllMTIwO4M6dOzqA27dvY2LNGgzOcoPG3hRlczwRQ9TtR2T7
        TRD/lwCb26YZ6A+1P7MEvZ5ydHnI0bH1RfT09ODWrVvag4evPXv2SABGRkZfxX/vHkZGRtCRm41zVjLk
        WcrwuZsdYpVWeJXovUkBJBP9VfOYP3oWuKKbAdq9DNB0sRhdXV28/oMQFd5jozjeCAFgaysK017j4+MS
        ZC+fkiVhwcixkCGb9U9vd2wn6uEU7P8X4oEE2Nwu1UB/uG1FKHrYvJOrb3z5t2hoaIAYtP7+fgwNDUkp
        tLa2QqFQYMsWceBBao2YEQEpYGsyUpFtLkOWGaFQpcQRKwu8xIPN0A94PvAPv9V8qFnA1T/mIkXf7m2I
        msJ8XLt2TTIUbRADJ4wEhAATkQvzsbExqXoB2dHRgcbGRpwLfRynTAmZptwKdxe8RdTnT+Tw9RR0AGzu
        kGxoMCKqF9F3zJKj4dXVfMBdxtWrV3H9+nV0dnZKBsJIgKjVaj4e4qW2iAEV1QtIASugNYkJyDQhpBkT
        8uws8Q8Lc7xAxJv5VQo6gASiv11aMA/dgU5S9G3eRqgpOicBCIlq29raJIMBPg0PHjyo24JSfjQL876+
        Pqn6Jt4YAS0+lxsaghQjQpKhDEUuKrGS/fOIVPdTkADY3DHJ0GC09ekntdFL1T+rMxdfVMtvwCIFYSCG
        bPfu3RKATCbjV4NSyVz0vqWlBfX19brPXko6weaEBANClpUZ1GameI6IXx+1KUh/jhHtLv9lALofVUnR
        t7rLUff+Hx8AuHLlivTFwkBAiHasXbsW0dHRUirCXCQkqhew95OrZrgTbH5MnxCnRyjghxSv5ACn4CQB
        sLnTCUPD263Ln9RGzwDNM3n6PY1QG/E4ap4KxpWIYPx7WTCql4Wg+qknUBWxCJURi6FhlYcvRunSxSj5
        zSIU//oJFIaFID80CLmLg5DNSp/lguNfmh9VEDLMTLDPxBirifinBF+fEu0tXxiAzvmOUvQtXH3TDG6B
        mxy1rnLUOMvxHycZqlQyaBxkKLPnvbbjqbbhniplKLCWIZ8PHLHzZ3jlxNRn8OClSn3XRh/Plcey+RE5
        4RCHnq+0xotEgw8TuVCsQvGv9jXh6Ax0Qfsjzmid74TmeSo0+qtQ7+eIujkOqPG1x2UfO1R726LS0waX
        PGxQNlOJ0hnWKHG1xgVnK5xXWaLA0QJn7c2Ra2uGz5Sm3HMTnLI0QYa5MdJMjZBibIQkI0PkWpjhA0ND
        BBEtJSZK/8xrJs7O8UKerydyH/JAjs8sZPPplcX3T3vOwEkPN2S6uyJ9pgtS3ZyR4qpCkosjTvCPkQSV
        PY7xD9Q47u2n9jaI5UfwJzbWOKy0xMdWvHqW5jjAhmpzU+w31ca/h0FekctHeQ4WEb+76fNivsUPDPWf
        WO+y+NhUv8PiNxr1VtYWFj/X1VGs11l/YL3GeoW1kcUnnDqStYHFe65ex/odi6ddvZb1LIt7rl7JWsFa
        TrSfj+UlPAEW/wULDVp2EqZBtgAAAABJRU5ErkJggg==
</value>
  </data>
</root>