diff --git src/eve-server/Client.cpp src/eve-server/Client.cpp
index 76d7959..afa51af 100644
--- src/eve-server/Client.cpp
+++ src/eve-server/Client.cpp
@@ -1573,7 +1573,11 @@ bool Client::_VerifyLogin( CryptoChallengePacket& ccp )
     //sLog.Debug("Client","%s: Received Client Challenge.", GetAddress().c_str());
     //sLog.Debug("Client","Login with %s:", ccp.user_name.c_str());
 
-    if (!services().serviceDB().GetAccountInformation( ccp.user_name.c_str(),  account_info)) {
+    if (!services().serviceDB().GetAccountInformation( 
+				ccp.user_name.c_str(), 
+				ccp.user_password_hash.c_str(), 
+				account_info)) 
+	{
         goto error_login_auth_failed;
     }
 
diff --git src/eve-server/EVEServerConfig.h src/eve-server/EVEServerConfig.h
index 97ddd31..1f564c9 100644
--- src/eve-server/EVEServerConfig.h
+++ src/eve-server/EVEServerConfig.h
@@ -58,7 +58,7 @@ public:
     struct
     {
         /// Role to assign to auto created account; set to 0 to disable auto account creation.
-        uint32 autoAccountRole;
+        uint64 autoAccountRole;
         /// A message shown to every client on login.
         std::string loginMessage;
     } account;
diff --git src/eve-server/ServiceDB.cpp src/eve-server/ServiceDB.cpp
index 6338304..0853f2a 100644
--- src/eve-server/ServiceDB.cpp
+++ src/eve-server/ServiceDB.cpp
@@ -25,6 +25,7 @@
 
 #include "eve-server.h"
 
+#include "EVEServerConfig.h"
 #include "ServiceDB.h"
 
 /**
@@ -33,7 +34,7 @@
  *       role = sConfig.account.autoAccountRole;
  */
 
-bool ServiceDB::GetAccountInformation( const char* username, AccountInfo & account_info )
+bool ServiceDB::GetAccountInformation( const char* username, const char* password, AccountInfo & account_info )
 {
     std::string _username = username;
     std::string _escaped_username;
@@ -48,9 +49,22 @@ bool ServiceDB::GetAccountInformation( const char* username, AccountInfo & accou
     }
 
     DBResultRow row;
-    if (!res.GetRow( row ))
-        return false;
-
+    if (!res.GetRow( row )) {
+		// account not found, create new one if autoAccountRole is not zero (0)
+		if(sConfig.account.autoAccountRole > 0) {
+			uint32 accountID = CreateNewAccount( _username.c_str(), password, sConfig.account.autoAccountRole);
+			if( accountID > 0 ) {
+				// add new account successful, get account info again
+				bool ret = GetAccountInformation(username, password, account_info);
+				return ret;
+			}
+			else
+				return false;
+		}
+		else
+			return false;
+	}
+	
     /* when any of the text gets are NULL it will fail... I think.. */
     account_info.id         = row.GetUInt(0);
 
@@ -62,8 +76,8 @@ bool ServiceDB::GetAccountInformation( const char* username, AccountInfo & accou
 
     account_info.name       = _escaped_username;
     account_info.role       = row.GetUInt64(3);
-    account_info.online     = row.GetUInt(4);
-    account_info.banned     = row.GetUInt(5);
+    account_info.online     = row.GetBool(4);
+    account_info.banned     = row.GetBool(5);
     account_info.visits     = row.GetUInt(6);
 
     if (!row.IsNull(7))
@@ -112,8 +126,8 @@ uint32 ServiceDB::CreateNewAccount( const char* login, const char* pass, uint64
 
     DBerror err;
     if( !sDatabase.RunQueryLID( err, accountID,
-        "INSERT INTO account ( accountName, password, role )"
-        " VALUES ( '%s', PASSWORD( '%s' ), %" PRIu64 " )",
+        "INSERT INTO account ( accountName, hash, role )"
+        " VALUES ( '%s', '%s', %" PRIu64 " )",
         login, pass, role ) )
     {
         sLog.Error( "ServiceDB", "Failed to create a new account '%s': %s.", login, err.c_str() );
diff --git src/eve-server/ServiceDB.h src/eve-server/ServiceDB.h
index 503e8e6..4e1bf0b 100644
--- src/eve-server/ServiceDB.h
+++ src/eve-server/ServiceDB.h
@@ -56,7 +56,7 @@ struct AccountInfo
 class ServiceDB
 {
 public:
-    bool GetAccountInformation( const char* username, AccountInfo & account_info );
+    bool GetAccountInformation( const char* username, const char* password, AccountInfo & account_info );
     bool UpdateAccountHash( const char* username, std::string & hash );
     bool UpdateAccountInformation( const char* username, bool isOnline );
 
diff --git src/eve-server/apiserver/APIServiceManager.cpp src/eve-server/apiserver/APIServiceManager.cpp
index d9a6e64..2f8c453 100644
--- src/eve-server/apiserver/APIServiceManager.cpp
+++ src/eve-server/apiserver/APIServiceManager.cpp
@@ -144,7 +144,9 @@ bool APIServiceManager::_AuthenticateUserNamePassword(std::string username, std:
     // Query account info
     AccountInfo account_info;
     if( !services().serviceDB().GetAccountInformation(
-            username.c_str(), account_info ) )
+            username.c_str(), 
+			password.c_str(),
+			account_info ) )
         return false;
 
     // Compute pass hash
